[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 22,
      "Amoscheong97": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "[T] read"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "[T] hello"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 2
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "#Tue Jan 28 16:59:50 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Deadline Class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Deadline Class is a subclass of Task Class. It stores the description of this instance"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * as well as the date and time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the description of this Deadline object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String description of this Deadline object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return super.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the date and time of this Deadline object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String date and time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the type of this object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Used when outputting to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String The object type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *  Duke Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *  The main class to run the whole code."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private String FilePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Initialize the taskList from Storage class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        FilePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            tasks \u003d new TaskList(storage.load(), ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Find out the type of command and execute it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param input The line input by the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param tasks TaskList object to acces to list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public static void execcommand(String input, TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Split arguments to get the first index"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        String[] arguments \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        DukeCommand.valueOf(arguments[0].toUpperCase()).execute(input, tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * A method to get the file path from the Duke object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String The path of the file or the file location."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return this.FilePath;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Runs the whole code."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Greet the user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Exits when the user types \u0027bye\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        while (!line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Check for any errors in the command"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // by passing command to Parser object"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // If no errors, method checkForError()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // will returns true else return false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (new Parser(line, ui).checkForError(tasks))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Assumption : To add things into the list, the user has to"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // type a [command][description]. For example, to add"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // \"read book\" into the list, the user has to type"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // \"todo read book\" instead of just typing \"read book\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // as typing \"read book\" will cause the code to throw an exception"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                execcommand(line, tasks, ui, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Wait for next input command"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Say \u0027bye\u0027 to the user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * The main method of the class Duke."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\SOHNB101\\\\Documents\\\\myduke\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 90,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * The enum class for all Duke commands. User will input the command and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * this class will make sense of the input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Enum Class for all Duke Commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.HorizontalLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.listAllTasks(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Split the string to get the"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // index of the task to be done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arr \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int pos \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            Task taskToBeCompleted \u003d list.getListOfTask().get(pos);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            taskToBeCompleted.taskIsDone(); // Mark this task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.doneMessage(taskToBeCompleted);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arr \u003d s1.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            list.add(new Todo(arr[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Manipulating the String by separating the actual command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // and the word \u0027/by\u0027 to get the description and date/time"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int limit \u003d s1.lastIndexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arr \u003d s1.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int dateindex \u003d arr[1].lastIndexOf(\"/by\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String substr \u003d arr[1].substring(dateindex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] strarr \u003d substr.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            DateTimeFormatter formatdate \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if (strarr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Please enter Date and Time!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Translating input date to the form of \"MM d yyyy\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String[] inputdate \u003d (strarr[1]).split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(inputdate[0],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        formatdate.withResolverStyle(ResolverStyle.STRICT));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Format it to english. For example, 3 Oct 2019"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                inputdate[0] \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Time validation"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((inputdate[1].toCharArray()).length !\u003d 4)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Please enter time in the form of 24 hour format!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                int dateInt \u003d Integer.parseInt(inputdate[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                int timeTest \u003d dateInt % 100;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Check if the minute is valid"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((timeTest \u003e 60 || timeTest \u003c 0) || (dateInt \u003e 2359 || dateInt \u003c 0))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Invalid time!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Translating the time from 24-hour format to"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // AM/PM format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if (dateInt \u003c 1300){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d timeTest \u003c 10 ? time + \"0\" : time;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String hour \u003d dateInt \u003c 100 ? \"12\" : Integer.toString(dateInt / 100);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String minute \u003d Integer.toString(timeTest);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d dateInt \u003c 1200 ? hour + \":\" + time + minute + \"am\" :"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                            hour + \":\" + time + minute + \"pm\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d (dateInt % 100) \u003c 10 ? time + \"0\" : time;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String hour \u003d Integer.toString((dateInt / 100) - 12);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String minute \u003d Integer.toString(timeTest);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d hour + \":\" + time + minute + \"pm\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                inputdate[1] \u003d time;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String newstr \u003d String.join(\" \", inputdate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                list.add(new Deadline(s1.substring(9, limit), newstr));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } catch (DateTimeParseException exception){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                ui.showErrorMessage(exception.getMessage() + \"\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"Input date in the form of yyy-mm-dd and \" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"remember to add time in 24-hour format\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                ui.showErrorMessage(ex.getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Manipulating the String by separating the actual command"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // and the word \u0027/at\u0027 to get the description and date/time"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int limit \u003d s1.lastIndexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arr \u003d s1.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int dateindex \u003d arr[1].lastIndexOf(\"/at\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String substr \u003d arr[1].substring(dateindex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] strarr \u003d substr.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            DateTimeFormatter formatdate \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if (strarr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Please enter date and time!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Translating input date to the form of \"MM d yyyy\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String[] inputdate \u003d (strarr[1]).split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(inputdate[0],"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        formatdate.withResolverStyle(ResolverStyle.STRICT));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Format it to english. For example, 3 Oct 2019"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                inputdate[0] \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Time Validation"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((inputdate[1].toCharArray()).length !\u003d 4)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Please enter time in the form of 24 hour format!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                int dateInt \u003d Integer.parseInt(inputdate[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                int timeTest \u003d dateInt % 100;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Check if the minute is valid"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((timeTest \u003e 60 || timeTest \u003c 0) || (dateInt \u003e 2359 || dateInt \u003c 0))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"Invalid time!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // Translating the time from 24-hour format to"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                // AM/PM format"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if (dateInt \u003c 1300){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d timeTest \u003c 10 ? time + \"0\" : time;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String hour \u003d dateInt \u003c 100 ? \"12\" : Integer.toString(dateInt / 100);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String minute \u003d Integer.toString(timeTest);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d dateInt \u003c 1200 ? hour + \":\" + time + minute + \"am\" :"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                            hour + \":\" + time + minute + \"pm\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d (dateInt % 100) \u003c 10 ? time + \"0\" : time;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String hour \u003d Integer.toString((dateInt / 100) - 12);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    String minute \u003d Integer.toString(timeTest);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    time \u003d hour + \":\" + time + minute + \"pm\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                inputdate[1] \u003d time;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String newstr \u003d String.join(\" \", inputdate);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                list.add(new Event(s1.substring(6, limit), newstr));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } catch (DateTimeParseException exception){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                ui.showErrorMessage(exception.getMessage() + \"\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"Input date in the form of yyy-mm-dd and \" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"remember to add time in 24-hour format\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                ui.showErrorMessage(ex.getMessage());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Split the string to get the"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // index of the task to be deleted"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arrdel \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int pos \u003d Integer.parseInt(arrdel[1]) - 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            list.delete(pos, storage);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "      @Override"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "      public void execute(String s1, TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "          String[] commandarray \u003d s1.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "          String keyword \u003d commandarray[1];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "          list.find(keyword, storage);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "      }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public abstract void execute(String s1, TaskList list, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 203
    }
  },
  {
    "path": "src/main/java/DukeEnumExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public enum DukeEnumExceptions {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * The enum class for checking for any errors of the input command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @author Amos Cheong"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int numOfArgs \u003d Integer.parseInt(s2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] allargs \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (allargs.length !\u003d numOfArgs)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"Invalid Input!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int numOfArgs \u003d Integer.parseInt(s2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] allargs \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (allargs.length !\u003d numOfArgs) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"\u0027done\u0027 command should only have 2 arguments\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else if (Integer.parseInt(allargs[1]) \u003e list.getsize()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    || Integer.parseInt(allargs[1]) \u003c 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"Task index is not found!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int numOfArgs \u003d Integer.parseInt(s2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] allargs \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (numOfArgs \u003e allargs.length)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int limit \u003d s1.lastIndexOf(\"/by\") - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // The variable limit will be used as an argument for the method substring."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // If the limit is less than 9 in this case, the substring method won\u0027t work."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Therefore, it is important to test if the limit is less than 9"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (s1.lastIndexOf(s2) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"Please add a \u0027/by\u0027 and then add the date/time subsequently \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"in the form of [Deadline] [Description] /by [yyyy-mm-dd] [time in 24-hour]\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else if (limit \u003c 9) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"No description! Please add description to your deadline\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String stringTest \u003d s1.substring(9, limit);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((stringTest.replaceAll(\"( )+\", \"\")).equals(\"\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"No description! Please add description to your deadline\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int limit \u003d s1.lastIndexOf(\"/at\") - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // The variable limit will be used as an argument for the method substring."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // If the limit is less than 6 in this case, the substring method won\u0027t work."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Therefore, it is important to test if the limit is less than 6"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (s1.lastIndexOf(s2) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"Please add a \u0027/at\u0027 and then add the date/time subsequently \" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                        \"in the form of [Event] [Description] /at [yyyy-mm-dd] [time in 24-hour]\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else if (limit \u003c 6) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"No description! Please add description to your event\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                String stringTest \u003d s1.substring(6, limit);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if ((stringTest.replaceAll(\"( )+\", \"\")).equals(\"\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    throw new DukeException(\"No description! Please add description to your event\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int numOfArgs \u003d Integer.parseInt(s2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] allargs \u003d s1.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (allargs.length !\u003d numOfArgs) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"\u0027delete\u0027 command should only have 2 arguments\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            } else if (Integer.parseInt(allargs[1]) \u003e list.getsize() ||"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    Integer.parseInt(allargs[1]) \u003c 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"Task index is not found!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    },"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        public void checkerror(String s1, String s2, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            int numOfArgs \u003d Integer.parseInt(s2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] commandarr \u003d s1.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (commandarr.length !\u003d numOfArgs) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"\u0027find\u0027 command should have 2 arguments (find [keyword to find])\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    };"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public abstract void checkerror(String s1, String s2, TaskList list) throws DukeException;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 105
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Duke Exception class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Custom Exception."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Event Class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Event Class is a subclass of Task Class. It stores the description of this instance"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * as well as the date and time of the particular event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the description of this Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String description of this Event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return super.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the date and time of this Event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String date and time of this Event object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the type of this object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Used when outputting to user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String The object type."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 45
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Parser class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Handles the command input by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private String fullcommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private HashMap\u003cString, String\u003e commandpairing \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Parser (String fullcommand, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.fullcommand \u003d fullcommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Add all valid commands into HashMap"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // HashMap is used for validation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"list\", \"1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"done\", \"2\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"todo\", \"2\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"event\", \"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"deadline\", \"/by\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"delete\", \"2\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        commandpairing.put(\"find\", \"2\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Minimally check if the main command make sense to the code."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * However, it will parse to the DukeEnumEceptions to check for other errors"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * such as IndexOutOfBounds exception, etc."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param tasklist Pass in the TaskList object as an argument."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return boolean true when there is no error and return false if otherwise and throws an Exception."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public boolean checkForError(TaskList tasklist) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        String[] arguments \u003d fullcommand.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // If input is not recognisable by the code"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (!commandpairing.containsKey((arguments[0]).toLowerCase()))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Execute the error-checking"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            DukeEnumExceptions.valueOf(arguments[0].toUpperCase())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    .checkerror(fullcommand, commandpairing.get((arguments[0]).toLowerCase()), tasklist);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        } catch (DukeException ex){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.showErrorMessage(ex.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.showErrorMessage(\"Input date in the form of yyy-mm-dd and \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    \"remember to add time in 24-hour format \\n\" + exception.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 60
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Storage class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * This class handles the data from a text file. It only has two methods : store and load."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * When the user starts the program, it will load the previous tasks into the current list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return List\u003cTask\u003e List of Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @throws IOException Error opening the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        List\u003cTask\u003e Tasklist \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        String currentline \u003d reader.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        while (currentline !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String[] arr \u003d currentline.split(\" \", 3);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String expression \u003d arr[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // For every data extracted from the .txt file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // figure out the type of object and add it into"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            switch (expression) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            case \"[E]\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                Tasklist.add(new Event(arr[1], arr[2]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            case \"[D]\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                Tasklist.add(new Deadline(arr[1], arr[2]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            case \"[T]\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                Tasklist.add(new Todo(arr[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            currentline \u003d reader.readLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return Tasklist;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Whenever the tasklist is added or deleted, the store method will update the .txt file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * The information stored in the .txt file are the tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param ui       Ui object for printing to user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param alltasks TaskList object as argument."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void store(TaskList alltasks, Ui ui) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String line \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            // Iterate through the list and put data in .txt file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            for (Task task : alltasks.getListOfTask()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                if (task.getType().equals(\"[T]\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    // Todo objects"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    line \u003d \"[T] \" + task.getDesc();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    // Deadline/Event objects"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                    line \u003d task.getType() + \" \" + task.getDesc() + \" \" + task.getDate();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                writer.write(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                line \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        } catch (IOException ioex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            ui.showErrorMessage(ioex.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Task Class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * The parent class of all task classes (Event, Deadline, Todo)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Gets the status of this current task and gives the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String status of the current object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return Y (done) or N (not done) symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Method to be overloaded by the subclasses."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String Empty String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDesc() {return \"\"; }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Method to be overloaded by the subclasses."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String Empty String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDate() {return \"\"; }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Set the current object to be done. Used by its subclasses."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void taskIsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Method to be overloaded by the subclasses."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String Empty String"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getType() { return \"\"; }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * TaskList class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Keeps the tasks as a list of this instance."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private List\u003cTask\u003e listOfTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public TaskList() {};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public TaskList(List\u003cTask\u003e listOfTask, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.listOfTask \u003d listOfTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Add a new task into the current list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param mytask Task to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void add(Task mytask) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        listOfTask.add(mytask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.addMessage((this.listOfTask).size(), mytask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        storage.store(this, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Deletes the task at the particular index of the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param index index of the object in the list to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param storage Storage object to be used to store a task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void delete(int index, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Split the string to get the"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // index of the task to be deleted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.deletedTaskMessage(getsize() - 1, listOfTask.get(index));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        listOfTask.remove(index); // Deletes from task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        storage.store(this, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Finds the task that has description which is similar to the word"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * that is passed in as argument."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param word keyword to find in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void find(String word, Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        TaskList filteredlist\u003d new TaskList(new ArrayList\u003cTask\u003e(), ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        for (Task task : this.listOfTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            String description \u003d ((task.getDesc()).toLowerCase());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            if (description.matches(\"(?i)\" + \"(\" + word.toLowerCase() + \")\" + \".*\"))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "                filteredlist.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.foundMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        ui.listAllTasks(filteredlist);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * This method returns the list to the caller."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return List\u003cTask\u003e A list containing the Tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public List\u003cTask\u003e getListOfTask() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return listOfTask;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Returns the number of items in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return int number of items in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public int getsize() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return listOfTask.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 85
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Todo Class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Todo Class is a subclass of Task Class. It only keeps the details of the Todo Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the description of this Todo object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String description of this Todo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return super.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Get the type of this object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Used when outputting to user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @return String The object type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 36
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Ui class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * Responsible for interacting with the user by printing messages."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " * @author Amos Cheong"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * A horizontal line."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void HorizontalLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void greetUser(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Exits the code."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void exit(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Print error message to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param errormessage Message to inform the user of the error."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void showErrorMessage(String errormessage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(errormessage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Informs user that the task has been added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param listsize size of the tasklist."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param mytask Task object. Able to take in objects of its subclasses."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void addMessage(int listsize, Task mytask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(mytask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Now you have \" + listsize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Takes in a list of tasks and prints out all the tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param list TaskList object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void listAllTasks(TaskList list) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        // Print all the tasks added"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        for (Task currtask : list.getListOfTask()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "            System.out.println(counter++ + \".\" + currtask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Tell the user that the task that they inputted is done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param doneTask The Task object that is set as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void doneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(doneTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Tell the user that the task that they want to delete is already deleted."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param num remaining number of tasks in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * @param deletedTask The Task object to be deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void deletedTaskMessage(int num, Task deletedTask) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Now you have \" + num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     * Show user the list that matches to the input keyword."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void foundMessage() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        HorizontalLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 108
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void EventTesting() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        Event myEventTest \u003d new Event(\"Eating\", \"2019-09-09 0900\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        assertEquals(myEventTest.toString(), \"[E][N] Eating (at: Sep 9 2019 9:00am)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 11
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        Todo myTodoTest \u003d new Todo(\"Eating\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "        assertEquals(myTodoTest.toString(), \"[T][N] Eating\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 11
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "[T][N] todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "[T][N] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "javac  -cp C:\\Users\\SOHNB101\\Documents\\myduke\\duke\\src -Xlint:none -d ..\\bin C:\\Users\\SOHNB101\\Documents\\myduke\\duke\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amoscheong97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Amoscheong97": 21
    }
  }
]
