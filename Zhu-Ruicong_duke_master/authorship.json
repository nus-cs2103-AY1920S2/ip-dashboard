[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "com.duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for com.duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    mainClassName \u003d \"com.duke.Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 38,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "D|0|drink|2009-12-20"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "T|1|maldfa"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "E|1|lallala|2020-01-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "D|0|safmasfa|2020-02-02"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 4
    }
  },
  {
    "path": "src/main/java/com/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Driver class of the Duke program. To start a new session,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * instantiate a new \u003ccode\u003eDuke\u003c/code\u003e object with the data file path and call run();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Instantiate a new \u003ccode\u003eDuke\u003c/code\u003e object with the data file path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * that stores the task information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param filePath the file path of the file that stores the task information."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Starts a Duke session."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Handles a user input command through duke and returns a message to be displayed on GUI."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param input The input string of user command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The message to be displayed on GUI."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private String runOnGui(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ui.showGoodbye();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            String message \u003d c.executeOnGui(tasks, ui, storage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            message \u003d ui.getLine() + \"\\n\" + message + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            String message \u003d ui.gerErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            message \u003d ui.getLine() + \"\\n\" + message + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        new Duke(\"../duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Obtains the output string to be displayed on GUI of a particular user command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param input The input string of user command."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The message to be displayed on GUI."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return runOnGui(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Obtains the output string to be displayed on GUI of the welcoming message when initiating Duke."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The welcoming message to be displayed on GUI."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return ui.getWelcomeMessage();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 111,
      "-": 1
    }
  },
  {
    "path": "src/main/java/com/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 14
    }
  },
  {
    "path": "src/main/java/com/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.ui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * A GUI for com.duke.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Duke duke \u003d new Duke(\"../duke/data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 34
    }
  },
  {
    "path": "src/main/java/com/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * An abstract class that represents a command to be executed. Its child classes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * represents various types of commands in the Duke programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * a parameter that indicates whether the command is and ExitCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public boolean isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Executes this command on the Duke session specified by the TaskList, Ui, Storage objects"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * associated with it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tasks   the TaskList of the current Duke session."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param ui      the User Interface of the current Duke session."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param storage the storage file of the current Duke session."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws DukeException happens when there is a problem executing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public abstract String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 30
    }
  },
  {
    "path": "src/main/java/com/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a command that deletes the task at the given index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param index the task index the command is to delete."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Task t \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ui.showDelete(t, tasks.tasks.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Task t \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return ui.getDeleteMessage(t, tasks.tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 46
    }
  },
  {
    "path": "src/main/java/com/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command of marks a task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * creates a command that marks the task with given index as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param index the index of the task to be marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Task t \u003d tasks.markTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ui.showDone(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Task t \u003d tasks.markTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return ui.getDoneMessage(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 47
    }
  },
  {
    "path": "src/main/java/com/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command that ends the Duke session."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a command that ends the Duke session."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return ui.getGoodbyeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 27
    }
  },
  {
    "path": "src/main/java/com/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command that finds all tasks whose description contains a given keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Instantiates a command that finds all tasks whose description contains a given keyword."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param keyword The keyword that is used to search tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ui.showFind(tasks.findTask(keyword));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return ui.getFindMessage(tasks.findTask(keyword));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 31
    }
  },
  {
    "path": "src/main/java/com/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command that queries the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a command that queries the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return ui.getListMessage(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 26
    }
  },
  {
    "path": "src/main/java/com/duke/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a command that adds a task to the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a Task command that adds a task specified to the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param item The Task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public TaskCommand(Task item) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        task \u003d item;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Executes the command that adds a task to the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tasks   the TaskList of the current Duke session."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param ui      the User Interface of the current Duke session."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param storage the storage file of the current Duke session."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws DukeException when the saving of the file fails."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ui.showAdd(task, tasks.tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String executeOnGui(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return ui.getAddMessage(task, tasks.tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            throw new DukeException(\"OOPS!!! Data Save Failed\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 55
    }
  },
  {
    "path": "src/main/java/com/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a Deadline Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a Deadline Task with the given description and deadline time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param description The description of the deadline event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param by          The time by which the deadline event terminates."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws DateTimeParseException When the date input is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.by \u003d Task.generateTime(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String generateWriteFormat() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int k \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"D|\" + k + \"|\" + description + \"|\" + by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 36
    }
  },
  {
    "path": "src/main/java/com/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents an Event Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a event task with the given description and date information."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param a           the date information of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws DateTimeParseException when the date information is in invalid format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Event(String description, String a) throws DateTimeParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.at \u003d Task.generateTime(a);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String generateWriteFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int k \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"E|\" + k + \"|\" + description + \"|\" + at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 35
    }
  },
  {
    "path": "src/main/java/com/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a task specified by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Task(String d) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.description \u003d d;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Generates the icon representation of the status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return the icon representation of the status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String generateWriteFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static LocalDate generateTime(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return LocalDate.parse(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 40
    }
  },
  {
    "path": "src/main/java/com/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a handler that stores manages list that"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * contains all the task information."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * A list that stores all the task information."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Instantiates a \u003ccode\u003eTaskList\u003c/code\u003e object with empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Instantiates a \u003ccode\u003eTaskList\u003c/code\u003e object with task list represnted by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * the \u003ccode\u003eArrayList\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param t the list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        tasks \u003d t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Marks a Task with the given index as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tindex The index of the Task in the list to be marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The Task to be marked as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Task markTask(int tindex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        Task out \u003d tasks.get(tindex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        out.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Deletes a Task with the given index as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tindex The index of the Task in the list to be deleted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The Task to be deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Task deleteTask(int tindex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return tasks.remove(tindex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Adds a Task to the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The Task to be added."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Task addTask(Task t) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Finds the tasks that in the task list whose description contains"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * the keyword specified."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param keyword The keyword to be used to search through the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return A list of tasks that contains the given keyword in their description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            if (t.description.contains(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                out.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 80
    }
  },
  {
    "path": "src/main/java/com/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a Todo task with the description given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param d description of the Todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Todo(String d) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        super(d);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String generateWriteFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int k \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return \"T|\" + k + \"|\" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 26
    }
  },
  {
    "path": "src/main/java/com/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Gets a user dialog box that displays the text and image given."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param text The text to be displayed on the dialog box."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param img The image to be displayed on the dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return A user dialog box that contains the text and image to be displayed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Gets a duke dialog box that displays the text and image given."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param text The text to be displayed on the dialog box."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param img The image to be displayed on the dialog box."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return A duke dialog box that contains the text and image to be displayed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 73
    }
  },
  {
    "path": "src/main/java/com/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing com.duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Creates a dialog box of Duke to greet the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 60
    }
  },
  {
    "path": "src/main/java/com/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * An exception that deals with all Duke specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Constructs an Duke Exception with the given error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param message Error message of the Exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 16
    }
  },
  {
    "path": "src/main/java/com/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.command.TaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a handler of the user input command which converts \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * commands into actual \u003ccode\u003eCommand\u003c/code\u003e objects to be executed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Takes in a \u003ccode\u003eString\u003c/code\u003e form of command and converts it into \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * object to be executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param cmd String representation of user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return Command representation of the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws DukeException when the user input is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public static Command parse(String cmd) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(cmd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String firstToken \u003d st.nextToken();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        Command output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            output \u003d new ExitCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            output \u003d new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else if (firstToken.equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                int index \u003d Integer.parseInt(cmd.substring(7)) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                output \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                throw new DukeException(\"OOPS! delete should follow by a number\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else if (firstToken.equals(\"done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                int index \u003d Integer.parseInt(cmd.substring(5)) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                output \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                throw new DukeException(\"OOPS! done should follow by a number\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else if (firstToken.equals(\"find\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                cmd \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                if (cmd.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS! Please specify keyword to find\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                output \u003d new FindCommand(cmd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                throw new DukeException(\"OOPS! Please specify keyword to find\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            Task itemToAdd \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            if (firstToken.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    cmd \u003d cmd.substring(9);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    String[] temp \u003d cmd.split(\" /by \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    itemToAdd \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Wrong input format for deadline\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Wrong format of time, try yyyy-mm-dd\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } else if (firstToken.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    cmd \u003d cmd.substring(6);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    String[] temp \u003d cmd.split(\" /at \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    itemToAdd \u003d new Event(temp[0], temp[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Wrong input format for event\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Wrong format of time, try yyyy-mm-dd\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            } else if (firstToken.equals(\"todo\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    cmd \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    itemToAdd \u003d new Todo(cmd);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    if (cmd.equals(\"\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                        throw new Exception(\"empty todo\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            if (itemToAdd \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            output \u003d new TaskCommand(itemToAdd);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 109
    }
  },
  {
    "path": "src/main/java/com/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents a handler that interacts with the storage file in the hard-drive"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * through both loading and saving data into and from the current Duke session."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Contructs a \u003ccode\u003eStorage\u003c/code\u003e object with the given filePath."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param filePath the file path to store into and extract data from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Loads the data associated to the task list from the hard-drive into the Duke session."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e object that contains the all the tasks on the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *         and their relevant status."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws FileNotFoundException If the file path provided is invalid."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        if (!s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                StringTokenizer st \u003d new StringTokenizer(s.nextLine(), \"|\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                String type \u003d st.nextToken();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                int status \u003d Integer.parseInt(st.nextToken());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                Task tba;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    tba \u003d new Todo(st.nextToken());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    tba \u003d new Deadline(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    tba \u003d new Event(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                if (status \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                    tba.isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                out.add(tba);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            return out;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Saves the task data in the current Duke session into the hard-drive."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tl The task list that contains the updated task data."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @throws IOException When the file path provided is invalid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void save(TaskList tl) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        List\u003cTask\u003e ts \u003d tl.tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int count \u003d ts.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fw.write(\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            for (int i \u003d 0; i \u003c count - 1; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                fw.write(ts.get(i).generateWriteFormat());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                fw.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fw.write(ts.get(count - 1).generateWriteFormat());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 92
    }
  },
  {
    "path": "src/main/java/com/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " * Represents the handler of inputs and outputs of the user interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private String space \u003d \"     \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    private String line \u003d space + \"_____________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the error message to the user to communicate that"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * there is a problem loading data from storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(space + \"OOPS! There is a problem loading save file\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getLoadingErrorMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return space + \"OOPS! There is a problem loading save file\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the welcome message when Duke starts up."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + space + \"What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String out \u003d \"Hello from\\n\" + logo + \"\\n\" + \"Hello! I\u0027m Duke\" + \"\\n\" + space + \"What can I do for you?\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints a line which is used for the formatting of the user interface."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the error message associated with a \u003ccode\u003eDukeException\u003c/code\u003eDukeException object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Invoked when a DukeException is caught."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param msg the error message associated with a \u003ccode\u003eDukeException\u003c/code\u003eDukeException object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(space + msg);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String gerErrorMessage(String msg) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return space + msg;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Invokes the user to input the next command and converts it to a \u003ccode\u003eString\u003c/code\u003e object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @return The user input of the next command as a String."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the farewell message when Duke terminates."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(space + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getGoodbyeMessage() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return space + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the list of tasks on the current task list. Invoked when"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * the command input is \"list\"."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e object that stores the list of"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *              tasks in the current session."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int noOfTasks \u003d tasks.tasks.size();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        for (int i \u003d 0; i \u003c noOfTasks; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            output +\u003d \"\\n\" + space + index + \". \" + tasks.tasks.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int noOfTasks \u003d tasks.tasks.size();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        for (int i \u003d 0; i \u003c noOfTasks; i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            output +\u003d \"\\n\" + space + index + \". \" + tasks.tasks.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the message that the \u003ccode\u003eTask\u003c/code\u003e t is successfully marked as done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param t the \u003ccode\u003eTask\u003c/code\u003e to be marked as done."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showDone(Task t) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"\\n\" + space + t;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getDoneMessage(Task t) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"\\n\" + space + t;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the message that a task t is deleted from the task list, and"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * indicate the number of task left on the list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param t     the task of be removed from the list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param count the number of task left on the task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showDelete(Task t, int count) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"\\n\" + space + \"  \" + t + \"\\n\" + space + \"Now you have \" + count"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \" tasks in your list.\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getDeleteMessage(Task t, int count) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String output \u003d space + \"Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"\\n\" + space + \"  \" + t + \"\\n\" + space + \"Now you have \" + count"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \" tasks in your list.\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the message that a task t is added to the task list, and"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * indicate the number of task on the list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param t     the task of be added to the list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param count the number of task on the task list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showAdd(Task t, int count) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String out \u003d space + \"Got it. I\u0027ve added this task: \" + \"\\n\" + space"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"  \" + t + \"\\n\" + space + \"Now you have \" + count"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \" tasks in your list.\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getAddMessage(Task t, int count) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String out \u003d space + \"Got it. I\u0027ve added this task: \" + \"\\n\" + space"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \"  \" + t + \"\\n\" + space + \"Now you have \" + count"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "                + \" tasks in your list.\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * Prints the list of tasks found in the storage that contains the"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * keyword specified in a Find command."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     * @param tasks The list of tasks that contain the keyword."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String out \u003d space + \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            out +\u003d \"\\n\" + space + index + \". \" + t;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public String getFindMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        String out \u003d space + \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            out +\u003d \"\\n\" + space + index + \". \" + t;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 209
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 19
    }
  },
  {
    "path": "src/test/java/com/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import com.duke.task.TodoTest;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 12
    }
  },
  {
    "path": "src/test/java/com/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void testWriteForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        assertEquals(\"D|0|test!|2019-01-01\", new Deadline(\"test!\", \"2019-01-01\").generateWriteFormat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        assertEquals(\"[D][\\u2718] test! (by: Jan 1 2019)\", new Deadline(\"test!\", \"2019-01-01\").toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 17
    }
  },
  {
    "path": "src/test/java/com/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "package com.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    public void TestWriteForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "        assertEquals(\"T|0|test!\", new Todo(\"test!\").generateWriteFormat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "todo sdfasfd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "java -classpath ../bin com.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ruicong"
        },
        "content": "fi   "
      }
    ],
    "authorContributionMap": {
      "Zhu-Ruicong": 34
    }
  }
]
