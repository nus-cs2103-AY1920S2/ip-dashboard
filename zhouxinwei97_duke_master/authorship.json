[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                \u0027Main-Class\u0027: \u0027Launcher.class\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        )"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "zhouxinwei97": 47
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "E | 1 | dance Event  | 3-4pm city Hall"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "D | 0 | return book  | Jun 6 2020  06:00 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "D | 1 | essay  | Dec 15 2020  04:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "D | 1 | Assignment  | Oct 11 2020  01:00 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "T | 1 | run "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "T | 0 | Eat "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "D | 1 | Return book  | Jun 12 2020  06:00 PM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "T | 1 | eat"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 8
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * AddCommand allows instructions to be added to the task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Constructs an AddCommand class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response instruction to be executed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param type the type of instruction consisting one of the following: todo, deadline or event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public AddCommand(String response, String type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(response);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Execute the command that is given, based on it being a todo task, a deadline task or an event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if it is not a valid instruction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (this.type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            createTodo(this.response, taskList.getList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (this.type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            createDeadline(this.response, taskList.getList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (this.type.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            createEvent(this.response, taskList.getList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a todo task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response the instruction that was given by the user to be carried out."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param mylist the list where the todo task is to be stored."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if the description is empty."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void createTodo(String response, ArrayList\u003cTask\u003e mylist) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String description \u003d response.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            Task newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            mylist.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.printf(\"     Now you have %d tasks in the list.\\n\", mylist.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response the instruction that was given by the user to be carried out."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param mylist the list where the deadline task is to be stored."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if there is any error in the date and time or the description is empty."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void createDeadline(String response, ArrayList\u003cTask\u003e mylist) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String deadline \u003d response.split(\"/\")[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String description \u003d response.split(\"/\")[0].replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            Task newTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            mylist.add(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.printf(\"     Now you have %d tasks in the list.\\n\", mylist.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Please format your date and time correctly.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description or deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates an event task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response the instruction that was given by the user to be carried out."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param mylist the list where the event task is to be stored."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if the description is empty."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void createEvent(String response, ArrayList\u003cTask\u003e mylist) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String eventTiming \u003d response.split(\"/\")[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String description \u003d response.split(\"/\")[0].replace(\"event \", \"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            Task newTask \u003d new Event(description, eventTiming);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            mylist.add(newTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.printf(\"      Now you have %d tasks in the list.\\n\", mylist.size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description or event timing of a event cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 130
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Parent class for all commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    protected String response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response instruction to be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Command(String response) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assert response !\u003d null : \"Response cannot be null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Abstract execute for the child classes to implement."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if it is not a valid instruction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public abstract void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Return whether the program is to be stopped."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return true if the program is to be exited, false otherwise."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 37
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Creates a Deadline Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private LocalDate deadlineDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private LocalTime deadlineTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a Deadline task that inherits from Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param description instruction of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param deadline date and time of which the task have to be executed by."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        int newDeadlineFormat \u003d deadline.indexOf(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String actualDate \u003d deadline.substring(newDeadlineFormat).trim(); // date without /by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.deadlineDate \u003d parseDate(actualDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.deadlineTime \u003d parseTime(actualDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String formattedDate \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String formattedTime \u003d this.deadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.deadline \u003d deadline.substring(0, newDeadlineFormat) + \": \" + formattedDate + \"  \" + formattedTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Parsed time from the description data to more readable format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param actualDate the part that contains the date and time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a LocalTime object that contains the deadline time."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private LocalTime parseTime(String actualDate) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        int time \u003d Integer.parseInt(actualDate.split(\" \")[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        LocalTime parsedTime \u003d LocalTime.of(time / 100, time % 100);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return parsedTime;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Parsed date from the description data to more readable format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param actualDate the part that contains the date and time."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a LocalDate object that contains the deadline date."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private LocalDate parseDate(String actualDate) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String date  \u003d actualDate.split(\" \")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return deadlineDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Formatted to save into hard disk."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a format that is standardised to be saved into the hard disk."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String saveToHardDiskFormat() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return String.format(\"D | %d | %s | %s\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                this.completedCode, this.getDescription(), this.deadline.replace(\"by: \", \"\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Overrided to string method to show the type of task it is."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return an extra [D] to denote that it is a deadline task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 77
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * DeleteCommand allows task to be removed from the list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    protected int numberToDelete;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a DeleteCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param description the full instruction including the command and number to delete."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param numberToDelete the object\u0027s ID that is to be deleted, parsed from the Parser class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public DeleteCommand(String description, int numberToDelete) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.numberToDelete \u003d numberToDelete;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Executes the delete command to remove the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if number keyed in is bigger than 0 or number does not exist in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (numberToDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Please key in value bigger than 0.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (taskList.getSize() \u003c numberToDelete) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! number does not exist in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Task removed \u003d taskList.removeTaskFromList(this.numberToDelete - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"      Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"       \" + removed);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.printf(\"      Now you have %d tasks in the list.\\n\", taskList.getSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 43
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a dialog box for interaction."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param l label that contains the text."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param iv image of the particular user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Return a new user dialog."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param l Label l created for the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param iv image of the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a new user dialog."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Return a new dialog for Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param l Label created for Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param iv image of duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a new duke dialog"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 64
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " *  DoneCommand allows user to mark a task as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private int numDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a DoneCommand to mark a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction that is to be carried out, including the task number to be considered done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param numDone Task\u0027s id to be marked as done, parsed by Parser class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public DoneCommand(String response, int numDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(response);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.numDone \u003d numDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Executes the done command to mark the task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException NIL"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Task doneTask \u003d taskList.getTask(this.numDone - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        doneTask.completedTask();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"      Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"        \" + doneTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Main driver for the code."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Storage taskStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * To instantiate the chat bot/ calender."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.taskStorage \u003d new Storage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.tasks \u003d new TaskList(taskStorage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * to run the chat bot."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String fullCommand \u003d ui.readLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                ui.printFormatting();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                c.execute(taskStorage, tasks, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                ui.showError(ex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                ui.printFormatting();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        taskStorage.storeToStorage(tasks.getList());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param args arguments"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        final PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // use my special stream instead."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // Print output, this output goes to the print stream to be captured."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            ui.printFormatting();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            c.execute(taskStorage, tasks, ui);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            ui.showError(ex);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            ui.printFormatting();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        // Put things back"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Label userText \u003d new Label(input);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Label dukeText \u003d new Label(baos.toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void showWelcome() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Label dukeText \u003d new Label(ui.showWelcome());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 211,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * DukeException class for custom Exception handling."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a custom Exception handling."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param message message that is to be printed when an error occurs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Event class that can take in an event with the place or timing."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates an Event task that holds the description and timing information."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param timing time or place of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        int newTimingFormat \u003d timing.indexOf(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.timing \u003d timing.substring(0, newTimingFormat) + \":\" + timing.substring(newTimingFormat);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Formatted to save into hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a format that is standardised to be saved into the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String saveToHardDiskFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return String.format(\"E | %d | %s | %s\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                this.completedCode, this.getDescription(), this.timing.replace(\"at: \", \"\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Overrided to string method to show the type of task it is."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return an extra [E] to denote that it is a Event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + this.timing + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 41
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Exit Command allows the user to exit from the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates an exit command to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction that is given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public ExitCommand(String response) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(response);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Executes the exit command, allowing the program to be stopped."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException NIL"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        tasksStorage.storeToStorage(taskList.getList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 30
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Find Command allows a user to find tasks that are similar to the keyword specified."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates an instance find command to be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction given by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param keyword keyword that was parsed by Parser class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public FindCommand(String response, String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(response);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assert keyword !\u003d null : \"No Keyword\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Executes the find command, allowing the program find the task with the keyword specified."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if no item matching the keyword is found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ArrayList\u003cTask\u003e foundTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ArrayList\u003cInteger\u003e taskNum \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            if (task.toString().contains(this.keyword)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                taskNum.add(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                foundTask.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (foundTask.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! There is no such item in the list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTask.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"     \" + (taskNum.get(i) + 1) + \". \" + foundTask.get(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 55
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * List Command allows user to see what is currently in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a list command to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction that is given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public ListCommand(String response) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(response);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Executes the list command, showing all task that are currently in the hard disk and program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasksStorage storage for the task, deals with storing data and retrieving data from hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskList the list where all the tasks is being stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ui ui that is responsible for interaction with the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException NIL"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void execute(Storage tasksStorage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \". \" + taskList.getTask(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 30
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Parser class allows the program to parse the instruction and act accordingly to the instruction."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * creates a Parser class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Parse the instruction input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction that is given."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a Command object that is associated with the instruction."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if the instruction does not match any of the programmed one."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Command parse(String response) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String messageType \u003d checkMessageType(response);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (messageType.equals(\"delete\"))  {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            int numberToDelete \u003d Integer.parseInt(response.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new DeleteCommand(response, numberToDelete);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (messageType.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new ExitCommand(response);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (messageType.equals(\"todo\") || messageType.equals(\"deadline\") || messageType.equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new AddCommand(response, messageType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (messageType.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            int taskNumberDone \u003d Integer.parseInt(response.split(\" \")[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new DoneCommand(response, taskNumberDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (messageType.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new ListCommand(response);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else if (messageType.equals(\"find\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String keyword \u003d response.replace(\"find \", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return new FindCommand(response, keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Checks the message type."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param response full instruction that is given."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the type of instruction that the user inputted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws DukeException if the instruction does not match any of the pre-assigned ones."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String checkMessageType(String response) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"bye\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"list\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"done\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"todo\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"delete\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"delete\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (response.contains(\"find\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return \"find\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 100
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Storage to store and retrieve all data that is stored in the hard disk."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    String home;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates an instance of Storage object with the path to the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.path \u003d Paths.get(home, \"Desktop\", \"NUS Y2S2\", \"CS2103T\", \"project\", \"duke\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Method invoked to retrieve all information from storage to the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return an ArrayList of tasks that was stored in the hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public ArrayList\u003cString\u003e startupStorage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return readFile(this.path);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Stores the tasks in the program to the hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param list the list that stores all the tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void storeToStorage(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            writeToHardDisk(list);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Read the file line by line to retrieve data from the hard disk."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param filepath the path where the file is stored."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return an ArrayList of tasks that is retrieved from the hard disk."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws IOException if file is not found in the file path."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private ArrayList\u003cString\u003e readFile(Path filepath) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        File f \u003d filepath.toFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ArrayList\u003cString\u003e mylist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String tasks \u003d s.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            mylist.add(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return mylist;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Writes the information from the program into the hard disk file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param list task list that is to be stored."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @throws IOException if file is not found in the file path."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void writeToHardDisk(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        File f \u003d this.path.toFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        FileWriter writer \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        for (Task tasks : list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            writer.write(tasks.saveToHardDiskFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Task object to describe a task to be stored in task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    protected int completedCode;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.completedCode \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Changes the status of completed of the task, if method is invoked, completed will be turn to true."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void completedTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.completedCode \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Parent method for the child to implement."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return dummy return."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String saveToHardDiskFormat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Overrided toString method to show whether a task is completed or not with the tick and cross symbols."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return tick or cross with the description of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return (\"[✔] \" + this.description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            return (\"[✘] \" + this.description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 64
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * A List that stores all Task created."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    Storage taskStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * To instantiate the task list from storage, loading all tasks that are currently in the data.txt."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param taskStorage storage where the copy of the task file is stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public TaskList(Storage taskStorage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.taskStorage \u003d taskStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        ArrayList\u003cString\u003e tasklist \u003d taskStorage.startupStorage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        createStartUpList(tasklist);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Method invoked to create the initial start-up list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasklist list that is loaded with the tasks from data.txt from the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    private void createStartUpList(ArrayList\u003cString\u003e tasklist) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        for (String task : tasklist) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String[] tasksArr \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String taskType \u003d tasksArr[0].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String taskCompleted \u003d tasksArr[1].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            String taskAction \u003d tasksArr[2].trim() + \" \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                Task newTask \u003d new Todo(taskAction);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                if (taskCompleted.equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                    newTask.completedTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String deadline \u003d tasksArr[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String date \u003d deadline.split(\"  \")[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String time \u003d deadline.split(\"  \")[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                DateTimeFormatter formatterDate \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                DateTimeFormatter formatterTime \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                LocalDate standardDateFormat \u003d LocalDate.parse(date, formatterDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                LocalTime standardTimeFormat \u003d LocalTime.parse(time, formatterTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String dateAndTime \u003d standardDateFormat + \" \" + standardTimeFormat;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                Task newTask \u003d new Deadline(taskAction, \"by \" + dateAndTime.replace(\":\", \"\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                if (taskCompleted.equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                    newTask.completedTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                String eventTiming \u003d tasksArr[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                Task newTask \u003d new Event(taskAction, \"at\" + eventTiming);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                if (taskCompleted.equals(\"1\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                    newTask.completedTask();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Remove a particular task from the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param indexToRemove the index of which the task is to be removed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Task removeTaskFromList(int indexToRemove) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        Task removed \u003d tasks.remove(indexToRemove);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Returns the total number of task in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the total number of task in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Returns the list at the index specified."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param index index of the task in the list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the specified task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 127
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * Todo event that contains a description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creates a Todo event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param description description of the Todo event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Formatted to save into hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return a format that is standardised to be saved into the hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String saveToHardDiskFormat() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return String.format(\"T | %d | %s\", this.completedCode, this.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Overrided to string method to show the type of task it is."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return an extra [T] to denote that it is a Todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 32
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " * User Interface for interaction with the user, taking in inputs and showing outputs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    TaskList mylist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Creating a UI with the tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        this.mylist \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Display welcome message to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "                + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Take in input from the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @return the instruction taken in from the user for parser to parse."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        String response \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Print formatting lines."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void printFormatting() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(\"     __________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * Print error message when an error is encountered."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     * @param ex error that is to be displayed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void showError(DukeException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 68
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void testcheckMessageType() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assertEquals(\"todo\", new Parser().checkMessageType(\"todo run\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void checkMessageType_WrongInput_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            assertEquals(0, new Parser().checkMessageType(\"random\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "            assertEquals(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", ex.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 30
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    public void testsaveToHardDiskFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assertEquals(\"T | 0 | eat dinner \", new Todo(\"eat dinner \").saveToHardDiskFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assertEquals(\"T | 0 | run \", new Todo(\"run \").saveToHardDiskFormat());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "        assertEquals(\"T | 0 | Sing song \", new Todo(\"Sing song \").saveToHardDiskFormat());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     1. [T][✗] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "       [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "      Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "       [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "     ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhouxinwei97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhouxinwei97": 34
    }
  }
]
