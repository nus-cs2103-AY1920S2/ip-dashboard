[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# VSCode Files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ".classpath"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": ".project"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": ".vscode"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "*.class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "*.txt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "!./tests/**/expected.txt"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "!./tests/**/input.txt"
      }
    ],
    "authorContributionMap": {
      "alloystory": 11,
      "-": 14
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    mainClassName \u003d \"App\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 19,
      "-": 21
    }
  },
  {
    "path": "src/main/java/App.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class App {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        (new Duke()).start();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 7
    }
  },
  {
    "path": "src/main/java/app/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.BaseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.commands.CommandManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * Main class for Duke. The class contains all the main components "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * required for Duke to run properly."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Welcome message that is printed upon starting Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"Wussup Dawggg! I\u0027m Dukeee\\nWhat you want me do?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Goodbye message that is printed right before the program exits"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String GOODBYE_MESSAGE \u003d \"Bye!\\nStay cool bruh! (((:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private UserInterface userInterface;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private CommandManager commandManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initializes a new instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.userInterface \u003d new UserInterface();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.commandManager \u003d new CommandManager();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Starts Duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.userInterface.render(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "          "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        while (!this.userInterface.isClosed()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                String input \u003d this.userInterface.listen();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                Command command \u003d this.commandManager.getCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                command.execute(this.taskManager, this.userInterface);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            } catch (BaseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                this.userInterface.renderError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                this.userInterface.renderError(\"Caught some other exception! Notify developer!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                this.userInterface.renderError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.userInterface.render(GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 57,
      "-": 1
    }
  },
  {
    "path": "src/main/java/app/core/StorageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class manages all storage related tasks in Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class StorageManager {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Default Storage Directory"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String STORAGE_DIR \u003d \"./data/\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String STORAGE_FILENAME \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private static final String STORAGE_FILEPATH \u003d STORAGE_DIR + STORAGE_FILENAME;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Saves a list of tasks in storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param tasks The list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return True if the process is successful, False otherwise"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws StorageFileException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            File outputDir \u003d new File(STORAGE_DIR);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            if (!outputDir.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                outputDir.mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            FileWriter writer \u003d new FileWriter(STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                writer.write(task.toStorage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new StorageFileException(String.format(\"An error was found while writing to the storage file!\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                + \"The file may be corrupted. \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                + \"Please check the file at %s\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            , STORAGE_FILEPATH));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Loads a list of tasks from the storage"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return a parsed list of tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            List\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(STORAGE_FILEPATH));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            reader.lines()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                .forEach(line -\u003e output.add(Task.fromStorage(line)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 67
    }
  },
  {
    "path": "src/main/java/app/core/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the User Interface of the Duke "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * program. The class provides methods to render text on "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * a custom output."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class UserInterface {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * The maximum length of the string before word wrapping"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * occurs"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final int MAX_STRING_LENGTH \u003d 60;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private boolean isClosed \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initializes a new User Interface object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns the line entered by the user on the console"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return the String entered by the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String listen() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Prints a message on the standard output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The message to be printed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void render(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        System.out.println(UserInterface.createBorderedMessage(message));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Prints a message on the standard error"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The message to be printed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void renderError(String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        System.err.println(UserInterface.createBorderedMessage(message));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a boolean representing whether the UI has closed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return a boolean representing whether the UI has closed"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public boolean isClosed() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.isClosed;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Closes the UI. No further input and output can happen"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * using this UI"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.isClosed \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.scanner.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private static String createBorderedMessage(String message) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String border \u003d createBordersOfLength(MAX_STRING_LENGTH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        output.append(String.format(\"    %s\\n\", border));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        for (String str : message.split(\"\\n\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            while (index \u003c str.length()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                int printLength \u003d Math.min(str.length() - index, MAX_STRING_LENGTH - 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                String formattedString \u003d String.format(\"      %s\\n\", str.substring(index, index + printLength));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                output.append(formattedString);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                index +\u003d printLength;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        output.append(String.format(\"    %s\\n\", border));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private static String createBordersOfLength(int length) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            output.append(\"_\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 95
    }
  },
  {
    "path": "src/main/java/app/core/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.close();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 11
    }
  },
  {
    "path": "src/main/java/app/core/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.BaseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * An abstract class that defines abstract methods"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * to be implemented in child Command classes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Abstract execution method that runs the command on the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * task manager and user interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param taskManager The desired task manager"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param userInterface The desired user interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws BaseException If any error occurs during the execution of the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public abstract void execute(TaskManager taskManager, UserInterface userInterface) throws BaseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 20
    }
  },
  {
    "path": "src/main/java/app/core/commands/CommandManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.StringPair;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.BaseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class contains all the data and functions related to Commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class CommandManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Parses a user input and returns the corresponding command "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param userInput User Input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A Command object that can be executed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws BaseException If any error occurs during the parsing "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * of the user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Command getCommand(String userInput) throws BaseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringPair tokens \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String command \u003d tokens.getFirstValue();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String args \u003d tokens.getSecondValue();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new TodoCommand(args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new EventCommand(args);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new DeadlineCommand(args);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new FindCommand(args);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new DoneCommand(args);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return new DeleteCommand(args);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidCommandException(String.format(\"The command \u0027%s\u0027 is not supported\", command));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 46
    }
  },
  {
    "path": "src/main/java/app/core/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidDateTimeFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    DeadlineCommand(String args) throws InvalidUsageException, InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String[] splitArgs \u003d args.split(\"/by\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (splitArgs.length !\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.description \u003d splitArgs[0].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.deadline \u003d Date.fromFormat(splitArgs[1].trim(), Date.DEFAULT_INPUT_FORMAT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) throws StorageFileException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String output \u003d taskManager.addDeadlineTask(this.description, this.deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.render(output);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 29
    }
  },
  {
    "path": "src/main/java/app/core/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    DeleteCommand(String args) throws InvalidUsageException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            this.taskIndex \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: delete \u003ctask_index\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) throws InvalidTaskIndexException, StorageFileException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            String output \u003d taskManager.deleteTask(this.taskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            userInterface.render(output);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidTaskIndexException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                \"Invalid task index. Please refer to the \u0027list\u0027 command for available indices.\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 32
    }
  },
  {
    "path": "src/main/java/app/core/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    DoneCommand(String args) throws InvalidUsageException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            this.taskIndex \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: done \u003ctask_index\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) throws InvalidTaskIndexException, StorageFileException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            String output \u003d taskManager.setTaskDone(this.taskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            userInterface.render(output);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidTaskIndexException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                \"Invalid task index. Please refer to the \u0027list\u0027 command for available indices.\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 32
    }
  },
  {
    "path": "src/main/java/app/core/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidDateTimeFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date when;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    EventCommand(String args) throws InvalidUsageException, InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String[] splitArgs \u003d args.split(\"/at\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (splitArgs.length !\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: event \u003cdescription\u003e /at \u003cwhen\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.description \u003d splitArgs[0].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.when \u003d Date.fromFormat(splitArgs[1].trim(), Date.DEFAULT_INPUT_FORMAT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) throws StorageFileException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String output \u003d taskManager.addEventTask(this.description, this.when);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.render(output);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 29
    }
  },
  {
    "path": "src/main/java/app/core/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private String toMatch;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    FindCommand(String args) throws InvalidUsageException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (args.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: find \u003cstring_to_match\u003e\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.toMatch \u003d args;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String output \u003d taskManager.findMatchingTasks(this.toMatch);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.render(output);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 23
    }
  },
  {
    "path": "src/main/java/app/core/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String output \u003d taskManager.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.render(output);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 12
    }
  },
  {
    "path": "src/main/java/app/core/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.UserInterface;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidUsageException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    TodoCommand(String args) throws InvalidUsageException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (args.equals(\"\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidUsageException(\"Usage: todo \u003cdescription\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.description \u003d args;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void execute(TaskManager taskManager, UserInterface userInterface) throws StorageFileException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String output \u003d taskManager.addTodoTask(this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        userInterface.render(output);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 24
    }
  },
  {
    "path": "src/main/java/app/core/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    DeadlineTask(String description, Date deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"D,%s,%b,%s\", this.description, this.isDone, this.deadline.toStorage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, this.deadline.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 22
    }
  },
  {
    "path": "src/main/java/app/core/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "final class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date when;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    EventTask(String description, Date when) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.when \u003d when;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"E,%s,%b,%s\", this.description, this.isDone, this.when.toStorage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.description, this.when.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 22
    }
  },
  {
    "path": "src/main/java/app/core/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidDateTimeFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class contains the information of a Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Creates a Task based on the format stored in storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param data Storage data"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A new Task object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static Task fromStorage(String data) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            String[] parsedArgs \u003d data.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            String type \u003d parsedArgs[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            Task output;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                Date date \u003d Date.fromStorage(parsedArgs[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                output \u003d new DeadlineTask(parsedArgs[1], date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                Date date \u003d Date.fromStorage(parsedArgs[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                output \u003d new EventTask(parsedArgs[1], date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                output \u003d new Task(parsedArgs[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            if (Boolean.parseBoolean(parsedArgs[2])) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                output.setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (InvalidDateTimeFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a String in the format used to save the task in storage"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return a String in the storage format"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"T,%s,%b\", this.description, this.isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a String representation of the Task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return a String representation of the Task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 77
    }
  },
  {
    "path": "src/main/java/app/core/tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.core.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.core.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.StorageFileException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class stores and handles all the data related to "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * tasks in Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class TaskManager{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initializes a new task manager. The method will attempt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * to load from the storage if data is present."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.taskList \u003d this.storageManager.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Adds a todo task in the manager"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The output to be presented in the UI"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String addTodoTask(String description) throws StorageFileException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.add(new Task(description));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Adds a deadline task in the manager"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param deadline A Date object representing the deadline "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The output to be presented in the UI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String addDeadlineTask(String description, Date deadline) throws StorageFileException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.add(new DeadlineTask(description, deadline));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Adds an event task in the manager"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param when A Date object representing the date of "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * the event"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The output to be presented in the UI"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String addEventTask(String description, Date when) throws StorageFileException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.add(new EventTask(description, when));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private String add(Task task) throws StorageFileException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.storageManager.save(this.taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            + \"  %s\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            + \"Now you have %d tasks in the list.\\n\", task, this.taskList.size()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Sets a task as done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param index The index of the task in the task manager"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The output to be presented in the UI"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws IndexOutOfBoundsException If the index is out of the bounds"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * of the task maanger"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String setTaskDone(int index) throws IndexOutOfBoundsException, StorageFileException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        Task task \u003d this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.storageManager.save(this.taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done: \\n%s\", task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Deletes a task from the task manager"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param index The index of the task in the task manager"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The output to be presented in the UI"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws IndexOutOfBoundsException If the index is out of the bounds "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * of the task manager"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String deleteTask(int index) throws IndexOutOfBoundsException, StorageFileException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        Task task \u003d this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.storageManager.save(this.taskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            + \"  %s\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            + \"Now you have %d tasks in the list.\\n\", task, this.taskList.size()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Finds a list of tasks that contains a String and returns"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * a String representation of this list of tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param toMatch The string to match in task descriptions"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The string representation of the list of filtered tasks"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * that matches the input string"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String findMatchingTasks(String toMatch) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            if (task.getDescription().contains(toMatch)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alloystory"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (filteredTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return \"There are no matching tasks\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks: \\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            sb.append(String.format(\"%d. %s\\n\", i + 1, filteredTasks.get(i)));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a String representation of the list of tasks"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return The string representation of the list of tasks"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            return \"You have no tasks\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"These are your tasks: \\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            sb.append(String.format(\"%d. %s\\n\", i + 1, this.taskList.get(i)));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 143
    }
  },
  {
    "path": "src/main/java/app/exceptions/BaseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class is the base class for all custom exceptions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * related to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class BaseException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new BaseException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public BaseException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the exception that is thrown"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * when the user tries to use an unsupported command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class InvalidCommandException extends BaseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new InvalidCommandException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/exceptions/InvalidDateTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the exception thrown when the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * enters a date that does not conform to the supported formats"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class InvalidDateTimeFormatException extends BaseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new InvalidDateTimeFormatException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public InvalidDateTimeFormatException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/exceptions/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the exception that is thrown when"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * the user tries to access an invalid index in the task list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class InvalidTaskIndexException extends BaseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new InvalidTaskIndexException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public InvalidTaskIndexException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/exceptions/InvalidUsageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the exception thrown when the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * fails to provide certain arguments required by the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class InvalidUsageException extends BaseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new InvalidUsageException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public InvalidUsageException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/exceptions/StorageFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the exception that is thrown when"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * the program is unable to write to the storage file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class StorageFileException extends BaseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initialises a new StorageFileException object with a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * custom error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public StorageFileException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 16
    }
  },
  {
    "path": "src/main/java/app/util/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.InvalidDateTimeFormatException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents the dates that are present in Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class Date {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private DateTimeFormatter formatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Default format for input date parsing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String DEFAULT_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Default format for date output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String DEFAULT_OUTPUT_FORMAT \u003d \"MMM d yyyy hh:mma\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Default format in storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static final String DEFAULT_STORAGE_FORMAT \u003d \"yyyyMMddHHmmss\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date(String dateTimeStr, String format) throws InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            this.date \u003d LocalDateTime.parse(dateTimeStr, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            this.formatter \u003d DateTimeFormatter.ofPattern(DEFAULT_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            throw new InvalidDateTimeFormatException(\"Accepted Date Time Format: \" + format);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    private Date(LocalDateTime date, DateTimeFormatter formatter) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Parses and creates a new Date object using the DEFAULT_INPUT_FORMAT"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param dateTimeStr Input string "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A new Date object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws InvalidDateTimeFormatException If input string\u0027s format does not "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * match DEFAULT_INPUT_FORMAT"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static Date from(String dateTimeStr) throws InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return new Date(dateTimeStr, DEFAULT_INPUT_FORMAT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Parses and creates a new Date object using a custom format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param dateTimeStr Input string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param format Custom format based on DateTimeFormatter"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A new Date object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws InvalidDateTimeFormatException If input string\u0027s format does not "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * match the param format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static Date fromFormat(String dateTimeStr, String format) throws InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return new Date(dateTimeStr, format);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Parses and creates a new Date object using the DEFAULT_STORAGE_FORMAT"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param dateTimeStr Input string "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A new Date object"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @throws InvalidDateTimeFormatException If input string\u0027s format does not "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * match DEFAULT_STORAGE_FORMAT"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static Date fromStorage(String dateTimeStr) throws InvalidDateTimeFormatException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return new Date(dateTimeStr, DEFAULT_STORAGE_FORMAT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Changes the output format to a custom format"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param outputFormat Custom format based on DateTimeFormatter"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A new Date object with a new output formatter"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Date withFormat(String outputFormat) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(outputFormat);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return new Date(this.date, formatter);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a String reresentation of the Date for use in Storage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return a String representation of the Date using the DEFAULT_STORAGE_FORMAT"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toStorage() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(DEFAULT_STORAGE_FORMAT));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns a String representation of the Date object"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.date.format(this.formatter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 106
    }
  },
  {
    "path": "src/main/java/app/util/Pair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class represents a data structure that contains two values."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This is similar to a tuple in other programming languages."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class Pair {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    protected Object firstValue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    protected Object secondValue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initializes a new Pair object with two values"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param firstValue The first value of the object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param secondValue The second value of the object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Pair(Object firstValue, Object secondValue) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.firstValue \u003d firstValue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        this.secondValue \u003d secondValue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns the first value of the Pair object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return the first value of the Pair object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Object getFirstValue() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.firstValue;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns the second value of the Pair object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return the second value of the Pair object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public Object getSecondValue() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return this.secondValue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 36
    }
  },
  {
    "path": "src/main/java/app/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class provides various utility functionalities "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * to parse a String"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Parses an input string by splitting the string by the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * first instance of a whitespace. Returns a StringPair object "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * containing the first word and the rest of the string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param input The input string"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return A StringPair object containing the first word and "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * the rest of the string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public static StringPair parse(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String command \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        String args \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        int splitIndex \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        if (splitIndex !\u003d -1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            command \u003d input.substring(0, splitIndex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            args \u003d input.substring(splitIndex + 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return new StringPair(command.trim(), args.trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 28
    }
  },
  {
    "path": "src/main/java/app/util/StringPair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * This class is a special child of the Pair class,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": " * where it only holds two String values"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public final class StringPair extends Pair {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Initializes a new StringPair object with two strings"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param firstValue The first string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @param secondValue The second string"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public StringPair(String firstValue, String secondValue) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        super(firstValue, secondValue);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * Returns the first string of the StringPair object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     * @return the first string of the StringPair object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String getFirstValue() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.valueOf(this.firstValue);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    * Returns the second string of the StringPair object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    * @return the second string of the StringPair object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public String getSecondValue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        return String.valueOf(this.secondValue);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 35
    }
  },
  {
    "path": "src/test/java/app/util/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import app.exceptions.WrongDateTimeFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void createDate_correctDefaultFormat() throws WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        Date output \u003d Date.from(\"2019-01-01 1800\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"Jan 1 2019 06:00PM\", output.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void createDate_wrongDefaultFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            Date output \u003d Date.from(\"2019-01-01\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (WrongDateTimeFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            assertEquals(\"Accepted Date Time Format: yyyy-MM-dd HHmm\", e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void createDate_correctAlternateFormat() throws WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        Date output \u003d Date.fromFormat(\"01-01-2019 0000\", \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"Jan 1 2019 12:00AM\", output.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void createDate_wrongAlternateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            Date output \u003d Date.fromFormat(\"2019-01-1\", \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        } catch (WrongDateTimeFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            assertEquals(\"Accepted Date Time Format: dd-MM-yyyy HHmm\", e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void outputDate_withFormat() throws WrongDateTimeFormatException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        Date output \u003d Date.from(\"2019-01-01 1800\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alloystory"
        },
        "content": "            .withFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"01-01-2019\", output.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 47
    }
  },
  {
    "path": "src/test/java/app/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "package app.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void parseStringToPair_multipleWords() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringPair output \u003d Parser.parse(\"test string\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"test\", output.getFirstValue());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"string\", output.getSecondValue());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    public void parseStringToPair_oneWord() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        StringPair output \u003d Parser.parse(\"test\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"test\", output.getFirstValue());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        assertEquals(\"\", output.getSecondValue());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alloystory": 21
    }
  },
  {
    "path": "text-ui-testing/test_script.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alloystory"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# -----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# Step 1: Compiling"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# Create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alloystory"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alloystory"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alloystory"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# Compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alloystory"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alloystory"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alloystory"
        },
        "content": "fi"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# -----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alloystory"
        },
        "content": "# Step 2: Testing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alloystory"
        },
        "content": "for dir in */;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alloystory"
        },
        "content": "do"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    # Delete output from previous run"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    if [ -e \"$dir/actual.txt\" ]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        rm \"$dir/actual.txt\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    # Run the program, feed commands from input.txt file and redirect the output to the actual.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    java -cp ../bin Main \u003c \"$dir/input.txt\" \u003e \"$dir/actual.txt\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alloystory"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    # Compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    diff \"$dir/actual.txt\" \"$dir/expected.txt\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        echo \"$dir: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alloystory"
        },
        "content": "        echo \"$dir: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alloystory"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alloystory"
        },
        "content": "done"
      }
    ],
    "authorContributionMap": {
      "alloystory": 39
    }
  }
]
