[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        System.out.println(line + \"    Hello I\u0027m Dat\\n\" + \"    What can I do for you?\\n\" + line);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] action \u003d input.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                for (int i \u003d 0; i \u003cdata.size(); i ++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    System.out.println(\"    \" + (i + 1) + \". \" + data.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (action[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                int numOfTask \u003d (int) Double.parseDouble(action[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.get(numOfTask - 1).markDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"      \" + data.get(numOfTask - 1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (action[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                int numOfTask \u003d (int) Double.parseDouble(action[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(data.get(numOfTask - 1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.remove(numOfTask - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                String prefix \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String[] newTask \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        if (newTask[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            throw new EmptyArgumentException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Deadline(newTask[0], newTask[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            String[] newTask \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Event(newTask[0], newTask[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } catch(NoSuchElementException m) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            System.out.println(\"â˜¹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"todo\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String[] newTask \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        if (newTask[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            throw new EmptyArgumentException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Todo(newTask[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(data.get(data.size() - 1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        System.out.println(line + \"    Bye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "tiendat161": 69
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class EmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    EmptyArgumentException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String on;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[E]\" + super.toString() + \" (on: \" + this.on + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 14
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Hello I\u0027m Dat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[T][âœ˜] kill the bat"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[D][âœ˜] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[E][âœ˜] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[âœ˜] who the hell event reading this?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    1. [T][âœ˜] kill the bat"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    2. [D][âœ˜] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    3. [E][âœ˜] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    4. [âœ˜] who the hell event reading this?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "todo kill the bat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "deadline kill superman /by the time bat is dead"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "event wonder woman dies /at the corpse of superman"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "who the hell event reading this?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 21
    }
  }
]
