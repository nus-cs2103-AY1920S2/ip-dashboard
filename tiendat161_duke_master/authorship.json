[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    archiveVersion \u003d \"v0.1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "tiendat161": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "E|0|go to school|12-12-2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|1|kill Superman|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "D|0|go wash yourself|12-12-2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "E|0|go party|12-12-2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|0|go kill Batman|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|1|never do anything|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|1|ignore friend messages|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|1|ignore team project|"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 8
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.EmptyArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** Duke class. The main class for project Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private AccessHardDisk storage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for a Duke object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Duke() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        storage \u003d new AccessHardDisk(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        tasks \u003d storage.readTasksFromFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for a Duke object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param path      the path to read and save from a .txt file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Duke(String path) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        storage \u003d new AccessHardDisk(path);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        tasks \u003d storage.readTasksFromFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return run(input);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Method to run a Duke Programme."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String run(String fullCommand) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                this.isExit \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return (c.execute(tasks, storage));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return (ui.showError(e.getMessage()));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Method to run a Duke Programme."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.ui.showWelcome();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getGoodbyeMessage() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.ui.showGoodbye();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        message \u003d \"Currently you have \""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + String.valueOf(this.tasks.checkSize())"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + \" tasks in the list\" + \"\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + this.tasks.showTaskList();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/*"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public void run() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        System.out.println(ui.showWelcome());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(ui.showLine()); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(c.execute(tasks, storage));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(ui.showError(e.getMessage()));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(ui.showLine());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "tiendat161": 229
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Main method of the programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getDukeDialog(duke.getReminder(), dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    DialogBox.getDukeDialog(duke.getGoodbyeMessage(), dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 65
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** An addCommand, handle whenever the user wants to add a new Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for an AddCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute an AddCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.addTask(task, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 30
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** Abstract class of for other types of command (e.g AddCommand, DeleteCommand, DoneCommand, etc)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** A method to check if the user wants to exit or continue with the programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** An abstract method to execute a command, given a task and a storage to save any changes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage    the storage to save any changes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks      the user\u0027s TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public abstract String execute(TaskList tasks, AccessHardDisk storage) throws IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * A Delete Command, handle whenever the user wants to delete a Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for a Delete Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param index the index of the task that the user wants to delete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute a DeleteCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.delete(index, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** A Done Command, handle whenever the user wants to mark a done Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for a Done Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param index the index of the task that the user wants to mark done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute a Done Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.markDone(index, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** An Exit Command, handle whenever the user wants to exit the programme."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Check if the user wants to exit the programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute an Exit Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"Goodbye!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 28
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** An addCommand, handle whenever the user wants to add a new Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Constructor for an AddCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute an FindCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.findTask(this.keyWord);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/** An Show Command, handle whenever the user wants to show the list of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute a Show Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.showTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 19
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * An Unknown Command, handle whenever the user enters a wrong format of a command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Override abstract method of Command Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * execute a Unknown Command, print an error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the user\u0027s TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   the storage to save any changes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String execute(TaskList tasks, AccessHardDisk storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (\"Unknown command, please try again\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Signals that an Error with Duke programme has occurred."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Signals that an Empty Argument error with Duke programme has occurred."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class EmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    EmptyArgumentException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Signals that an Invalid Task error with Duke programme has occurred."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Tasks that need to be done before a specific date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Deadline extends class Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * It is constructed with deadline, follows by a description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * and /by with a DateTime in yyyy-mm-dd format in the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructs a Deadlines object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param description The activity description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param time    The date and time described in /by command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Deadline(String description, String time) throws DateTimeException, DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            this.time \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            throw new DukeException(\"OOPS! It seems that your deadline date \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    + \"is not properly formatted. The date should be in form of \u0027dd-MM-yyyy\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the type of the task. Return a String \"D\" represent deadline task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return \"D\"."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the time formatted of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents DateTime in pattern MMM d yyyy."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the time of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return LocalDate time."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Override toString() method."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents this object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Tasks that happens at a specific DateTime."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Event extends class Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * It is constructed with event, follows by a description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * and /at with a DateTime in yyyy-mm-dd format in the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructs a Event object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param description The activity description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param time    The date and time described in /at command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Event(String description, String time) throws DateTimeException, DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            this.time \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            throw new DukeException(\"It seems that your event date \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    + \"is not properly formatted. The date should be in form of \u0027dd-MM-yyyy\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the type of the task. Return a String \"E\" represent event task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return \"E\"."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the time formatted of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents DateTime in pattern MMM d yyyy."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the time of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return LocalDate time."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Override toString() method."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents this object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[E]\" + super.toString() + \" (on: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Parent class of ToDos, Events and Deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param description The activity description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Check if this task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a boolean describing if this task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Get the description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a string describing the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Get the type of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return \"Task\"."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Get the time of the task (no time for this parent class)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return \"\"."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Get the time of the task (no time for this parent class)."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a dummy timing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Get the status icon that appears to users if the task is done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * A tick or X symbol is used."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return string representing tick or x symbols."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Mark a task that has been done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Override toString() method."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents this object."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 85
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.AccessHardDisk;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Contains a list of tasks. It is a collection of current tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * It support a number of function with tasks, for example: add, markDone, delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructor for a new blank TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructor for a TaskList given an ArrayList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks an ArrayList of Task that contains tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructor for a TaskList that read from a saved file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage a storage that access hard disk to get a saved task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public TaskList(AccessHardDisk storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        tasks \u003d storage.readTasksFromFile().getTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Mark a task in the list as Done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param n         the index number of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   storage that access hard disk to save any changes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String markDone(int n, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        tasks.get(n - 1).markDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        storage.saveFile(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return(\"Nice! I\u0027ve marked this task as done: \")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + tasks.get(n - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Delete a task in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param n         the index number of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   storage that access hard disk to save any changes."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String delete(int n, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Task removedTask \u003d tasks.remove(n - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        storage.saveFile(this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task: \")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + removedTask;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Add a task into the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param task      the task that need to be added."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param storage   storage that access hard disk to save any changes."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String addTask(Task task, AccessHardDisk storage) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        storage.saveFile(this);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + this.tasks.size() + \": \" + task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Check the size of the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return the size of the task in the form of an integer."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public int checkSize() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Print all the task in the list in order."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String showTaskList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            string +\u003d (\"     \" + i + \": \" + task) + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Return the list of all the tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Print the list of all the tasks match the keyWord of FindCommand."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String findTask(String keyWord) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        keyWord \u003d keyWord.trim().toLowerCase();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (task.description.trim().toLowerCase().contains(keyWord)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                isFound \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                count ++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            string +\u003d (\"Great, I have found \" + count + \" tasks that match your keyword: \" + \"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                if (task.description.trim().toLowerCase().contains(keyWord)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    string +\u003d (\" \" + j + \": \" + task + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            string +\u003d (\"Sorry, I didn\u0027t find any results that match your keyword\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 131
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Tasks that needs to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * Todo extends class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * It is constructed with todo, follows by a description"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructs a Todo object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param description The activity description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Show the type of the task. Return a String \"E\" represent event task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return \"T\"."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Override toString() method."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return String represents this object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 35
    }
  },
  {
    "path": "src/main/java/duke/util/AccessHardDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * A class to help access hard disk to read from file and write to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class AccessHardDisk {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    String path \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Scanner readFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructor of an AccessHardDisk object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Given a path to an .txt file, the programme try to connect to that path."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param path the path of the .txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public AccessHardDisk(String path) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            this.readFile \u003d new Scanner(new File(this.path \u003d path));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (FileNotFoundException error) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.println(error);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Read a file to get the saved list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a TaskList that have all the saved tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public TaskList readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        while (readFile.hasNextLine()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] line \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (line[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Todo(line[2]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (line[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Deadline(line[2], line[3]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(line[2]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (line[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Event(line[2], line[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (line[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.get(data.size() - 1).markDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return new TaskList(data);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Save all the tasks to a file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void saveFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(new FileOutputStream(path));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            int binaryInx \u003d (task.isDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            pw.println(task.getType()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    + \"|\" + binaryInx + \"|\" + task.getDescription()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    + \"|\" + task.getTime());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 78
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * A class to help handle all the logic of the programme."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Constructor of a Parser object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param tasks     the Task List of the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Another Constructor of a Parser object, take an empty TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Another Constructor of a Parser object, take a given TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Parser(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.tasks \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * Process command from user\u0027s CLI, recognize the type of command and its descriptions."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @param fullCommand   input from user\u0027s CLI."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (fullCommand.toLowerCase().trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (fullCommand.toLowerCase().trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new ShowCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String[] action \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (action.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw  new DukeException(\"The \u0027done\u0027 command is missing a number argument.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                index \u003d Integer.parseInt(action[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"OOPS! The argument of a \u0027done\u0027 command must be a number.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e this.tasks.checkSize()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"OOPS! The index of a \u0027done\u0027 command is out of bounce.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"delete\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                index \u003d Integer.parseInt(action[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"☹ OOPS! The argument of a \u0027delete\u0027 command must be a number.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e this.tasks.checkSize()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"☹ OOPS! The index of a \u0027delete\u0027 command is out of bounce.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"todo\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (action.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The description of a \u0027todo\u0027 command is missing.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new AddCommand(new Todo(fullCommand.split(\" \", 2)[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String details;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (action.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The description of a \u0027deadline\u0027 command is missing.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String description \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] splitDescription \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                details \u003d splitDescription[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                time \u003d splitDescription[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The format for \u0027deadline\u0027 command requires a description \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        + \"following by \u003c/by\u003e notation and a due date.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new AddCommand(new Deadline(details, time));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String details;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (action.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The description of a \u0027event\u0027 command is missing.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String description \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] splitDescription \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                details \u003d splitDescription[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                time \u003d splitDescription[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The format for \u0027event\u0027 command requires a description \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        + \"following by \u003c/at\u003e notation and a date time.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new AddCommand(new Event(details, time));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        if (action[0].toLowerCase().trim().equals(\"find\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (action.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                throw new DukeException(\"The description of a \u0027find\u0027 command is missing.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String keyWord \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            return new FindCommand(keyWord);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return new UnknownCommand();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 136
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " * A class to help handle all the User Interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String line \u003d \"______________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * A method to print a line."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return a line in string format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (this.line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * A method to print a welcome message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return in string format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.showLine()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + (\"Hello I\u0027m Dat\\n\" + \"What can I do for you?\\n\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + this.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * A method to print a goodbye message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return in string format."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String string \u003d \"GOODBYE! See you again!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * A method to print an error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     * @return in string format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (\"OOPS!!! I\u0027m sorry, but there is an error: \")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                + (errorMessage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight \u003d\"Infinity\" maxWidth \u003d\"Infinity\"  minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: FFFFFF;\"  type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-font-size: 15; \" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cImageView id\u003d\"displayPic\" fx:id\u003d\"displayPicture\" fitHeight\u003d\"90\" fitWidth\u003d\"90\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "      \u003ceffect\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        \u003cDropShadow blurType\u003d\"GAUSSIAN\" height\u003d\"10.85\" offsetX\u003d\"1.0\" offsetY\u003d\"1.0\" radius\u003d\"5.9625\" width\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "      \u003c/effect\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003ceffect\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cInnerShadow blurType\u003d\"GAUSSIAN\" height\u003d\"5.0\" radius\u003d\"1.25\" width\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003c/effect\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"277.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"122.39999999999998\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.39999999999998\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"554.0\" prefWidth\u003d\"214.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"276.0\" layoutY\u003d\"556.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"84.0\" text\u003d\"Send\" textFill\u003d\"#2c2a2a\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    \u003cButton fx:id\u003d\"helpButton\" layoutX\u003d\"360.0\" layoutY\u003d\"556.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"42.0\" prefWidth\u003d\"40.0\" text\u003d\"help\" textFill\u003d\"#2c2a2a\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void testUiWelcome() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String expected \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                \"    Hello I\u0027m Dat\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                \"    What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        assertEquals(expected, ui.showWelcome());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void testUishowError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String errorMessage \u003d \"TEST_ERROR\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String expected \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                ui.showLine() +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                (\"☹ OOPS!!! I\u0027m sorry, but there is an error :-(\") +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                (errorMessage) +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        assertEquals(expected, ui.showError(errorMessage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        new DukeTest().testUiWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        new DukeTest().testUishowError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 38
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 3
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Hello I\u0027m Dat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[T][✘] kill the bat"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[D][✘] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[E][✘] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[✘] who the hell event reading this?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    1. [T][✘] kill the bat"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    2. [D][✘] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    3. [E][✘] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    4. [✘] who the hell event reading this?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "todo kill the bat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "deadline kill superman /by the time bat is dead"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "event wonder woman dies /at the corpse of superman"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "who the hell event reading this?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 21
    }
  }
]
