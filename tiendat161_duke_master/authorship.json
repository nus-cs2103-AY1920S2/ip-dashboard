[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "T|0|kill Batman|1998-01-16"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "E|0|kill Batman|2020-02-18"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "D|0|kill Batman|2020-02-19"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 3
    }
  },
  {
    "path": "src/main/java/AccessHardDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class AccessHardDisk {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    String path \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Scanner readFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public AccessHardDisk() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            this.readFile \u003d new Scanner(new File(path));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        } catch (FileNotFoundException error) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.println(error);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public ArrayList\u003cTask\u003e readTasksFromFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        while (readFile.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] line \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (line[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Todo(line[2]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (line[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(line[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Deadline(line[2], date));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(line[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (line[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(line[3]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.add(new Event(line[2], date));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (line[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.get(data.size()-1).markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e data) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(new FileOutputStream(path));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        for (Task task : data) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            int binaryInx \u003d (task.isDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            pw.println(task.getType() + \"|\" + binaryInx + \"|\" + task.getDescription() + \"|\" + task.getTime().toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Deadline(String description, LocalDate time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        System.out.println(line + \"    Hello I\u0027m Dat\\n\" + \"    What can I do for you?\\n\" + line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        //ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new AccessHardDisk().readTasksFromFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            String[] action \u003d input.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                for (int i \u003d 0; i \u003cdata.size(); i ++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    System.out.println(\"    \" + (i + 1) + \". \" + data.get(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (action[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                int numOfTask \u003d (int) Double.parseDouble(action[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.get(numOfTask - 1).markDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                new AccessHardDisk().saveFile(data);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"      \" + data.get(numOfTask - 1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else if (action[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                int numOfTask \u003d (int) Double.parseDouble(action[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(data.get(numOfTask - 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                data.remove(numOfTask - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                new AccessHardDisk().saveFile(data);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                String prefix \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String[] newTask \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String time \u003d newTask[1].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String command \u003d newTask[0].substring(\"deadline\".length());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        if (newTask[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            throw new EmptyArgumentException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Deadline(command.trim(), date));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            new AccessHardDisk().saveFile(data);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            String[] newTask \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            String time \u003d newTask[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            String command \u003d newTask[0].substring(\"event\".length());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Event(command.trim(), date));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            new AccessHardDisk().saveFile(data);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } catch(NoSuchElementException m) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    case \"todo\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        String[] newTask \u003d input.split(\"todo\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        if (newTask[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            throw new EmptyArgumentException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            data.add(new Todo(newTask[1].trim()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                            new AccessHardDisk().saveFile(data);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(data.get(data.size() - 1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "                System.out.println(\"    Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        System.out.println(line + \"    Bye. Hope to see you again soon!\\n\" + line);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "tiendat161": 89
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class EmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    EmptyArgumentException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[E]\" + super.toString() + \" (on: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 32
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    InvalidTaskException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return LocalDate.parse(\"1998-01-16\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return String.format(\"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 44
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "package PACKAGE_NAME;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 4
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Hello I\u0027m Dat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[T][✘] kill the bat"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[D][✘] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[E][✘] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "[✘] who the hell event reading this?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    1. [T][✘] kill the bat"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    2. [D][✘] deadline kill superman  (by:  the time bat is dead)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    3. [E][✘] event wonder woman dies  (on:  the corpse of superman)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    4. [✘] who the hell event reading this?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "todo kill the bat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "deadline kill superman /by the time bat is dead"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "event wonder woman dies /at the corpse of superman"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "who the hell event reading this?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiendat161"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiendat161"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tiendat161": 21
    }
  }
]
