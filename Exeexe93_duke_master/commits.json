{
  "authorDailyContributionsMap": {
    "Exeexe93": [
      {
        "insertions": 461,
        "deletions": 22,
        "date": "2020-01-21",
        "commitResults": [
          {
            "hash": "3051ecf45dc4867187b7b9ddf0481c79d3713408",
            "messageTitle": "Setting up test-ui-test, shadow, junit testing, gradle.",
            "messageBody": "Furthermore, adding ReplyFormat class to format the reply Duke reply to the user.\n\nProcedure of Duke:\n1) Greet the user\n2) Waiting for user input\n3) Reply what user input back to user\n4) If bye encounter, exit program. Else, repeat steps 2 and 3.\n",
            "tags": [
              "Level1"
            ],
            "insertions": 209,
            "deletions": 1
          },
          {
            "hash": "f72a39ee31f43a2c74e65ecb9e60c51ebfa18737",
            "messageTitle": "Adding database class to store the data user input.",
            "messageBody": "Duke:\n1) Adding new method replyListing() to reply listing back to user\n\nReplyFormat:\n1) Adding new method addList(List\u003cString\u003e listing) to list the data in this format:\n                    1. First data\n                    2. Second data\n",
            "tags": [
              "Level2"
            ],
            "insertions": 58,
            "deletions": 1
          },
          {
            "hash": "926e5b55cb5ea4a9ac994980f6f6a9ed90ae6928",
            "messageTitle": "Adding Task class to represent the individual task with their respective status.",
            "messageBody": "Duke:\n1) Adding new method replyDone(int num) which reply to user that task has marked done\n2) Add one more condition to check if the user input done\n3) Add IndexOutOfBoundsException to prevent user input invalid index for the listing\n\nReplyFormat:\n1) Edit new method addList(List\u003cString\u003e listing) to addList(List\u003cTask\u003e listing):\n            1) Include status icon of the task and description of the task to the sentence\n\nDataBase:\n1) Store Task in List instead of String\n2) Adding two new methods:\n          - markDone(int num) : mark the task at the specific index, num, as done\n          - getTask(int num) : return the task at the specific index, num.\n",
            "tags": [
              "Level3"
            ],
            "insertions": 91,
            "deletions": 13
          },
          {
            "hash": "995f9991e2baf368afc62401cc3f6f51a2a5ca6e",
            "messageTitle": "Adding three sub class of Task class:      1) Deadline      2) Event      3) Todo",
            "messageBody": "Duke:\n1) Adding new method replyAdded() which reply to user that task has added to the list\n2) Add NoSuchFieldException to prevent user input invalid input\n\nReplyFormat:\n1) Remove hardcode, print the string according to the individual task for addList method\n\nDataBase:\n1) Changes made in addData method:\n       1) Check whether the user input is which subclass (Todo, Deadline and Event)\n       2) Add respective subclass to the database\n       3) Throw NoSuchFieldException if user key in invalid input\n\nTask:\n1) Add new method toString() to output its own status icon and description\n",
            "tags": [
              "testUiTesting",
              "Level5",
              "Level4"
            ],
            "insertions": 103,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 200,
        "deletions": 39,
        "date": "2020-01-22",
        "commitResults": [
          {
            "hash": "13b0a76403ba1d94188713dd269118ce598b5f35",
            "messageTitle": "Add new DukeException class to handle exception for DUKE",
            "messageBody": "DUKE:\n1) Add DukeException handler and edit the arguments of addSentence method.\n\nDatabase:\n1) Handle the user input and throw relevant Duke message to display.\n\nReplyFormat:\n1) Edit on the default outline to match the example\n2) Adding new method, setAdditionalIndent(int numOfIndent), to have allows changes of adding spaces in front of the sentence.\n3) Editing the different methods which uses addSentence, to match the example.\n\nTestUiTesting:\n1) Add information for both EXPECTED.txt and input.txt to run the TestUiTesting.\n",
            "insertions": 140,
            "deletions": 27
          },
          {
            "hash": "0a0208661f350d1ae60b0e0fdef3d8d36a1bd39a",
            "messageTitle": "Database: 1) Remove the system println.",
            "messageBody": "",
            "tags": [
              "Level6"
            ],
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "cbf6e9dbc7b7bc1c9dc69a848b407efa240e927e",
            "messageTitle": "Database: 1) Adding deleteTask(int num) to delete task from database at that index 2) Add handler to handle the IndexOutOfBoundException 3) Edit the markDone method, which is same as deleteTask.",
            "messageBody": "Duke:\n1) Handle the NumberFormatException thrown when user key in wrong format\n2) Adding new method replyDelete(int num) and throws DukeException if required.\n",
            "insertions": 60,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 30,
        "date": "2020-01-23",
        "commitResults": [
          {
            "hash": "7858fa1f276818fe1e5254fcc1bcbbbaaa0f3dcf",
            "messageTitle": "Adding Exception to prevent todo[description] to be able to pass through. User must have a space in between todo and description of the task.",
            "messageBody": "Furthermore, adding validation check to check whether the user have space before and after /by for deadline and /at for event.\n",
            "tags": [
              "Customise_Duke"
            ],
            "insertions": 17,
            "deletions": 12
          },
          {
            "hash": "fe19f5f7cbca6f5b323c36e468c2b399058fb005",
            "messageTitle": "Duke: 1) Remove method greetWithLogo() and input the logo into method greet() 2) Edit the goodbye message",
            "messageBody": "ReplyFormat:\n1) addParagraph(String paragraph, int numOfIndent) now take in String instead of List\u003cString\u003e with the String must indicate \\n for new line. Furthermore, the paragraph can add additional spaces by the argument, numOfIndent.\n\n2) Add new method addEmptyLine() to add an empty line in between.\n\nTestUiTesting:\n1) Edit the EXPECTED.txt to match the edited greeting and goodbye message\n",
            "insertions": 28,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 496,
        "deletions": 142,
        "date": "2020-01-26",
        "commitResults": [
          {
            "hash": "dbf068c30a1da6e88692a09c431a9e691b714813",
            "messageTitle": "Resolve the bug cause by including the space at the front for the due date",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "64d13a12dd5d711e07e7f9edb46de1853b4a31d7",
            "messageTitle": "Adding two new variables, period and type, to Task.",
            "messageBody": "",
            "tags": [
              "Period-Type-Task"
            ],
            "insertions": 37,
            "deletions": 9
          },
          {
            "hash": "ee9498501de19afcbf7468d5d5b6349a56ae3e22",
            "messageTitle": "Add four class, Deadline, Event, Task and Todo to package task",
            "messageBody": "",
            "insertions": 19,
            "deletions": 11
          },
          {
            "hash": "5631d8381ee55e8943bb06aa3fe5b27c2cdc08bb",
            "messageTitle": "Add four class, Deadline, Event, Task and Todo to package task",
            "messageBody": "",
            "insertions": 11,
            "deletions": 2
          },
          {
            "hash": "b97741039fabe6ad01c6172b9ac4c692afb91f03",
            "messageTitle": "Solving the crashing problem when user only key in \"event  \" or \"todo  \" or \"deadline  \".",
            "messageBody": "",
            "tags": [
              "Updated-Exception-Empty-Space"
            ],
            "insertions": 14,
            "deletions": 5
          },
          {
            "hash": "df744ac8d2edc126e751c11faec94eb628ee31d8",
            "messageTitle": "Solving the bug that the space in front of the description is being saved together with the description for both event and deadline.",
            "messageBody": "Move four classes, Duke, DukeException, ReplyFormat and Database to package duke.\nMove the package task to package duke.\n",
            "tags": [
              "Exception-Empty-Spaces"
            ],
            "insertions": 80,
            "deletions": 71
          },
          {
            "hash": "482ab58ef4369c1e5bfeda5b2a641b669316cb9f",
            "messageTitle": "Remove debug printout!",
            "messageBody": "",
            "tags": [
              "version-before-Level7"
            ],
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "9488d297e0440e1bc3b971d9559b43198ddd93fc",
            "messageTitle": "Save any editing to the hard disk",
            "messageBody": "",
            "insertions": 48,
            "deletions": 21
          },
          {
            "hash": "e2826d2ad43dbcf69db248338131f7f8dd1a25e6",
            "messageTitle": "Add new method, addTask, to add task to the database",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "21c0b080c2b6e932361847e481c6bcdb366c86c4",
            "messageTitle": "Add new class, FileManager, to retrieve and save tasks into the hard disk",
            "messageBody": "",
            "tags": [
              "branch-Level-7"
            ],
            "insertions": 210,
            "deletions": 0
          },
          {
            "hash": "042462f88c5097d0d6a6784e0d078fad9bdd146e",
            "messageTitle": "Correct the ACTUAL.TXT and EXPECTED.tx, due to the auto correction.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "d06b4dd058095d0ab63f128f95b51b14dbe507a9",
            "messageTitle": "Add getPeriod method to Task and override the method in both Deadline and Event to provide their own date and time",
            "messageBody": "",
            "tags": [
              "branch-Level-8"
            ],
            "insertions": 64,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 1388,
        "deletions": 354,
        "date": "2020-01-27",
        "commitResults": [
          {
            "hash": "d47cfc32c0316a5441c4617d20505e187fcdca03",
            "messageTitle": "Add new Command class with its respective subclass to do their respective tasks based on which command they are.",
            "messageBody": "",
            "insertions": 222,
            "deletions": 0
          },
          {
            "hash": "011a8f961f2cd4079671eeeca942abe9c0e67bb4",
            "messageTitle": "Moving codes to their own respective class and update the EXPECTED.txt and sources.txt with the updated output of the respective command.",
            "messageBody": "tasks.txt is where the tasks saving to and retrieve from when program exits and starts up respectively.\n\nRenamed certain class such as FileManager.java to Storage.java.\n",
            "tags": [
              "A-Packages",
              "A-MoreOOP"
            ],
            "insertions": 465,
            "deletions": 230
          },
          {
            "hash": "9f587fe4c3f627b072e19aeb9b254ef9e4f40131",
            "messageTitle": "Adding junit testing.",
            "messageBody": "",
            "insertions": 202,
            "deletions": 2
          },
          {
            "hash": "1f9463505ae853c3a7793a0e3e05f027e2e0e8c8",
            "messageTitle": "Editing the location of the Duke class",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3e29f6b7c0ebe3b1eb10f25eeaef2642f8de38f0",
            "messageTitle": "Remove the whitespaces and increase the count from 3 to 5 for the numOfIndent for message.addSentence(task.toString(), 5)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b5a2f380e3f9527bc62a47f28f8ef3789f38af63",
            "messageTitle": "Remove all the duke comment, due to auto correction when move file to package",
            "messageBody": "",
            "tags": [
              "A-JUnit"
            ],
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "26cb588ab30d7d74a47b31f71a5e2d8c781142ab",
            "messageTitle": "Standardise coding style for all using Camel Case and no space in between \"(\" and if/else if/while/catch/switch.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 65
          },
          {
            "hash": "c597a0a25e6f22bb98063f15b1374ef4644f8afd",
            "messageTitle": "Adding JavDoc for all the classes and methods.",
            "messageBody": "",
            "tags": [
              "A-JavaDoc"
            ],
            "insertions": 423,
            "deletions": 46
          }
        ]
      },
      {
        "insertions": 110,
        "deletions": 16,
        "date": "2020-01-28",
        "commitResults": [
          {
            "hash": "8e957ef2e98706beb4af09770659717822913d08",
            "messageTitle": "Adding new command, find, to find the tasks with the keyword in their description.",
            "messageBody": "",
            "insertions": 104,
            "deletions": 14
          },
          {
            "hash": "809ae9f867a5e49a061b02e62366bee074ff0852",
            "messageTitle": "Adding StringIndexOutOfBounds Exception to the part for DELETE in processUserInput method in Parser class. This is to prevent the user from giving delete without any number or space.",
            "messageBody": "",
            "tags": [
              "v0.1",
              "A-Jar"
            ],
            "insertions": 6,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 268,
        "deletions": 364,
        "date": "2020-01-31",
        "commitResults": [
          {
            "hash": "11c57a3cbc3af28412b46643a3d144770498b107",
            "messageTitle": "Standardize the coding standard:",
            "messageBody": "1) Insert space for after all \"if\"/\"else if\"/\"while\"/\"catch\"/\"switch\".\n\n2) Remove indent for case and default for switch-case.\n\n3) Input additional new line between title and @param in the JavDoc comments.\n\nRemove Database.java, as the methods move to Parser.java.\n",
            "tags": [
              "A-Gradle"
            ],
            "insertions": 268,
            "deletions": 364
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 60,
        "date": "2020-02-01",
        "commitResults": [
          {
            "hash": "511c5af4ed3ff83801ad9398f7cd0625e9f413b6",
            "messageTitle": "Implements changes due to error found in checkstyle:",
            "messageBody": "1) JacDoc did not end with a \u0027.\u0027\n2) Never user camelCase for some variable name and method name.\n3) Remove \u0027ing\u0027 for the comments, such as \u0027Adding\u0027 to \u0027Add\u0027.\n4) Adding default to switch-case.\n5) Change the tick or cross for the status icon of the Task to Y or N respectively.\n\nUpdating the EXPECTED.txt for test-ui-test\n",
            "tags": [
              "A-CheckStyle"
            ],
            "insertions": 57,
            "deletions": 60
          }
        ]
      },
      {
        "insertions": 370,
        "deletions": 70,
        "date": "2020-02-03",
        "commitResults": [
          {
            "hash": "923484d1c17ce25d1ef5a132f95c184384c1343b",
            "messageTitle": "Adding two methods for printing the message or just return the message in String format for all Commands and Ui.",
            "messageBody": "Furthermore, add new method for the ReplyFormat to include the outline for the message or not, to cater for both the terminal and GUI.\n\nAdd two profile picture for duke and user for the GUI at image folder.\n\nAdd two fxml for DialogBox and MainWindow in view folder.\n\nAdd three new classes: DialogBox.java, Launcher.java and MainWindow.java for the GUI implementation.\n\nAdd new class, Main.java, to acts as bridge for the Duke logic and GUI.\n",
            "insertions": 370,
            "deletions": 70
          }
        ]
      },
      {
        "insertions": 97,
        "deletions": 35,
        "date": "2020-02-04",
        "commitResults": [
          {
            "hash": "46719b2fc612291bda604c6f76271b66a31160fb",
            "messageTitle": "Edit the tests in UiTest due to the changes in Ui for the GUI.",
            "messageBody": "Add ui.setOutline to add outline for it, as the outline is remove by default to cater for the GUI.\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "b5439e8a782210b099865ae42dd1ded175d8c6b3",
            "messageTitle": "Add margin of \u003c10,10,10,10\u003e to all borders of Label.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "0260b688763d1fe2620ce27ed2e418dd29461625",
            "messageTitle": "Main: 1) Delay the closing of the window by 800ms by adding stop().",
            "messageBody": "MainWindow:\n1) Close window when response equals to goodbye message.\n",
            "tags": [
              "Level-10",
              "A-Varargs"
            ],
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "f5896e742d40114bb76418982558ec44cb9a9245",
            "messageTitle": "Correct the errors occurs in CheckStyle and add JavaDoc to the following new class: 1) Main 2) MainWindow 3) Launcher 4) DialogBox",
            "messageBody": "",
            "insertions": 79,
            "deletions": 31
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 3,
        "date": "2020-02-07",
        "commitResults": [
          {
            "hash": "ad29853160a2df7a61e3558d7cfa318e7efa096d",
            "messageTitle": "Add assertions into various classes to ensure correctness of the program.",
            "messageBody": "Set the minHeight of the dialogBox to -Infinity so that list could not be truncated and replace by Ellipsis \"...\".\n",
            "tags": [
              "A-Lambdas",
              "A-Assertions"
            ],
            "insertions": 31,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 225,
        "deletions": 69,
        "date": "2020-02-08",
        "commitResults": [
          {
            "hash": "fdfdcf28906e05038c70bb8e829ae3a9a478bcce",
            "messageTitle": "Version 2 of Duke Project with the GUI.",
            "messageBody": "Refactor the code into bit size to improve readability.\n",
            "tags": [
              "v0.2",
              "A-CodeQuality"
            ],
            "insertions": 153,
            "deletions": 58
          },
          {
            "hash": "c9b7591283a4ad957a21e743ad275382432ecd08",
            "messageTitle": "Sort the list after edit the list of tasks.",
            "messageBody": "It will sort the date and time in ascending order first. If date and time are the same, sort them by alphabetical order.\n",
            "tags": [
              "C-Sort"
            ],
            "insertions": 34,
            "deletions": 1
          },
          {
            "hash": "0f8b76f8508b84c02600fbaf10152be4facae72b",
            "messageTitle": "Refactor the new method, compareTo, into three smaller methods: 1) compareTo 2) sortingTask 3) sortByAlphabeticalOrder",
            "messageBody": "Add three new constants with their values stated below:\n1) EQUAL \u003d 0\n2) LOWER \u003d 1\n3) HIGHER \u003d -1\n",
            "insertions": 38,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 18,
        "date": "2020-02-09",
        "commitResults": [
          {
            "hash": "21511072dbce6b80b29cc12c274ea0f6e71c4204",
            "messageTitle": "Correct any errors occur from the stylecheck.",
            "messageBody": "Furthermore, edit the testing for taskListTest due to the adding of sorting the list after adding.\n",
            "insertions": 20,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 19,
        "date": "2020-02-10",
        "commitResults": [
          {
            "hash": "aa538baba84e135ca12103f487fd5dee03d0b83c",
            "messageTitle": "Improve code quality by applying SLAP concept for generateTaskBasedOnData method.",
            "messageBody": "",
            "insertions": 46,
            "deletions": 18
          },
          {
            "hash": "c79b58a6c7919c0f9f56da22a3096363473504d2",
            "messageTitle": "Change the minHeight to -Infinity so that the text will not change to Ellipsis \"...\" if the text is more than the size of dialogBox.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "Exeexe93": 2594
  },
  "authorFileTypeContributionMap": {
    "Exeexe93": {
      "java": 2440,
      "md": 2,
      "fxml": 43,
      "sh": 0,
      "bat": 22,
      "gradle": 37,
      "txt": 50
    }
  },
  "authorContributionVariance": {
    "Exeexe93": 123777.93
  },
  "authorDisplayNameMap": {
    "Exeexe93": "CS2103T-W12- 1 ENG ..N EN"
  }
}
