[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | r"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | y"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "E | 1 | go back to school | 2020-01-28"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | r"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "D | 1 | reject people | 2020-01-30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | y"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | r"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "E | 1 | book fair | 2020-01-30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | book review"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | homework"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 6
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class representation of the AI bot that helps keep track of the user\u0027s todo list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tstorage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttasks \u003d storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * The main program execution that will take in the user\u0027s input and act on it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tui.showWelcomeMessage(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tboolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\twhile (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tString fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tCommand c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tc.execute(tasks, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tisExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t} /*catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            } */ finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Main program that runs the Duke program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param args Relevant command line arguments."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tnew Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 56,
      "-": 2
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 3
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Represents the parent class of a more specific command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected int targetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param targetIndex last visible listing index of the target person."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Command(int targetIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected Command() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthrow new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Checks if this is an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return false since it is not an exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 47
    }
  },
  {
    "path": "src/main/java/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"deadline\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate final Deadline dl;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Convenience constructor using raw values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param date the LocalDate object that references the deadline day."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param desc the desc that represents the action/activity of the Deadline object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic DeadlineCommand(String desc,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\t\t   LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.dl \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Constructor using a complete Deadline object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param dl the Deadline object to be acted upon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic DeadlineCommand(Deadline dl) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.dl \u003d dl;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Deadline getDeadline() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn dl;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttasks.add(dl);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Successfully added: \" + dl);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t//return new CommandResult(String.format(\"Successfully added:\", dl));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 56
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"delete\" command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Constructor using the index of the Task to be deleted from the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param index the index of the Task to be deleted from the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Successfully Removed: \" + tasks.getList().get(this.index - 1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttasks.remove(this.index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 40
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"done\" command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Constructor using the index of the Task to be done on the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param index the index of the Task to be done on the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttasks.getList().get(this.index - 1).taskDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Successfully Completed: \" + tasks.getList().get(this.index - 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 40
    }
  },
  {
    "path": "src/main/java/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"event\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate final Event ev;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Convenience constructor using raw values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param date the LocalDate object that references the event day."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param desc the desc that represents the action/activity of the Event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic EventCommand(String desc,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\t\tLocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.ev \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Constructor using a complete Event object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param ev the Event object to be acted upon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic EventCommand(Event ev) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.ev \u003d ev;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Event getEvent() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn ev;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttasks.add(ev);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Successfully added: \" + ev);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t//return new CommandResult(String.format(\"Successfully added:\", dl));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 57
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"bye\" command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Closing the todo list now....\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command. Slightly different from other commands since it just prints a closing message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Checks if this is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return true since it is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 39
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate String key;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic FindCommand(String key) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.key \u003d key;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tfor(Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tif(t.contains(key)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\tmatchedTasks.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Search Results as follows: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tfor(Task t: matchedTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tSystem.out.println(t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 33
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"list\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command. Will print out the list of all events currently in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString printList \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Here are the current tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tint listStart \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tfor (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tprintList \u003d printList + listStart + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tlistStart++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(printList.trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 30
    }
  },
  {
    "path": "src/main/java/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"todo\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate final Todo td;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Convenience constructor using raw values."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param desc the desc that represents the action/activity of the Todo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic TodoCommand(String desc) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.td \u003d new Todo(desc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Constructor using a complete Todo object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param td the Todo object to be acted upon."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic TodoCommand(Todo td) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.td \u003d td;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Todo getTodo() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn td;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Executes the command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttasks.add(td);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Successfully added: \" + td);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t//return new CommandResult(String.format(\"Successfully added:\", dl));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 52
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that represents any exceptions that may be thrown by the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 10
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that handles making sense of the user commands, and acts accordingly if the user commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * are invalid."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * The main command that handles making sense of user commands. Will return custom exception messages upon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * encounter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param userInput the user\u0027s input into the program, i.e. their various commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return a Command based on the input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static Command parse(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString[] substrings \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString commandWord \u003d substrings[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString arguments \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tif (substrings.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\targuments \u003d substrings[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tswitch (commandWord) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn prepareTodo(arguments);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn prepareEvent(arguments);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn prepareDeadline(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn prepareDelete(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                return prepareFind(arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn prepareDone(arguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//            case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareTodo(String arguments) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new TodoCommand(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Handles the LocalDate objects first before sending it into Event object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param arguments the desc and date objects."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return the EventCommand with the relevant Event object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareEvent(String arguments) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t//event x /at 2020-01-13"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString[] items \u003d arguments.split(\" /at \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString desc \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tLocalDate date \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdesc \u003d items[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdate \u003d LocalDate.parse(items[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Incorrect arguments please try again.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new EventCommand(desc, date);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Handles the LocalDate objects first before sending it into Deadline object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param arguments the desc and date objects."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return the DeadlineCommand with the relevant Deadline object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareDeadline(String arguments) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t//event x /at 2020-01-13"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString[] items \u003d arguments.split(\" /by \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString desc \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tLocalDate date \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdesc \u003d items[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdate \u003d LocalDate.parse(items[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Incorrect arguments please try again.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new DeadlineCommand(desc, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareDone(String arguments) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tfinal int targetIndex \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareDelete(String arguments) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tfinal int targetIndex \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static Command prepareFind(String arguments) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn new FindCommand(arguments);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Signals that the user input could not be parsed."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static class ParseException extends Exception {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tParseException(String message) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tsuper(message);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 130
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that deals with loading tasks from file and saving tasks in file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected Path path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tpath \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t// will need to deal with errorneous paths"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Get the path of the relevant file that data is stored in."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return the relative path that data is stored in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String getPath() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn path.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method writes and saves all the current tasks in the list to the dedicated data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks The tasks to be saved.s"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void save(TaskList tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//            List\u003cString\u003e encodedAddressBook \u003d AddressBookEncoder.encodeAddressBook(addressBook);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString s \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tfor (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ts \u003d s + t.format() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\twrite(s, path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//      Files.write(path, encodedAddressBook);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method loads the old tasks that have been saved in the dedicated data file previously."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic TaskList load() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tif (!Files.exists(path) || !Files.isRegularFile(path)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\treturn new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tList\u003cString\u003e loadedTasks \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tfor (String s : loadedTasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tif (!s.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\ttasks.add(Task.load(s));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tthrow new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t// other errors"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (IOException ioe) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tioe.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method performs the writing to the data file that is specified."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param s    The tasks to be written to the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param path The relative path that the data will be written to."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static void write(String s, Path path) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tif (!Files.exists(path)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tFiles.createDirectory(path);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t} catch (FileAlreadyExistsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttry (BufferedWriter writer \u003d Files.newBufferedWriter(path)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\twriter.write(s);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t} catch (IOException ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tex.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 97
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Deadline object. It is represented by a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and a Date object that refers to the completion deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method formats the Deadline object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * writing to a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String format() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"D\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A specialised String representation of the Deadline object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tdate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 50
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Event object. It is represented by a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and a Date object that refers to the event start time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method formats the Event object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * writing to a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String format() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"E\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A specialised String representation of the Event object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tdate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 50
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Task object. It is represented by a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and whether the object has been completed or not."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method sets the Task to be done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void taskDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method loads a single specific task based on the information provided by the data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param s The task String that the method will reference to to create the relevant Task object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return the relevant Task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic static Task load(String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString[] info \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString actionLetter \u003d info[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString isDone \u003d info[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString taskDesc \u003d info[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tLocalDate additional;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTask t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tswitch (actionLetter) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tTodo todo \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tif (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\ttodo.taskDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn todo;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tadditional \u003d LocalDate.parse(info[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tEvent event \u003d new Event(taskDesc, additional);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tif (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\tevent.taskDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn event;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tcase \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tadditional \u003d LocalDate.parse(info[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tDeadline deadline \u003d new Deadline(taskDesc, additional);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tif (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t\tdeadline.taskDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn deadline;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\treturn new Task(taskDesc);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Checks if the substring s exists in the current description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param s Substring to be checked."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return boolean whether or not the substring exists."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic boolean contains(String s) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn this.description.contains(s);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method formats the Task object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * writing to a file. It is not actually used in principle."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String format() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"TASK\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A specialised String representation of the generic Task object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 98
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This method formats the Todo object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * writing to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String format() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"T\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return A specialised Todo representation of the Event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 28
    }
  },
  {
    "path": "src/main/java/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The main class that wraps the actual list of tasks and allows actions to be acted upon the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprotected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * To add a Task to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param t Task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void add(Task t) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.tasks.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn this.tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * Remove task from list based on given index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param index Index of task to be removed from list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void remove(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttasks.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 38
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that deals with interactions with the user. It will give responses to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate static final String LINE_PREFIX \u003d \"|| \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate final Scanner in;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tprivate final PrintStream out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis(System.in, System.out);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tthis.out \u003d out;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This is the main command that will read what the user\u0027s input is for processing by the Parser."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @return The user\u0027s input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tout.print(LINE_PREFIX + \"Enter command: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tString fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\treturn fullInputLine;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * This shows the basic welcome message of the program and any tasks that was previously saved into"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * the data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t * @param tasks Tasks that were saved into the data file during the previous execution."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void showWelcomeMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"My name is Jarvis!\\nHow may I provide my services on this fine day?\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tif (!tasks.getList().isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(\"Welcome back, you have the following tasks on hand:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tfor (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t\tSystem.out.println(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t\tSystem.out.println(DIVIDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(DIVIDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Hope my service has been of great help! See you again!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void showError(String s) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(s);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void showLoadingError() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tSystem.out.println(\"Sorry, there was an error with the loading...\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 72
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tDeadline dl \u003d new Deadline(\"finish CS2103T\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[D]\\u2718 finish CS2103T (by: Jan 29 2020)\", dl.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tDeadline dl \u003d new Deadline(\"finish CS2103T\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tdl.taskDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[D]\\u2713 finish CS2103T (by: Jan 29 2020)\", dl.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tEvent ev \u003d new Event(\"CS2103T Tutorial\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[E]\\u2718 CS2103T Tutorial (at: Jan 29 2020)\", ev.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tEvent ev \u003d new Event(\"CS2103T Tutorial\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tev.taskDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[E]\\u2713 CS2103T Tutorial (at: Jan 29 2020)\", ev.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTodo td \u003d new Todo(\"finish CS2103T\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[T]\\u2718 finish CS2103T\", td.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTodo td \u003d new Todo(\"finish CS2103T\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttd.taskDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[T]\\u2713 finish CS2103T\", td.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 19
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "My name is Jarvis!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "How may I provide my services on this fine day?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[T]? borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 1 number of tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 2 number of tasks in the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 3 number of tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: This is not a valid action you may take sir."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Alright! You have successfully completed:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully deleted the following task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You have 2 tasks in your list currently."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Hope my service has been of great help! See you again!"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 46
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "My name is Jarvis!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "How may I provide my services on this fine day?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[T]? borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 1 number of tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 2 number of tasks in the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 3 number of tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: This is not a valid action you may take sir."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Alright! You have successfully completed:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully deleted the following task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You have 2 tasks in your list currently."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Hope my service has been of great help! See you again!"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "event return book /at 3pm Tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "deadline CS2103T Project deliverables /by 2359 Thursday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "j todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  }
]
