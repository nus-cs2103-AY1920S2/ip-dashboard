[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 37,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | r"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | y"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "E | 1 | go back to school | 2020-01-28"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | r"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 1 | 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "T | 0 | 2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "E | 1 | read | 2020-04-03"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 3
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "#Tue Feb 04 11:59:50 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import commands.CommandResult;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class representation of the AI bot that helps keep track of the user\u0027s todo list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\treturn ui.createWelcomeMessage(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"jarvis here!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        while(!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        boolean isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        CommandResult output \u003d c.execute(tasks, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if(isExit){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Bye\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return output.feedbackToUser;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * The main program execution that will take in the user\u0027s input and act on it."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        //  ui.showWelcomeMessage(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(ui.createWelcomeMessage(tasks));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                c.execute(tasks, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            } /*catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            } */ finally {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Main program that runs the Duke program."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param args Relevant command line arguments."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 99,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 10
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 3
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                DialogBox.getDukeDialog(\"Good Day, Jarvis here at your service!\", dukeImage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tdialogContainer.getChildren().add("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t\t\tDialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 56
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Represents the parent class of a more specific command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected int targetIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param targetIndex last visible listing index of the target person."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Checks if this is an exit command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return false since it is not an exit command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 50
    }
  },
  {
    "path": "src/main/java/commands/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//import seedu.addressbook.data.person.ReadOnlyPerson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * The feedback message to be shown to the user. Contains a description of the execution result"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t/** The list of persons that was produced by the command */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\tprivate final List\u003c? extends ReadOnlyPerson\u003e relevantPersons;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\tpublic CommandResult(String feedbackToUser, List\u003c? extends ReadOnlyPerson\u003e relevantPersons) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tthis.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tthis.relevantPersons \u003d relevantPersons;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t * Returns a list of persons relevant to the command command result, if any."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\tpublic Optional\u003cList\u003c? extends ReadOnlyPerson\u003e\u003e getRelevantPersons() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\treturn Optional.ofNullable(relevantPersons);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 34
    }
  },
  {
    "path": "src/main/java/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"deadline\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private final Deadline dl;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param date the LocalDate object that references the deadline day."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param desc the desc that represents the action/activity of the Deadline object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public DeadlineCommand(String desc,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                           LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.dl \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Constructor using a complete Deadline object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param dl the Deadline object to be acted upon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public DeadlineCommand(Deadline dl) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.dl \u003d dl;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Deadline getDeadline() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        tasks.add(dl);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(\"Successfully added: \" + dl);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new CommandResult(\"Successfully added: \" + dl + \"\\nYou now have \" + (tasks.getList().size()) +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                \" number of tasks in the list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 58
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"delete\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Constructor using the index of the Task to be deleted from the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param index the index of the Task to be deleted from the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t\tSystem.out.println(\"Successfully Removed: \" + tasks.getList().get(this.index - 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            Task deleted \u003d tasks.getList().get(this.index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            tasks.remove(this.index - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(\"Successfully Removed: \" + deleted);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//            System.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(\"Index does not exist\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 44
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"done\" command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Constructor using the index of the Task to be done on the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param index the index of the Task to be done on the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            tasks.getList().get(this.index - 1).taskDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Successfully Completed: \" + tasks.getList().get(this.index - 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(\"Successfully Completed: \" + tasks.getList().get(this.index - 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(\"Index does not exist\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 42
    }
  },
  {
    "path": "src/main/java/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"event\" command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private final Event ev;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param date the LocalDate object that references the event day."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param desc the desc that represents the action/activity of the Event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public EventCommand(String desc,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                        LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.ev \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Constructor using a complete Event object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param ev the Event object to be acted upon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public EventCommand(Event ev) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.ev \u003d ev;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Event getEvent() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return ev;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        tasks.add(ev);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(\"Successfully added: \" + ev);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new CommandResult(\"Successfully added: \" + ev + \"\\nYou now have \" + (tasks.getList().size()) +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                \" number of tasks in the list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 58
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"bye\" command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWEDGEMENT \u003d \"Closing the todo list now....\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command. Slightly different from other commands since it just prints a closing message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        System.out.println(MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWEDGEMENT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Checks if this is an exit command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return true since it is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return command instanceof ExitCommand; // instanceof returns false if it is null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 40
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            String output \u003d \"Search Results as follows: \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                if (t.contains(key)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                    matchedTasks.add(t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t\tSystem.out.println(\"Search Results as follows: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            for (Task t : matchedTasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t\t\tSystem.out.println(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                output +\u003d \"\\n\" + t.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(output + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\t\tSystem.out.println(\"Index does not exist\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new CommandResult(\"Index does not exist\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 38
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"list\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command. Will print out the list of all events currently in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String printList \u003d \"Here are the current tasks in your list:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(\"Here are the current tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        int listStart \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            printList \u003d printList + listStart + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            listStart++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//\t\tSystem.out.println(printList.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new CommandResult(printList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 32
    }
  },
  {
    "path": "src/main/java/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * Class definition for the \"todo\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * To be used as the intermediate between the Parser and the UI."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private final Todo td;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Convenience constructor using raw values."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param desc the desc that represents the action/activity of the Todo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public TodoCommand(String desc) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.td \u003d new Todo(desc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Constructor using a complete Todo object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param td the Todo object to be acted upon."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public TodoCommand(Todo td) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.td \u003d td;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Todo getTodo() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return td;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks   the tasks that is currently being referenced in Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param storage the storage tool for loading and saving the state of the list after every command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public CommandResult execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        tasks.add(td);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(\"Successfully added: \" + td);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(\"You now have \" + (tasks.getList().size()) + \" number of tasks in the list\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new CommandResult(\"Successfully added: \" + td + \"\\nYou now have \" + (tasks.getList().size()) +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                \" number of tasks in the list\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 53
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that represents any exceptions that may be thrown by the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 10
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that handles making sense of the user commands, and acts accordingly if the user commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * are invalid."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * The main command that handles making sense of user commands. Will return custom exception messages upon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * encounter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param userInput the user\u0027s input into the program, i.e. their various commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return a Command based on the input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String[] substrings \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String commandWord \u003d substrings[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String arguments \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if (substrings.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            arguments \u003d substrings[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareTodo(arguments);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareEvent(arguments);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareDeadline(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareDelete(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareFind(arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return prepareDone(arguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//            case HelpCommand.COMMAND_WORD: // Fallthrough"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareTodo(String arguments) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new TodoCommand(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Handles the LocalDate objects first before sending it into Event object."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param arguments the desc and date objects."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return the EventCommand with the relevant Event object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareEvent(String arguments) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        //event x /at 2020-01-13"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String[] items \u003d arguments.split(\" /at \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            desc \u003d items[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            date \u003d LocalDate.parse(items[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Incorrect arguments please try again.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new EventCommand(desc, date);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Handles the LocalDate objects first before sending it into Deadline object."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param arguments the desc and date objects."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return the DeadlineCommand with the relevant Deadline object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareDeadline(String arguments) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        //event x /at 2020-01-13"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String[] items \u003d arguments.split(\" /by \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            desc \u003d items[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            date \u003d LocalDate.parse(items[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Incorrect arguments please try again.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new DeadlineCommand(desc, date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareDone(String arguments) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        final int targetIndex \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareDelete(String arguments) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        final int targetIndex \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static Command prepareFind(String arguments) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return new FindCommand(arguments);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Signals that the user input could not be parsed."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static class ParseException extends Exception {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        ParseException(String message) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 130
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that deals with loading tasks from file and saving tasks in file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected Path path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        // will need to deal with errorneous paths"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Get the path of the relevant file that data is stored in."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return the relative path that data is stored in."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return path.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method writes and saves all the current tasks in the list to the dedicated data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks The tasks to be saved.s"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//            List\u003cString\u003e encodedAddressBook \u003d AddressBookEncoder.encodeAddressBook(addressBook);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            s \u003d s + t.format() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        write(s, path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//      Files.write(path, encodedAddressBook);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method loads the old tasks that have been saved in the dedicated data file previously."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if (!Files.exists(path) || !Files.isRegularFile(path)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            List\u003cString\u003e loadedTasks \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            for (String s : loadedTasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                if (!s.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                    tasks.add(Task.load(s));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            // other errors"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method performs the writing to the data file that is specified."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param s    The tasks to be written to the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param path The relative path that the data will be written to."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static void write(String s, Path path) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            } catch (FileAlreadyExistsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        try (BufferedWriter writer \u003d Files.newBufferedWriter(path)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            writer.write(s);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 97
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Deadline object. It is represented by a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and a Date object that refers to the completion deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method formats the Deadline object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * writing to a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"D\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A specialised String representation of the Deadline object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 50
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Event object. It is represented by a"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and a Date object that refers to the event start time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method formats the Event object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * writing to a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"E\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "//        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A specialised String representation of the Event object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 50
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * This is the main class for the Task object. It is represented by a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * description of the activity and whether the object has been completed or not."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method sets the Task to be done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method loads a single specific task based on the information provided by the data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param s The task String that the method will reference to to create the relevant Task object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return the relevant Task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public static Task load(String s) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String[] info \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String actionLetter \u003d info[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String isDone \u003d info[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String taskDesc \u003d info[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        LocalDate additional;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        switch (actionLetter) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            Todo todo \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                todo.taskDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            additional \u003d LocalDate.parse(info[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            Event event \u003d new Event(taskDesc, additional);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                event.taskDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            additional \u003d LocalDate.parse(info[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDesc, additional);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                deadline.taskDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            return new Task(taskDesc);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Checks if the substring s exists in the current description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param s Substring to be checked."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return boolean whether or not the substring exists."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return this.description.contains(s);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method formats the Task object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * writing to a file. It is not actually used in principle."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"TASK\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A specialised String representation of the generic Task object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 98
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This method formats the Todo object based on its representation into a format suitable for"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * writing to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A String object that can be easily written and retrieved from the data file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"T\" + \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * A specialised toString() method based on implementations of the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return A specialised Todo representation of the Event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 28
    }
  },
  {
    "path": "src/main/java/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The main class that wraps the actual list of tasks and allows actions to be acted upon the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * To add a Task to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * Remove task from list based on given index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param index Index of task to be removed from list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 38
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " * The class that deals with interactions with the user. It will give responses to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"|| \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This is the main command that will read what the user\u0027s input is for processing by the Parser."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @return The user\u0027s input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        out.print(LINE_PREFIX + \"Enter command: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * This shows the basic welcome message of the program and any tasks that was previously saved into"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * the data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     * @param tasks Tasks that were saved into the data file during the previous execution."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void showWelcomeMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(\"My name is Jarvis!\\nHow may I provide my services on this fine day?\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if (!tasks.getList().isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(\"Welcome back, you have the following tasks on hand:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public String createWelcomeMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        String welcomeMessage \u003d \"My name is Jarvis!\\nHow may I provide my services on this fine day?\\n\" + DIVIDER;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        if (!tasks.getList().isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            welcomeMessage +\u003d \"\\nWelcome back, you have the following tasks on hand:\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                welcomeMessage +\u003d \"\\n\" + t.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            welcomeMessage +\u003d \"\\n\" + DIVIDER;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(\"Hope my service has been of great help! See you again!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        System.out.println(\"Sorry, there was an error with the loading...\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 85
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tDeadline dl \u003d new Deadline(\"finish CS2103T\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[D]\\u2718 finish CS2103T (by: Jan 29 2020)\", dl.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tDeadline dl \u003d new Deadline(\"finish CS2103T\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tdl.taskDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[D]\\u2713 finish CS2103T (by: Jan 29 2020)\", dl.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tEvent ev \u003d new Event(\"CS2103T Tutorial\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[E]\\u2718 CS2103T Tutorial (at: Jan 29 2020)\", ev.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tEvent ev \u003d new Event(\"CS2103T Tutorial\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tev.taskDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[E]\\u2713 CS2103T Tutorial (at: Jan 29 2020)\", ev.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void toStringTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTodo td \u003d new Todo(\"finish CS2103T\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[T]\\u2718 finish CS2103T\", td.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\tpublic void isDoneTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tTodo td \u003d new Todo(\"finish CS2103T\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\ttd.taskDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t\tassertEquals(\"[T]\\u2713 finish CS2103T\", td.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 19
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "My name is Jarvis!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "How may I provide my services on this fine day?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[T]? borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 1 number of tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 2 number of tasks in the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 3 number of tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: This is not a valid action you may take sir."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Alright! You have successfully completed:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully deleted the following task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You have 2 tasks in your list currently."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Hope my service has been of great help! See you again!"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 46
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "My name is Jarvis!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "How may I provide my services on this fine day?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[T]? borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 1 number of tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 2 number of tasks in the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully added:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You now have 3 number of tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: This is not a valid action you may take sir."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "exceptions.DukeException: Your description may not be empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Please try again!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Alright! You have successfully completed:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "3. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Successfully deleted the following task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "[E]? return book (at: 3pm Tuesday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "You have 2 tasks in your list currently."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Here are the current tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "1. [T]? borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "2. [D]? CS2103T Project deliverables (by: 2359 Thursday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "Hope my service has been of great help! See you again!"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "event return book /at 3pm Tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "deadline CS2103T Project deliverables /by 2359 Thursday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "j todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jarrod-Bob"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Jarrod-Bob": 21
    }
  }
]
