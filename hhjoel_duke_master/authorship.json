[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "hhjoel": 42
    }
  },
  {
    "path": "src/main/java/CustomException/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "package CustomException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"D\" + super.convert() + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import CustomException.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "// These are not Strings; they are constant variables"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/* enum Op {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    BYE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "} */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents a chatbot to store list of things to do. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * a chatbot that stores a list of things to do."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Creates a Duke object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Needed for Application.launch() in Launcher to run"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Duke() {}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Duke duke \u003d new Duke(\"./src/main/java/database.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Starts running the Duke object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ui.prompt(storage, tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        /*Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        stage.show(); // Render the stage.*/"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        );"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents a task to be done. It stores the description of the task and whether it has been"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * done or not."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a symbol representing whether the task has been completed"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a tick (if done) or a cross (if not done)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a string representation of the task"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a string representation of the task in the format \"[X] Description\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + getStatusIcon()"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a string representation of the in the database format"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a string in the form \"| 1 | description\""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \" | \""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + done"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents an Event Task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to an Event to attend"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a string representation of the in the database format"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a string in the form \"| 1 | description (at: 20-08-09)\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[E]\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + super.toString()"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + at"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a string representation of the in the database format"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return a string in the form \"| 1 | description | 2020-08-09\""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"E\""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + super.convert()"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + at;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents a wrapper for a File database. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a database"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private File database;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        database \u003d new File(fileName);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns an array of String of all tasks read from the database"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return an array of String"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    // returns an array of String"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(database));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            contents.add(str);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return contents;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Writes from memory to the database"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(database));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            bw.write(task.convert() + \"\\n\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        bw.flush();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents the task list in memory. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to a task list"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e contents) throws DukeException {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        load(contents);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Parse all information read from the database into memory"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param contents"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void load(ArrayList\u003cString\u003e contents) throws DukeException {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            for (String str : contents) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                char type \u003d str.charAt(0);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                boolean done \u003d Boolean.parseBoolean(str.substring(4, 5));"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                String byAt;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                // To Do"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    description \u003d str.substring(8);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    list.add(new ToDo(description, done));"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int lastIndex \u003d findThirdStrike(str) - 1;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    description \u003d str.substring(8, lastIndex);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    byAt \u003d str.substring(lastIndex + 3);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        list.add(new Deadline(description, done, LocalDate.parse(byAt)));"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        list.add(new Event(description, done, LocalDate.parse(byAt)));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void save(Storage storage) throws IOException {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        storage.save(list);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private int findThirdStrike(String str) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int count \u003d 3;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c str.length(); i++) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (str.charAt(i) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                count--;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void display() {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            System.out.println((i + 1)"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    + \". \""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    + list.get(i).toString());"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void display(ArrayList\u003cInteger\u003e indices) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c indices.size(); i++) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            System.out.println((i + 1) + \". \" + list.get(indices.get(i)).toString());"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void add(String description, boolean isDone) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void add(char type, String description, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            list.add(new Deadline(description, isDone, date));"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            list.add(new Event(description, isDone, date));"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            System.out.println(\"Error: type must be \u0027D\u0027 or \u0027E\u0027\");"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.remove(index);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void find(String key) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ArrayList\u003cInteger\u003e indices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String desc \u003d list.get(i).getDescription();"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (desc.contains(key)) {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                indices.add(i);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        display(indices);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Represents the main UI for communicating with user. A \u003ccode\u003eUi\u003c/code\u003e object corresponds to a UI"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Prints when an exception is caught during loading"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Prints the task added when a task has been successfully added to the task list"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void printAdded(TaskList tasks) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Now you have \""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + tasks.size()"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                + \"tasks in the list.\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Main loop of the chatbot, continuously loops to ask for input until user inputs \"bye\""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void prompt(Storage storage, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            boolean isBye \u003d false;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String firstWord;"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            // Guarantees 1st word is legitimate"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                firstWord \u003d Parser.getFirstWord(input);"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Oops!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                isBye \u003d true;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                tasks.display();"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.add(input.substring(5), false);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    printAdded(tasks);"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.save(storage);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"No todo task specified!\");"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"deadline\":    // deadline description /yyyy-mm-dd"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 9) {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        String description \u003d Parser.getDescription(input, 9);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        LocalDate date \u003d Parser.getDate(input);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.add(\u0027D\u0027, description, false, date);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        printAdded(tasks);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.save(storage);"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        System.out.println(\"Error: incorrect format to add deadline task\");"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"No deadline task specified!\");"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"event\":   // event description /yyyy-mm-dd"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 6) {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        String description \u003d Parser.getDescription(input, 6);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        LocalDate date \u003d Parser.getDate(input);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.add(\u0027E\u0027, description, false, date);"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        printAdded(tasks);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.save(storage);"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        System.out.println(\"Error: incorrect format to add deadline task\");"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: no deadline task specified\");"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int index \u003d Parser.getIndex(input, \"done\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.markAsDone(index);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"\\t\" + tasks.get(index).toString());"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: invalid (out of bounds) or non-integer entered\");"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int index \u003d Parser.getIndex(input, \"delete\");"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    Task rm \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"\\t\" + rm.toString());"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.save(storage);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: invalid (out of bounds) or non-integer entered\");"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    String key \u003d input.substring(5);"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.find(key);"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"No search string specified!\");"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Oops!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (isBye) {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * All static methods for parsing data are contained in this class"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns a String of the first token input by the user"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return String of first token input by user"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException if firstWord is not recognised"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static String getFirstWord(String input) throws DukeException{"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int firstSpaceIndex \u003d -1;"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (input.charAt(i) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                firstSpaceIndex \u003d i;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String firstWord;"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (firstSpaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            firstWord \u003d input;"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            firstWord \u003d input.substring(0, firstSpaceIndex);"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (!firstWord.equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"list\") \u0026\u0026"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"done\") \u0026\u0026"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"delete\") \u0026\u0026"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"bye\") \u0026\u0026"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            return firstWord;"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns description of the task given an input and the starting index of the description"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param start"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return description of the task"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static String getDescription(String input, int start) throws DukeException {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int slashIndex \u003d Parser.getSlash(input);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return input.substring(start, slashIndex - 1);"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns the date in LocalDate format given an input"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return date in LocalDate format"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static LocalDate getDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int slashIndex \u003d Parser.getSlash(input);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return LocalDate.parse(input.substring(slashIndex + 1));"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns the index of the slash in the input given an input"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return index of the slash which indicates the start of the date"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException if there is no slash in input"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private static int getSlash(String input) throws DukeException {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (input.charAt(i) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        throw new DukeException();"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Returns the index of the task in the list"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @param type"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @return int index of the task in the list"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static int getIndex(String input, String type) throws DukeException {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int startPos;"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            startPos \u003d 5;"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            startPos \u003d 7;"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String num \u003d input.substring(startPos);"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            return Integer.parseInt(num) - 1;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "hhjoel": 734
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 49
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"T\" + super.convert();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/main/java/database.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "D | 0 | return book | 2020-11-11"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "E | 0 | project meeting | 2020-06-06"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | helloworld"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "E | 0 | safasf | 2020-04-02"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 6
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Deadline test1 \u003d new Deadline(\"Run\", true, LocalDate.parse(\"2020-09-09\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"[D][✓] Run (by: 2020-09-09)\", test1.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"D | 1 | Run | 2020-09-09\", test1.convert());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Duke duke \u003d new Duke(\"./src/main/java/database.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ToDo test1 \u003d new ToDo(\"Run\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"[T][✘] Run\", test1.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"T | 0 | Run\", test1.convert());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 21
    }
  }
]
