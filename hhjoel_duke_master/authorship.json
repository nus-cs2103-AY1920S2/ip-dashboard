[
  {
    "path": "src/main/java/CustomException/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "package CustomException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"D\" + super.convert() + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import CustomException.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "// These are not Strings; they are constant variables"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "/* enum Op {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    BYE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "} */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Duke duke \u003d new Duke(\"./src/main/java/database.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ui.prompt(storage, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \" | \" + done + \" | \" + description;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"E\" + super.convert() + \" | \" + at;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private File database;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        database \u003d new File(fileName);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    // returns an array of String"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(database));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            contents.add(str);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return contents;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(database));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            bw.write(task.convert() + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        bw.flush();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e contents) throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        load(contents);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void load(ArrayList\u003cString\u003e contents) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            for (String str : contents) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                char type \u003d str.charAt(0);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                boolean done \u003d Boolean.parseBoolean(str.substring(4, 5));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                String byAt;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                // To Do"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    description \u003d str.substring(8);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    list.add(new ToDo(description, done));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int lastIndex \u003d findThirdStrike(str) - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    description \u003d str.substring(8, lastIndex);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    byAt \u003d str.substring(lastIndex + 3);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        list.add(new Deadline(description, done, LocalDate.parse(byAt)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        list.add(new Event(description, done, LocalDate.parse(byAt)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void save(Storage storage) throws IOException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        storage.save(list);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private int findThirdStrike(String str) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int count \u003d 3;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c str.length(); i++) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (str.charAt(i) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                count--;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void display() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            System.out.println((i + 1) + \". \" + list.get(i).toString());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void add(String description, boolean isDone) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void add(char type, String description, boolean isDone, LocalDate date) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            list.add(new Deadline(description, isDone, date));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            list.add(new Event(description, isDone, date));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            System.out.println(\"Error: type must be \u0027D\u0027 or \u0027E\u0027\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return list.remove(index);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private void printAdded(TaskList tasks) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \"tasks in the list.\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void prompt(Storage storage, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            boolean isBye \u003d false;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String firstWord;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            // Guarantees 1st word is legitimate"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                firstWord \u003d Parser.getFirstWord(input);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Oops!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                isBye \u003d true;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                tasks.display();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.add(input.substring(5), false);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    printAdded(tasks);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.save(storage);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"No todo task specified!\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"deadline\":    // deadline description /yyyy-mm-dd"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 9) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        String description \u003d Parser.getDescription(input, 9);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        LocalDate date \u003d Parser.getDate(input);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.add(\u0027D\u0027, description, false, date);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        printAdded(tasks);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.save(storage);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        System.out.println(\"Error: incorrect format to add deadline task\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"No deadline task specified!\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"event\":   // event description /yyyy-mm-dd"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                if (input.length() \u003e 6) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        String description \u003d Parser.getDescription(input, 6);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        LocalDate date \u003d Parser.getDate(input);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.add(\u0027E\u0027, description, false, date);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        printAdded(tasks);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        tasks.save(storage);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                        System.out.println(\"Error: incorrect format to add deadline task\");"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: no deadline task specified\");"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int index \u003d Parser.getIndex(input, \"done\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.markAsDone(index);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"\\t\" + tasks.get(index).toString());"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: invalid (out of bounds) or non-integer entered\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    int index \u003d Parser.getIndex(input, \"delete\");"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    Task rm \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"\\t\" + rm.toString());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    tasks.save(storage);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                    System.out.println(\"Error: invalid (out of bounds) or non-integer entered\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                System.out.println(\"Oops!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (isBye) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static String getFirstWord(String input) throws DukeException{"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int firstSpaceIndex \u003d -1;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (input.charAt(i) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                firstSpaceIndex \u003d i;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        String firstWord;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (firstSpaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            firstWord \u003d input;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            firstWord \u003d input.substring(0, firstSpaceIndex);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        if (!firstWord.equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"list\") \u0026\u0026"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"done\") \u0026\u0026"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"delete\") \u0026\u0026"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                !firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            return firstWord;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static String getDescription(String input, int start) throws DukeException {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int slashIndex \u003d Parser.getSlash(input);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return input.substring(start, slashIndex - 1);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static LocalDate getDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int slashIndex \u003d Parser.getSlash(input);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return LocalDate.parse(input.substring(slashIndex + 1));"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    private static int getSlash(String input) throws DukeException {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            if (input.charAt(i) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        throw new DukeException();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public static int getIndex(String input, String type) throws DukeException {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        int startPos \u003d type.equals(\"done\") ? 5: 7; // type will only either be \"done\" or \"delete\""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            String num \u003d input.substring(startPos);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            return Integer.parseInt(num) - 1;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "hhjoel": 403
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public String convert() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        return \"T\" + super.convert();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/main/java/database.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "D | 0 | return book | 2020-11-11"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "E | 0 | project meeting | 2020-06-06"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "T | 0 | helloworld"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 5
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Deadline test1 \u003d new Deadline(\"Run\", true, LocalDate.parse(\"2020-09-09\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"[D][✓] Run (by: 2020-09-09)\", test1.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"D | 1 | Run | 2020-09-09\", test1.convert());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        Duke duke \u003d new Duke(\"./src/main/java/database.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 14
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    public void dummyTest() throws IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        ToDo test1 \u003d new ToDo(\"Run\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"[T][✘] Run\", test1.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "        assertEquals(\"T | 0 | Run\", test1.convert());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 13
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 8
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hhjoel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hhjoel"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hhjoel": 21
    }
  }
]
