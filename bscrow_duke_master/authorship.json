[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        )"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "test {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 39,
      "-": 21
    }
  },
  {
    "path": "data/tasksFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "E:;:1:;:climb with huai :;:today"
      }
    ],
    "authorContributionMap": {
      "bscrow": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "# Cathulhu Planner User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Cathulhu Planner is a task manager based off the Duke Project https://github.com/nus-cs2103-AY1920S2/duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "This planner offers better efficiency for users who prefer using a Command Line Interface (CLI). The simplistic gui design undoubtedly attracts all who loves Cathulhu and shoebills. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "[Image of Cathulhu Planner UI](./Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "You can add three different kinds of tasks: `Todo`, `Deadline` and `Event` for Cathulhu to track for you."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Command | Parameters | Description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "--------|------------|-------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`todo`|`description`| Adds a `todo` Task with `description` for Cathulhu to Track."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`deadline`|`description` /by`by` | Adds a `deadline` Task with `description` for Cathulhu to Track. `by` notes the deadline time, in the format yyyy-mm-dd \\[hh:mm\\]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`event`|`description` /at`at` | Adds a `deadline` Task with `description` for Cathulhu to Track. `at` notes important details about the event such as venue and participants."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Example of usage: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`deadline test deadline /by 2020-02-02 10:00`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 1](./feature1.png)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "View tasks in a `list`, mark a task as `done`,and `delete` a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Command | Parameters | Description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "--------|------------|-------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`list`|| Lists down all the tasks Cathulhu is currently tracking."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`done`|`task id`| Marks the task with `task id` as done. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`delete`|`task id`| Deletes the task with `task id`."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 2a](./feature2a.png)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 2b](./feature2b.png)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 2c](./feature2c.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Find tasks with `find` and modify a task with `update`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Command | Parameters | Description"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "--------|------------|-------------"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`find`|`search keyword`|Searches and lists down all tasks that contains the `search keyword`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`update`|`task id` `parameter1`\u003d`updated value1`,`parameter2`\u003d`updated value2`,...  | Updates the entered parameters of the task with `task id`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`find test`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 3a](./feature3a.png)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`update 0 done\u003dtrue, description\u003dupdated test deadline`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 3b](./feature3b.png)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "Terminate the program with `bye`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "### Example of usage:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "![Image of feature 4](./feature4.png)"
      }
    ],
    "authorContributionMap": {
      "bscrow": 71,
      "-": 12
    }
  },
  {
    "path": "dukeData/tasksFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:1:;:testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "D:;:0:;:updated description of deadline that is so very exceedingly long that text wrapping is necessary:;:2020-02-02 10:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:0:;:Testing"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:1:;:updated description of deadline that is so very exceedingly long that text wrapping is necessary"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:0:;:test5"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:0:;:test6"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:0:;:test7"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "E:;:0:;:test event :;:home"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "T:;:0:;:test100000"
      }
    ],
    "authorContributionMap": {
      "bscrow": 9
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructs a DialogBox object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param text String text for the DialogBox"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param img Image image for the DialogBox"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        setDialogBox(text, img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Sets the DialogBox and clipping the image into a round icon."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param text String text for the DialogBox"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param img Image image for the DialogBox"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void setDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        dialog.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Circle clip \u003d new Circle(95, 90, 95);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Customises the User DialogBox."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param text String text for the DialogBox"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param img Image image for the DialogBox"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        db.setAlignment(Pos.CENTER_RIGHT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        db.setStyle(\"-fx-font: 38 Papyrus; -fx-font-weight: bold\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Customises the Duke DialogBox."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param text String text for the DialogBox"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param img Image image for the DialogBox"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        db.setStyle(\"-fx-font: 13 Consolas; -fx-font-weight: bold\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 105
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private boolean isLastGuiCmd;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructs the Duke class object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            this.tasks \u003d storage.loadTasksFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.isLastGuiCmd \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Process commands in the CLI version of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private void interact() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        boolean byebye \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(initialise());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        while (!byebye) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printLine1();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                byebye \u003d Parser.parseNextCmd(tasks, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                storage.writeTasksFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printLine2();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            System.out.println(ui.cathulhuSaysItOut());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(ui.cathulhuSaysItOut());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Process commands in the GUI version of Duke, based on user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private String interactGui(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.printLine1();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            this.isLastGuiCmd \u003d Parser.parseNextCmd(tasks, ui, input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            storage.writeTasksFile(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.printLine2();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (this.isLastGuiCmd) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.flush();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.showGoodbye();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return ui.cathulhuSaysItOut();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Displays the welcome message for Cathulhu."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String welcome message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String initialise() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return ui.cathulhuSaysItOut();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Wraps the handler method for inputs from the GUI."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param input String input from the user on the GUI."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String output to be displayed on the GUI."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (this.isLastGuiCmd) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return \"I am done with you, mortal. Do not disturb me nyaa~ \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return interactGui(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        new Duke().interact();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 105
    }
  },
  {
    "path": "src/main/java/duke/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "// Solution below adapted from https://github.com/Amoscheong97/duke/blob/master/src/main/java/DukeCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\tYou are free now, mortal.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\tHere are your tasks, mortal:\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    ui.cathulhuSays(\"\\t\" + i + \". \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to mark as done, mortal!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int taskIndex;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskIndex \u003d Integer.parseInt(cmdString) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to delete, mortal!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003c\u003d taskIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tMortal, thou have no such task!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.getTask(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tMortal, thou have completed this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\t  \" + tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to delete, mortal!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int taskIndex;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskIndex \u003d Integer.parseInt(cmdString) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to delete, mortal!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003c\u003d taskIndex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tMortal, thou have no such task!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tMortal, the following task has been deleted:\\n\\t  \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.removeTask(taskIndex)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\n\\tYou have \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.size()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \" tasks left\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"todo\\\" task must have a description, mortal!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new ToDo(cmdString));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tTask added: \\n\\t  \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.getTask(tasks.size() - 1)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\n\\tYou have \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.size()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \" tasks now, mortal\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"deadline\\\" task must have a description and a deadline, mortal!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] byString \u003d cmdString.split(\"/by \", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (byString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"deadline\\\" task must have a deadline, mortal!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new Deadline(byString[0], byString[1]));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tTask added: \\n\\t  \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.getTask(tasks.size() - 1)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\n\\tYou have \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.size()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \" tasks now, mortal\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tAn \\\"event\\\" task must have a description and a time, mortal!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] atString \u003d cmdString.split(\"/at \", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (atString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tAn \\\"event\\\" task must have a time, mortal!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new Event(atString[0], atString[1]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tTask added: \\n\\t  \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.getTask(tasks.size() - 1)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\n\\tYou have \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + tasks.size()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \" tasks now, mortal\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"find\\\" task must have a keyword to search, mortal!\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tHere are the matching tasks in your list, mortal:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int numMatches \u003d 0;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                String taskString \u003d tasks.getTask(i).toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString.contains(cmdString)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    numMatches++;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    ui.cathulhuSays(\"\\t\" + String.valueOf(numMatches) + \".\" + taskString);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (numMatches \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\tYou have no matching task, mortal.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    },"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    UPDATE {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        public boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.equals(\"\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhat do you want to update, mortal?\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String [] splitCmds \u003d cmdString.split(\" \", 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int taskPos;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] updateStringArr;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskPos \u003d Integer.parseInt(splitCmds[0]) - 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                updateStringArr \u003d splitCmds[1].split(\",\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tPlease give the numerical index of the task you want to update, mortal!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (!cmdString.contains(\"\u003d\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tAttributes to update in the task must be comma separated, \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                        + \"in the following format:\\n \\tattributeName1\u003dnewValue1, attributeName2\u003dnewValue2, ...\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String originalTask \u003d tasks.getTask(taskPos).toString();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String updatedTask \u003d tasks.getTask(taskPos).update(updateStringArr).toString();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tThe following task has been changed: \\n\\tFrom: \""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + originalTask + \"\\n\\tto: \" + updatedTask);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    };"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public abstract boolean executeCommand(TaskList tasks, Ui ui, String cmdString) throws DukeException;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 187
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Returns exceptions for invalid Duke inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param message String message to be displayed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 13
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Loads the stage for the GUI program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param stage Stage object for the GUI to be loaded."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 37
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/theshoebill.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/thecathulhu.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Initialises the ScrollPane for the GUI."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        scrollPane.setVisible(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Loads the Duke object class in order to interact with the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param d Duke object which contains the logic to handle user inputs."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                DialogBox.getDukeDialog(d.initialise(), dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 67
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Directs input command from System.in to the parse method."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList that stores all the current tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param ui UI for interaction with the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return boolean. true indicates that the user has terminated the program (by typing \"bye\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException for invalid user commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static boolean parseNextCmd(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return parse(tasks, ui, ui.getUserCmd());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Directs input command from the GUI to the parse method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList that stores all the current tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param ui UI for interaction with the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param userCmd String input from GUI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return boolean. true indicates that the user has terminated the program (by typing \"bye\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException for invalid user commands"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static boolean parseNextCmd(TaskList tasks, Ui ui, String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return parse(tasks, ui, userCmd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Parses the command the user enters and execute it."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList that stores all the current tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param ui UI for interaction with the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return boolean. true indicates that the user has terminated the program (by typing \"bye\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException for invalid user commands"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private static boolean parse(TaskList tasks, Ui ui, String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String[] cmdString \u003d userCmd"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .strip()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        DukeCommand cmdType;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String cmdDetails;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            cmdType \u003d DukeCommand.valueOf(cmdString[0].strip().toUpperCase());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"\\tMortal, that\u0027s an invalid Task!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            cmdDetails \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            cmdDetails \u003d cmdString[1].strip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return cmdType.executeCommand(tasks, ui, cmdDetails);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private File tasksFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructs the Storage object which handles reading and saving to data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException If the tasks file directory cannot be created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws IOException For errors with accessing and editing the task file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Storage() throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        File tasksFileDirectory \u003d new File(System.getProperty(\"user.dir\") + \"/dukeData\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (!tasksFileDirectory.isDirectory() \u0026\u0026 !tasksFileDirectory.mkdir()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"Error creating tasks file directory\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.tasksFile \u003d new File(System.getProperty(\"user.dir\") + \"/dukeData/tasksFile.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasksFile.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Loads data from the tasks data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return TaskList. A TaskList object containing all parseable Task objects in the data file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws FileNotFoundException if Scanner object is not able to find the tasks data file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public TaskList loadTasksFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        // Assert that the tasksFile is still at the specified path and has not been shifted by some naughty user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assert tasksFile.isFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Scanner sc \u003d new Scanner(tasksFile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList taskData \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] taskString \u003d sc.nextLine().split(\":;:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            switch (taskString[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                Task tdTask \u003d new ToDo(taskString[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tdTask.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskData.addTask(tdTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    Task dlTask \u003d new Deadline(taskString[2], taskString[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                        dlTask.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    taskData.addTask(dlTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    System.out.println(\"Error loading data from tasksFile.txt. Skipping the following line:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    System.out.println(Arrays.asList(taskString).toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                Task evTask \u003d new Event(taskString[2], taskString[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    evTask.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskData.addTask(evTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return taskData;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Writes all Tasks in the TaskList object to the file at the specified file location."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList. TaskList object storing all current Tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws IOException if FileWriter object do not work as expected"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void writeTasksFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        // Assert that the tasksFile is still at the specified path and has not been shifted by some naughty user"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assert tasksFile.isFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        FileWriter fw \u003d new FileWriter(tasksFile);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fw.write(task.toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 101
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructs a TaskList object, which maintains an array list of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Gets Task objects from the TaskList class instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param index int. The index of the task to be returned"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return Task object at the specified index in the TaskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        // Asserts that there is a Task object at the specified index"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assert tasks.size() \u003e index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Appends a single Task object to the TaskList instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param newTask Task object to be appended"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Removes the Task object at the specified index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param index int. Index of the Task to be removed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return Task object that has been removed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        // Asserts that there is a Task object at the specified index"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assert tasks.size() \u003e index;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Retrieves the number of elements in the TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return int the number of elements"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 62
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private String cathulhuSaysString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructs the Ui object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.cathulhuSaysString \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Concatenates Strings Cathulhu intends to say,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * so that Cathulhu can say everything in one go in cathulhuSaysItOut()."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param msg message to be printed out on the cli"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void cathulhuSays(String msg) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (this.cathulhuSaysString.equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            cathulhuSaysString \u003d msg;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            cathulhuSaysString +\u003d \"\\n\" + msg;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Returns everything Cathulhu wanted to say and clears them from Cathulhu\u0027s memory."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String to be shown to the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String cathulhuSaysItOut() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String retStr \u003d this.cathulhuSaysString;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        flush();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return retStr;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Clears what Cathulhu want to say from his memory."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void flush() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.cathulhuSaysString \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Retrieves the next line of user command via Scanner\u0027s nextLine() method."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String containing the user command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String getUserCmd() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints out the error message received."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param e Typically CathulhuException error with message to be printed out"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        cathulhuSays(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints a line before each user command response."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printLine1() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        cathulhuSays(\"\\t-------------C-A-T-H-U-L-H-U-------------\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints a line after each user command response."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printLine2() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        cathulhuSays(\"\\t----------------M-E-O-W-S----------------\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Shows the goodbye message for this program."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String catLeaves \u003d \".......................................Iä! Iä! .......................\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"...........................................Cthul......................\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"............................................hu fh.....................\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \".........\u0027,\u0027...............................tagn!......................\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"........\u0027Ph\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah.......................\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \".......\u0027nagl fhatgn! Iä! Iä! Cthulhu fhtagn! P........................\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \".......h\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah\u0027n........................\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"........agl fhtagn! Iä! Iä! Cthulhu fhtagn! P.........................\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"...............h\u0027nglui mglw\u0027nfah Cthulhu R\u0027ly;........................\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"................yeh wgah\u0027nagl fhtagn! Iä! Iä!,........................\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"...............Cthul...hufht.....agn!Ph\u0027nglui ........................\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"..............mglw.....\u0027nfah.....Cthu.....lhu.........................\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \".............R\u0027ly........ehw....gah\u0027.......nag........................\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \".............lf...........ht....ag..........n!........................\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        cathulhuSays(\"Be gone then, mortal.\\n\" + catLeaves);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Shows the welcome message for this program."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String logo \u003d \"         _..._                                                                          \\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"      .-\u0027_..._\u0027\u0027.                                         .---.                         \\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"    .\u0027 .\u0027      \u0027.\\\\                    .                   |   |   .                     \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"   / .\u0027                             .\u0027|                   |   | .\u0027|                     \\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"  . \u0027                           .| \u003c  |                   |   |\u003c  |                     \\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"  | |                 __      .\u0027 |_ | |                   |   | | |                     \\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"  | |              .:--.\u0027.  .\u0027     || | .\u0027\u0027\u0027-.     _    _ |   | | | .\u0027\u0027\u0027-.     _    _   \\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"  . \u0027             / |   \\\\ |\u0027--.  .-\u0027| |/.\u0027\u0027\u0027. \\\\   | \u0027  / ||   | | |/.\u0027\u0027\u0027. \\\\   | \u0027  / |  \\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"   \\\\ \u0027.          .`\\\" __ | |   |  |  |  /    | |  .\u0027 | .\u0027 ||   | |  /    | |  .\u0027 | .\u0027 |  \\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"    \u0027. `._____.-\u0027/ .\u0027.\u0027\u0027| |   |  |  | |     | |  /  | /  ||   | | |     | |  /  | /  |  \\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"      `-.______ / / /   | |_  |  \u0027.\u0027| |     | | |   `\u0027.  |\u0027---\u0027 | |     | | |   `\u0027.  |  \\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"               `  \\\\ \\\\._,\\\\ \u0027/  |   / | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/     | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/ \\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \"                  `--\u0027  `\\\"   `\u0027-\u0027  \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027      \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027  \\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        cathulhuSays(logo + \"\\tIt\u0027s you again, mortal. \\n\\tWhy have thou summoned meow this time?\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 132
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String byString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Deadline object, a subclass of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param by String setting the deadline for this task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.byString \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.by \u003d parseBy(this.byString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Parses input String object into a LocalDateTime object based on set patterns."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param by String to be parsed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return LocalDateTime representation of time in the input String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException if the input String cannot be parsed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private LocalDateTime parseBy(String by) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        DateTimeFormatter patternWithOptional \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return LocalDateTime.parse(by.strip(), patternWithOptional);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"\\tInput date \u0026 time must follow the following format, mortal!\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\t  yyyy-MM-dd or yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format D:;:isDone:;:description:;:by"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"D:;:\" + super.toDataString() + \":;:\" + this.byString;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm \")) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Updates this task object attributes without creating a new object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param updateStrArr String[] containing data for the update"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return the reference of this object"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task update(String[] updateStrArr) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super.update(updateStrArr);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        for (String updateStr : updateStrArr) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] attrToChange \u003d updateStr.split(\"\u003d\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String attr \u003d attrToChange[0].strip();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String newValue \u003d attrToChange[1].strip();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (attr.equalsIgnoreCase(\"by\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                this.byString \u003d newValue;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                this.by \u003d parseBy(this.byString);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 92
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Deadline object, a subclass of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param at String setting the deadline for this task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format E:;:isDone:;:description:;:at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"E:;:\" + super.toDataString() + \":;:\" + this.at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Updates this task object attributes without creating a new object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param updateStrArr String[] containing data for the update"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return the reference of this object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task update(String[] updateStrArr) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super.update(updateStrArr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        for (String updateStr : updateStrArr) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] attrToChange \u003d updateStr.split(\"\u003d\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String attr \u003d attrToChange[0].strip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String newValue \u003d attrToChange[1].strip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (attr.equalsIgnoreCase(\"at\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                this.at \u003d newValue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 62
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Task class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Gets the status icons, depending on whether the task has been completed:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * \"Y\" is returned if the task is completed, or \"N\" is returned if the task is incomplete."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String for the status icons"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); // as ticks and X don\u0027t parse well on powershell"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Sets the status of this task to done (Default: not done)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format isDone:;:description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return (isDone ? \"1\" : \"0\") + \":;:\" + this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Updates this task object attributes without creating a new object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param updateStrArr String[] containing data for the update"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return the reference of this object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task update(String[] updateStrArr) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        for (String updateStr : updateStrArr) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] attrToChange \u003d updateStr.split(\"\u003d\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String attr \u003d attrToChange[0].strip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String newValue \u003d attrToChange[1].strip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (attr.equalsIgnoreCase(\"description\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                this.description \u003d newValue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } else if (attr.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (newValue.equalsIgnoreCase(\"true\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    this.isDone \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                } else if (newValue.equalsIgnoreCase(\"false\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    this.isDone \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 85
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the ToDo object, a subclass of Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format T:;:isDone:;:description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"T:;:\" + super.toDataString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"360.0\" prefWidth\u003d\"906.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.2\" prefHeight\u003d\"340.0\" prefWidth\u003d\"696.0\" style\u003d\"-fx-border-width: 4px; -fx-border-color: #008ED8; -fx-border-style: dotted; -fx-border-radius: 20px; -fx-background-color: #D8FBF1;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      \u003cPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-border-radius: 50%;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"190.0\" fitWidth\u003d\"190.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      \u003c/Pane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bscrow": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"785.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"3.0\" layoutY\u003d\"740\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"910.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            \u003cFont name\u003d\"Rockwell\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"915.0\" layoutY\u003d\"744\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"82.0\" text\u003d\"Speak\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            \u003cFont name\u003d\"Script MT Bold\" size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      \u003c/Button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"730.0\" prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"730.0\" prefWidth\u003d\"995.0\" style\u003d\"-fx-background-color: #F4FBD8;\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "bscrow": 27
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Tests if the getTask method works as expected"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"qwerty\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"asdfgh\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response \u003d tl.getTask(1).toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"[N] asdfgh\", response);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Tests if the size method works as expected"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void sizeTest() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response \u003d String.valueOf(tl.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"qwerty\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"asdfgh\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"zxcvbn\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response +\u003d String.valueOf(tl.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"03\", response);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 43
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Checks if the Deadline toString method works as expected"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            Deadline dl \u003d new Deadline(\"CS2103 IP\", \"2020-01-28 23:59\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            dl.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d dl.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"[D][Y] CS2103 IP (by: Jan 28 2020 23:59 )\", response);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Checks if the toDataString method works as expected"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void toDataStringTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d new Deadline(\"CS2103\", \"2020-01-28\").toDataString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"D:;:0:;:CS2103:;:2020-01-28\", response);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 39
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         _..._                                                                          "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      .-\u0027_..._\u0027\u0027.                                         .---.                         "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    .\u0027 .\u0027      \u0027.\\                    .                   |   |   .                     "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "   / .\u0027                             .\u0027|                   |   | .\u0027|                     "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  . \u0027                           .| \u003c  |                   |   |\u003c  |                     "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  | |                 __      .\u0027 |_ | |                   |   | | |                     "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  | |              .:--.\u0027.  .\u0027     || | .\u0027\u0027\u0027-.     _    _ |   | | | .\u0027\u0027\u0027-.     _    _   "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  . \u0027             / |   \\ |\u0027--.  .-\u0027| |/.\u0027\u0027\u0027. \\   | \u0027  / ||   | | |/.\u0027\u0027\u0027. \\   | \u0027  / |  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "   \\ \u0027.          .`\" __ | |   |  |  |  /    | |  .\u0027 | .\u0027 ||   | |  /    | |  .\u0027 | .\u0027 |  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u0027. `._____.-\u0027/ .\u0027.\u0027\u0027| |   |  |  | |     | |  /  | /  ||   | | |     | |  /  | /  |  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      `-.______ / / /   | |_  |  \u0027.\u0027| |     | | |   `\u0027.  |\u0027---\u0027 | |     | | |   `\u0027.  |  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "               `  \\ \\._,\\ \u0027/  |   / | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/     | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/ "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                  `--\u0027  `\"   `\u0027-\u0027  \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027      \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        It\u0027s you again, mortal. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Why have thou summoned meow this time?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You are free now, mortal."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [T][N] 1100 hw"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 1 tasks now, mortal"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [D][N] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 2 tasks now, mortal"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 3 tasks now, mortal"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Here are your tasks, mortal:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        1. [T][N] 1100 hw"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        2. [D][N] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        3. [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Mortal, thou have completed this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [D][Y] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Mortal, thou have completed this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [T][Y] 1100 hw"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Here are your tasks, mortal:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        1. [T][Y] 1100 hw"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        2. [D][Y] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        3. [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Be gone then, mortal."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "......................................................................"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......................................Iä! Iä! ......................."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...........................................Cthul......................"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "............................................hu fh....................."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".........\u0027,\u0027...............................tagn!......................"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "........\u0027Ph\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah......................."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......\u0027nagl fhatgn! Iä! Iä! Cthulhu fhtagn! P........................"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......h\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah\u0027n........................"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "........agl fhtagn! Iä! Iä! Cthulhu fhtagn! P........................."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...............h\u0027nglui mglw\u0027nfah Cthulhu R\u0027ly;........................"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "................yeh wgah\u0027nagl fhtagn! Iä! Iä!,........................"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...............Cthul...hufht.....agn!Ph\u0027nglui ........................"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "..............mglw.....\u0027nfah.....Cthu.....lhu........................."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".............R\u0027ly........ehw....gah\u0027.......nag........................"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".............lf...........ht....ag..........n!........................"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "......................................................................"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bscrow": 92
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "todo 1100 hw"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "deadline 2131 hw /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "event meet hl /at tuesday in nus"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bscrow": 9
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "java -classpath ..\\bin Cathulhu \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "FC ACTUAL.TXT EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "bscrow": 21
    }
  }
]
