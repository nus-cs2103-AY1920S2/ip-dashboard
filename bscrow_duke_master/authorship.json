[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                \u0027Main-Class\u0027: \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        )"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 17,
      "-": 20
    }
  },
  {
    "path": "data/tasksFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "E:;:1:;:climb with huai :;:today"
      }
    ],
    "authorContributionMap": {
      "bscrow": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            this.tasks \u003d storage.loadTasksFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private void interact() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        boolean byebye \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        while (!byebye) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printLine1();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                byebye \u003d Parser.parse(tasks, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                storage.writeTasksFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.printLine2();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        new Duke().interact();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 47
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Returns exceptions for invalid Duke inputs"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param message String message to be displayed"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 12
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Parses the command the user enters and execute it"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList that stores all the current tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param ui UI for interaction with the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return boolean. true indicates that the user has terminated the program (by typing \"bye\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws DukeException for invalid user commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public static boolean parse(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String[] cmdString \u003d ui.getUserCmd()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .strip()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (cmdString[0].equalsIgnoreCase(\"bye\")) { //bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"list\")) { //list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\tYou are free now, mortal.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\tHere are your tasks, mortal:\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    ui.cathulhuSays(\"\\t\" + i + \". \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"done\")) { //done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to mark as done, mortal!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(cmdString[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003c\u003d taskIndex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tMortal, thou have no such task!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.getTask(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\tMortal, thou have completed this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\t  \" + tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"delete\")) { //delete"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tWhich task do you want to delete, mortal!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(cmdString[1]) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (tasks.size() \u003c\u003d taskIndex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tMortal, thou have no such task!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            System.out.printf(\"\\tMortal, the following task has been deleted:\\n\\t  %s\\n\\tYou have %d tasks left\\n\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tasks.removeTask(taskIndex), tasks.size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"todo\")) { //todo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"todo\\\" task must have a description, mortal!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new ToDo(cmdString[1]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            System.out.printf(\"\\tTask added: \\n\\t  %s\\n\\tYou have %d tasks now, mortal\\n\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tasks.getTask(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"deadline\")) { //deadline"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"deadline\\\" task must have a description and a deadline, mortal!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] byString \u003d cmdString[1].split(\"/by \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (byString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"deadline\\\" task must have a deadline, mortal!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new Deadline(byString[0], byString[1]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            System.out.printf(\"\\tTask added: \\n\\t  %s\\n\\tYou have %d tasks now, mortal\\n\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tasks.getTask(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"event\")) { //event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tAn \\\"event\\\" task must have a description and a time, mortal!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] atString \u003d cmdString[1].split(\"/at \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (atString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tAn \\\"event\\\" task must have a time, mortal!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            tasks.addTask(new Event(atString[0], atString[1]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            System.out.printf(\"\\tTask added: \\n\\t  %s\\n\\tYou have %d tasks now, mortal\\n\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tasks.getTask(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else if (cmdString[0].equalsIgnoreCase(\"find\")) { //find"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (cmdString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                throw new DukeException(\"\\tA \\\"find\\\" task must have a keyword to search, mortal!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            ui.cathulhuSays(\"\\t  Here are the matching tasks in your list, mortal:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            int numMatches \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                String taskString \u003d tasks.getTask(i).toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString.contains(cmdString[1])) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    numMatches++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    ui.cathulhuSays(\"\\t  \" + String.valueOf(numMatches) + \".\" + taskString);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            if (numMatches\u003d\u003d0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                ui.cathulhuSays(\"\\t  You have no matching task, mortal.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"\\tMortal, that\u0027s an invalid Task!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 113
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private File tasksFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Storage() throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        File tasksFileDirectory \u003d new File(System.getProperty(\"user.dir\") + \"/dukeData\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        if (!tasksFileDirectory.isDirectory() \u0026\u0026 !tasksFileDirectory.mkdir()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"Error creating tasks file directory\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.tasksFile \u003d new File(System.getProperty(\"user.dir\") + \"/dukeData/tasksFile.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasksFile.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Loads data from the tasks data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return TaskList. A TaskList object containing all parseable Task objects in the data file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws FileNotFoundException if Scanner object is not able to find the tasks data file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public TaskList loadTasksFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Scanner sc \u003d new Scanner(tasksFile);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList taskData \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            String[] taskString \u003d sc.nextLine().split(\":;:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            switch(taskString[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                Task tdTask \u003d new ToDo(taskString[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    tdTask.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskData.addTask(tdTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    Task dlTask \u003d new Deadline(taskString[2], taskString[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                        dlTask.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    taskData.addTask(dlTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    System.out.println(\"Error loading data from tasksFile.txt. Skipping the following line:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    System.out.println(Arrays.asList(taskString).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                Task evTask \u003d new Event(taskString[2], taskString[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                if (taskString[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    evTask.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                taskData.addTask(evTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return taskData;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Writes all Tasks in the TaskList object to the file at the specified file location"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param tasks TaskList. TaskList object storing all current Tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @throws IOException if FileWriter object do not work as expected"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void writeTasksFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        FileWriter fw \u003d new FileWriter(tasksFile);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            fw.write(task.toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 93
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the TaskList class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Gets Task objects from the TaskList class instance"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param index int. The index of the task to be returned"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return Task object at the specified index in the TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Appends a single Task object to the TaskList instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param newTask Task object to be appended"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Removes the Task object at the specified index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param index int. Index of the Task to be removed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return Task object that has been removed"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Retrieves the number of elements in the TaskList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return int the number of elements"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 52
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the UI class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Retrieves the next line of user command via Scanner\u0027s nextLine() method"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String containing the user command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String getUserCmd() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Speaks on behalf of Cathulhu"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param msg message to be printed out on the cli"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void cathulhuSays(String msg) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Shows the welcome message for this program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String logo \u003d \"         _..._                                                                          \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"      .-\u0027_..._\u0027\u0027.                                         .---.                         \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"    .\u0027 .\u0027      \u0027.\\\\                    .                   |   |   .                     \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"   / .\u0027                             .\u0027|                   |   | .\u0027|                     \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"  . \u0027                           .| \u003c  |                   |   |\u003c  |                     \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"  | |                 __      .\u0027 |_ | |                   |   | | |                     \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"  | |              .:--.\u0027.  .\u0027     || | .\u0027\u0027\u0027-.     _    _ |   | | | .\u0027\u0027\u0027-.     _    _   \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"  . \u0027             / |   \\\\ |\u0027--.  .-\u0027| |/.\u0027\u0027\u0027. \\\\   | \u0027  / ||   | | |/.\u0027\u0027\u0027. \\\\   | \u0027  / |  \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"   \\\\ \u0027.          .`\\\" __ | |   |  |  |  /    | |  .\u0027 | .\u0027 ||   | |  /    | |  .\u0027 | .\u0027 |  \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"    \u0027. `._____.-\u0027/ .\u0027.\u0027\u0027| |   |  |  | |     | |  /  | /  ||   | | |     | |  /  | /  |  \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"      `-.______ / / /   | |_  |  \u0027.\u0027| |     | | |   `\u0027.  |\u0027---\u0027 | |     | | |   `\u0027.  |  \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"               `  \\\\ \\\\._,\\\\ \u0027/  |   / | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/     | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/ \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"                  `--\u0027  `\\\"   `\u0027-\u0027  \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027      \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027  \\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(logo + \"\\n\\n\\tIt\u0027s you again, mortal. \\n\\tWhy have thou summoned meow this time?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Shows the goodbye message for this program"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String catLeaves \u003d \"......................................................................\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".......................................Iä! Iä! .......................\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"...........................................Cthul......................\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"............................................hu fh.....................\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".........\u0027,\u0027...............................tagn!......................\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"........\u0027Ph\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah.......................\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".......\u0027nagl fhatgn! Iä! Iä! Cthulhu fhtagn! P........................\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".......h\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah\u0027n........................\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"........agl fhtagn! Iä! Iä! Cthulhu fhtagn! P.........................\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"...............h\u0027nglui mglw\u0027nfah Cthulhu R\u0027ly;........................\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"................yeh wgah\u0027nagl fhtagn! Iä! Iä!,........................\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"...............Cthul...hufht.....agn!Ph\u0027nglui ........................\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"..............mglw.....\u0027nfah.....Cthu.....lhu.........................\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".............R\u0027ly........ehw....gah\u0027.......nag........................\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\".............lf...........ht....ag..........n!........................\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                +\"......................................................................\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(\"\\tBe gone then, mortal.\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(catLeaves);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints a line before each user command response"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printLine1() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(\"\\t-------------C-A-T-H-U-L-H-U-------------\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints a line after each user command response"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printLine2() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.out.println(\"\\t----------------M-E-O-W-S----------------\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Prints out the error message received"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param e Typically CathulhuException error with message to be printed out"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        System.err.println(e);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 101
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String byString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Deadline object, a subclass of Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param by String setting the deadline for this task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.byString \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        DateTimeFormatter patternWithOptional \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by.strip(), patternWithOptional);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            throw new DukeException(\"\\tInput date \u0026 time must follow the following format, mortal!\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                    + \"\\t  yyyy-MM-dd or yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format D:;:isDone:;:description:;:by"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"D:;:\" + super.toDataString() + \":;:\" + this.byString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm \")) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 56
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Deadline object, a subclass of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param at String setting the deadline for this task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format E:;:isDone:;:description:;:at"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"E:;:\" + super.toDataString() + \":;:\" + this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 36
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the Task class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Gets the status icons, depending on whether the task has been completed:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * \"Y\" is returned if the task is completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * \"N\" is returned if the task is incomplete"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String for the status icons"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); // as ticks and X don\u0027t parse well on powershell"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Sets the status of this task to done (Default: not done)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format isDone:;:description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return (isDone ? \"1\" : \"0\") + \":;:\" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 53
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Constructor for the ToDo object, a subclass of Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @param description String containing the description of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be written into the data file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String in the format T:;:isDone:;:description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"T:;:\" + super.toDataString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Formats this object as a String to be printed out"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 34
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Tests if the getTask method works as expected"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"qwerty\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"asdfgh\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"zxcvbn\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response \u003d tl.getTask(1).toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"[N] asdfgh\", response);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Tests if the size method works as expected"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void sizeTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response \u003d String.valueOf(tl.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"qwerty\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"asdfgh\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        tl.addTask(new Task(\"zxcvbn\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        response +\u003d String.valueOf(tl.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"03\", response);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 44
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Checks if the Deadline toString method works as expected"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            Deadline dl \u003d new Deadline(\"CS2103 IP\", \"2020-01-28 23:59\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            dl.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d dl.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"[D][Y] CS2103 IP (by: Jan 28 2020 23:59 )\", response);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     * Checks if the toDataString method works as expected"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    public void toDataStringTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d new Deadline(\"CS2103\", \"2020-01-28\").toDataString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        assertEquals(\"D:;:0:;:CS2103:;:2020-01-28\", response);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bscrow": 39
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "         _..._                                                                          "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      .-\u0027_..._\u0027\u0027.                                         .---.                         "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    .\u0027 .\u0027      \u0027.\\                    .                   |   |   .                     "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "   / .\u0027                             .\u0027|                   |   | .\u0027|                     "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  . \u0027                           .| \u003c  |                   |   |\u003c  |                     "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  | |                 __      .\u0027 |_ | |                   |   | | |                     "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  | |              .:--.\u0027.  .\u0027     || | .\u0027\u0027\u0027-.     _    _ |   | | | .\u0027\u0027\u0027-.     _    _   "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "  . \u0027             / |   \\ |\u0027--.  .-\u0027| |/.\u0027\u0027\u0027. \\   | \u0027  / ||   | | |/.\u0027\u0027\u0027. \\   | \u0027  / |  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "   \\ \u0027.          .`\" __ | |   |  |  |  /    | |  .\u0027 | .\u0027 ||   | |  /    | |  .\u0027 | .\u0027 |  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    \u0027. `._____.-\u0027/ .\u0027.\u0027\u0027| |   |  |  | |     | |  /  | /  ||   | | |     | |  /  | /  |  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "      `-.______ / / /   | |_  |  \u0027.\u0027| |     | | |   `\u0027.  |\u0027---\u0027 | |     | | |   `\u0027.  |  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "               `  \\ \\._,\\ \u0027/  |   / | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/     | \u0027.    | \u0027.\u0027   .\u0027|  \u0027/ "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "                  `--\u0027  `\"   `\u0027-\u0027  \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027      \u0027---\u0027   \u0027---\u0027`-\u0027  `--\u0027  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        It\u0027s you again, mortal. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Why have thou summoned meow this time?"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You are free now, mortal."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [T][N] 1100 hw"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 1 tasks now, mortal"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [D][N] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 2 tasks now, mortal"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Task added: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        You have 3 tasks now, mortal"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Here are your tasks, mortal:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        1. [T][N] 1100 hw"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        2. [D][N] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        3. [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Mortal, thou have completed this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [D][Y] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Mortal, thou have completed this task:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bscrow"
        },
        "content": "          [T][Y] 1100 hw"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        -------------C-A-T-H-U-L-H-U-------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Here are your tasks, mortal:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        1. [T][Y] 1100 hw"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        2. [D][Y] 2131 hw  (by: tmr)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        3. [E][N] meet hl  (at: tuesday in nus)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        ----------------M-E-O-W-S----------------"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bscrow"
        },
        "content": "        Be gone then, mortal."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bscrow"
        },
        "content": "......................................................................"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......................................Iä! Iä! ......................."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...........................................Cthul......................"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bscrow"
        },
        "content": "............................................hu fh....................."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".........\u0027,\u0027...............................tagn!......................"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bscrow"
        },
        "content": "........\u0027Ph\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah......................."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......\u0027nagl fhatgn! Iä! Iä! Cthulhu fhtagn! P........................"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".......h\u0027nglui mglw\u0027nfah Cthulhu R\u0027lyeh wgah\u0027n........................"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bscrow"
        },
        "content": "........agl fhtagn! Iä! Iä! Cthulhu fhtagn! P........................."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...............h\u0027nglui mglw\u0027nfah Cthulhu R\u0027ly;........................"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bscrow"
        },
        "content": "................yeh wgah\u0027nagl fhtagn! Iä! Iä!,........................"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bscrow"
        },
        "content": "...............Cthul...hufht.....agn!Ph\u0027nglui ........................"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bscrow"
        },
        "content": "..............mglw.....\u0027nfah.....Cthu.....lhu........................."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".............R\u0027ly........ehw....gah\u0027.......nag........................"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bscrow"
        },
        "content": ".............lf...........ht....ag..........n!........................"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bscrow"
        },
        "content": "......................................................................"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bscrow": 92
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": "todo 1100 hw"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "deadline 2131 hw /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "event meet hl /at tuesday in nus"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bscrow": 9
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bscrow"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bscrow"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bscrow"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bscrow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bscrow"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bscrow"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bscrow"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bscrow"
        },
        "content": "java -classpath ..\\bin Cathulhu \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bscrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bscrow"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bscrow"
        },
        "content": "FC ACTUAL.TXT EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "bscrow": 21
    }
  }
]
