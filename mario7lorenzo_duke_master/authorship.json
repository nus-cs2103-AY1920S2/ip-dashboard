[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    from {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        configurations.runtime.collect {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            it.isDirectory() ? it : zipTree(it)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        configurations.compile.collect {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            it.isDirectory() ? it : zipTree(it)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027Driver\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    exclude \u0027META-INF/*.RSA\u0027, \u0027META-INF/*.SF\u0027,\u0027META-INF/*.DSA\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 53,
      "-": 19
    }
  },
  {
    "path": "data/archive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | helloworld"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | helloworld"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "E | 0 | valentine with girlfriend | 14-02-2020 21:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "E | 0 | drunk with friends | 13-02-2020 23:59"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | helloworld"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | helloworld"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "E | 0 | drunk with friends | 13-02-2020 23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "E | 0 | valentine with girlfriend | 14-02-2020 21:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | dddskpfs"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | duar"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | tod"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | todododod"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "T | 0 | dododododo"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 9
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke is your customized helper chatbot that is always available for you to help you managing"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "your tasks, deadlines, and events. You can add, mark, and delete the tasks by typing it in the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "GUI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- [Requirements](#requirements)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Interactive GUI](#interactive-gui)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Your regular events and deadlines](#your-regular-events-and-deadlines)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Finds your tasks](#finds-your-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Reminds your upcoming events and deadlines](#reminds-your-upcoming-events-and-deadlines)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Archive your tasks](#archive-your-tasks)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Take random notes](#take-random-notes)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Close your Duke without clicking](#close-your-duke-without-clicking)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [List tasks](#list-tasks)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Adds a task](#adds-a-task)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Deletes a task](#deletes-a-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Marks a task as done](#marks-a-task-as-done)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Finds tasks](#finds-tasks)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Archives](#archives)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    - [Notes](#notes)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "## Requirements"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- Duke runs in Java 11 or later."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- The `.jar` file of Duke can be found [here](https://github.com/mario7lorenzo/duke/releases)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Interactive GUI"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke has a GUI to provide the users more personal feeling toward Duke. You can use Duke similar"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "to your daily routine, which is chatting with your friends! The difference is your friends may be lazy to "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "talk to you, but Duke always responds to you immediately :D. You will never be lonely afterwards, how cool"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "is that?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003cimg src\u003d\"Ui.png\" width\u003d\"200\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Your regular events and deadlines"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke helps you to manage your tasks, that are categorized into three types:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- Todo"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- Deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- Event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "You can add, delete, and mark the done tasks in your list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Reminds your upcoming events and deadlines"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Whenever you start Duke, you will be given a warm-welcome message, and your nearest events and deadlines, so that"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "you are keep reminded."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Archive your tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke can archive your tasks and retrieve them back upon your command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Take random notes"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke provides a service for you to put miscellaneous notes, such as the size of your girlfriend\u0027s clothes,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "the movies that your mother like, etc. Duke is perfect for you who have a goldfish memory :p."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Close your Duke without clicking"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke can bid farewell to you, simply by typing `bye` in your text box. As simple as that."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "List all the tasks that Duke has memorized.\u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`list`\u003cbr\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`list`\u003cbr\u003eIt will show all the tasks in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Adds a task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Adds a new task to your list so Duke can memorize it for you. Since Duke classifies a task into three types, you can"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "have the following format:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `todo [description]`\u003cbr\u003eAdds your to-do task to your list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `deadline [description] /by [due-date]`\u003cbr\u003eAdds your deadline that dues on the `due-date` to the list. Your `due-date`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "must be in `dd/MM/YYYY HH:mm` format."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `event [description] /at [event-date]`\u003cbr\u003eAdds your event that happens on the `event-date` to the list. Your `event-date`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "must be in `dd/MM/YYYY HH:mm` format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `todo swimming in money`\u003cbr\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Adds a new todo task with description `swimming in money`. Duke will chat you back to inform whether it is added"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "successfully or there exists a format error."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `event valentine date with my girlfriend :* /at 14-02-2020 22:00`\u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Adds a new event task with description `event valentine date with my girlfriend :*` at `14-02-2020 22:00`. Duke will "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "chat you back to inform whether it is added successfully or there exists a format error, such as the event date format."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `deadline CS2103 Duke Project /by 14-02-2020 23:59`\u003cbr\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Adds a new deadline task with description `CS2103 Duke Project` which due at `14-02-2020 23:59`. Duke will "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "chat you back to inform whether it is added successfully or there exists a format error, such as the due date format."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Deletes a task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Removes a task from your list, according to its number inside the list.\u003cbr\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`delete [task-index]`\u003cbr\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Removes the first task that appears in your task list. Duke will chat you back to inform whether it is deleted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "successfully or there exists an error, such as the number exceeds the number of tasks in the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Marks a task as done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Marks a task in a list, according to its number inside the list.\u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`done [task-index]`\u003cbr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`done 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Marks the first task as done. Duke will chat you back to inform whether it is deleted successfully or there exists "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "an error, such as the number exceeds the number of tasks in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Finds tasks"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Lists all the task with certain keyword.\u003cbr\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`find [keyword]`\u003cbr\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "`find CS2103`\u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Displays all the tasks that contains `CS2103` in their description."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Archives"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke can put your tasks into an archive. The archived tasks can be deleted, or added back to the list. The commands "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "regarding to archives are listed below:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-list`\u003cbr\u003eDisplays all the archived tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-add [task-index]`\u003cbr\u003eMoves the task of a given index in the list to the archive."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-delete [archived-task-index]`\u003cbr\u003eDeletes the task permanently from the archive."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `unarchive [archived-task-index]`\u003cbr\u003eUnarchives the task from the archive."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-list`\u003cbr\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will list all the archived tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-add 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will move the first task in the current list to the archive."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `archive-delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will delete the first task in the archived task list from the archive."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `unarchive 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will unarchive the first task in the archived list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "### Notes"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke can memorize random notes from the user. The commands regarding to notes are listed below:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-list`\u003cbr\u003eDisplays all the notes that Duke has memorized."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-add [description]`\u003cbr\u003e Adds a note with the description."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-delete [notes-index]`\u003cbr\u003e Deletes the note with a certain index from the note list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-list`\u003cbr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will list all the notes that it has memorized."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-add my girlfriend\u0027s birthday is on 5th of November`\u003cbr\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will add a note with details `my girlfriend\u0027s birthday is on 5th of November`."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "- `notes-delete 1`\u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Duke will delete the first note in the notes list."
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 127,
      "-": 18
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DialogBox"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 31 Jan 2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DialogBox class represents the line in which"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * the message is being displayed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DialogBox instance."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param text The message that is being displayed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param img The image of the sender."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Circle circle \u003d new Circle(35, 40, 35);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Flips the position between such that the user and Duke"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * can be differentiated."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates a dialog box when Duke wants to send a message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param text The message that Duke wants to show."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param img The Duke image."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The DialogBox instance."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates a dialog box when the user wants to send a command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param text The command message that the user wants to send to Duke."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param img The image of the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The DialogBox instance."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 95
    }
  },
  {
    "path": "src/main/java/Driver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Driver"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe Driver class is the class that contains the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * main method to receive inputs from the client and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * passing it to Duke to be processed.\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Driver extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String STAGE_TITLE \u003d \"Duke\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String BYE_STRING \u003d \"bye\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String MAIN_WINDOW_FXML \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * The main method runs the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param args The command line arguments entered into the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Ui userInterface \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Duke duke \u003d Duke.start();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            userInterface.start();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            String command \u003d userInterface.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            while (isNotEqualBye(command)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                String message \u003d duke.processCommand(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                userInterface.displayMessage(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                userInterface.printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                command \u003d userInterface.readCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeInvalidTaskFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            userInterface.displayErrorMessage(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            userInterface.printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            userInterface.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns whether the command string equals to bye."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param command The command entered by the client."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The boolean value."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static boolean isNotEqualBye(String command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return !command.equals(BYE_STRING);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Starts the app\u0027s GUI by loading the resources from MainWindow.fxml."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param stage The stage of the GUI."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Driver.class.getResource(MAIN_WINDOW_FXML));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            stage.setTitle(STAGE_TITLE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(Duke.start());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeInvalidTaskFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 93
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Note;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe Duke class is the main class of the bot,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * where the command processing happens.\u003c/p\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ArchiveList archiveList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Storage taskStorage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Storage archiveStorage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteStorage noteStorage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteList noteList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String DATA_DIRECTORY \u003d \"./data\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String TASK_DIRECTORY \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String ARCHIVE_DIRECTORY \u003d \"./data/archive.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String NOTES_DIRECTORY \u003d \"./data/notes.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the Duke instance that has a list that"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * stores tasks, as well as the list of all valid commands"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * that the Duke instance can perform, stored in a HashMap."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Duke(TaskList taskList, ArchiveList archiveList,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                 Storage taskStorage, Storage archiveStorage, NoteList noteList,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                 NoteStorage noteStorage, Parser parser) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.archiveList \u003d archiveList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.taskStorage \u003d taskStorage;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.archiveStorage \u003d archiveStorage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.noteList \u003d noteList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.noteStorage \u003d noteStorage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates a Duke instance with a factory method fashion."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * A Duke instance with the list of tasks loaded will be created"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * if the file is formatted properly."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return A Duke instance, loaded with the list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the file is not formatted properly."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date of the deadline or event is not formatted properly."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static Duke start() throws DukeInvalidTaskFormatException, DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        setStorage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Storage taskStorage \u003d new Storage(TASK_DIRECTORY);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Storage archiveStorage \u003d new Storage(ARCHIVE_DIRECTORY);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        NoteStorage noteStorage \u003d new NoteStorage(NOTES_DIRECTORY);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cTask\u003e archives \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            tasks \u003d taskStorage.load();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            archives \u003d archiveStorage.load();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            notes \u003d noteStorage.load();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeInvalidTaskFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArchiveList archiveList \u003d new ArchiveList(archives);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        NoteList noteList \u003d new NoteList(notes);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new Duke(taskList, archiveList, taskStorage, archiveStorage, noteList, noteStorage, new Parser());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Parses the input entered by the client.\u003cbr\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *     The following are valid commands that Duke can process:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *     \u003cul\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003elist\u003c/tt\u003e - lists all the tasks that Duke has stored.\u003c/li\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003edone [index]\u003c/tt\u003e - marks the task of a particular index as done.\u003c/li\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003edelete [index]\u003c/tt\u003e - deletes the task of a particular index.\u003c/li\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003etodo [description]\u003c/tt\u003e - adds the Todo task to the list.\u003c/li\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003edeadline [description] /by [date]\u003c/tt\u003e - adds the Deadline task to the list.\u003c/li\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003eevent [description] /at [date]\u003c/tt\u003e - adds the Event task to the list.\u003c/li\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003efind [keyword]\u003c/tt\u003e - finds tasks using a keyword.\u003c/li\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003earchive-list\u003c/tt\u003e - lists all the archived tasks.\u003c/li\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003earchive-add [index]\u003c/tt\u003e - moves a task at a particular index to the archive.\u003c/li\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *         \u003cli\u003e\u003ctt\u003earchive-delete [index]\u003c/tt\u003e - deletes an archived task at a particular index.\u003c/li\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     *     \u003c/ul\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commands The instruction provided by the client."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String processCommand(String commands) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Command command \u003d parser.parse(commands, taskList, archiveList, noteList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return command.execute(taskList, taskStorage, archiveList, archiveStorage, noteList, noteStorage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeException exc) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return exc.getMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Sets up the storage for Duke to read and write the contents."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static void setStorage() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        createDataDirectory();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        createTaskFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        createArchiveFile();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        createNoteFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates the data directory if it is not exist yet."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static void createDataDirectory() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        File file \u003d new File(DATA_DIRECTORY);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates the tasks.txt file inside the data directory if not exist yet."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static void createTaskFile() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        File file \u003d new File(TASK_DIRECTORY);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates the archive.txt file inside the data directory if not exist yet."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static void createArchiveFile() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        File file \u003d new File(ARCHIVE_DIRECTORY);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates the notes.txt file inside the data directory if not exist yet."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static void createNoteFile() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        File file \u003d new File(NOTES_DIRECTORY);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 190,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Launcher"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 14 Feb 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Launcher class launches the Driver class to open the GUI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Runs the GUI."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param args The argument input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Application.launch(Driver.class, args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 27
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * MainWindow"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 31 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Initializes the window."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Stores the Duke instance in a variable."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param d The Duke instance."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                DialogBox.getDukeDialog(getWelcomeMessage(), dukeImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(\"reminder\"), dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        checkExit(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the output result from Duke."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param input The command input from the client."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The resulting output message from Duke."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return duke.processCommand(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the welcome message from Duke."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The welcome message."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getWelcomeMessage() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Hi! I\u0027m Duke (actually, my real name is Alice lol). Please enter your command!\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Checks the input whether it is a bye command. Close the"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * app if it is."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param input The string input by the command."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private void checkExit(String input) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 108
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * AddCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eAddCommand extends the Command abstract class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of a command regarding"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to adding task.\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the AddCommand."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The task that wants to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the unarchive command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.addTask(task, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 66
    }
  },
  {
    "path": "src/main/java/duke/command/ArchiveAddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ArchiveAddCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 07 Feb 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eArchiveAddCommand extends the command abstract class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to add the task to the archive.\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ArchiveAddCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs an ArchiveAddCommand instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task that is wanted to be archived."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArchiveAddCommand(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the archive-add command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        taskList.deleteTask(this.index, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return archiveList.archiveTask(task,archiveStorage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 67
    }
  },
  {
    "path": "src/main/java/duke/command/ArchiveDeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ArchiveDeleteCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 07 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eArchiveDeleteCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to deleting the archived tasks.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ArchiveDeleteCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs an ArchiveDeleteCommand instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the archived tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArchiveDeleteCommand(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the archive-delete command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return archiveList.deleteArchivedTask(index, archiveStorage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 64
    }
  },
  {
    "path": "src/main/java/duke/command/ArchiveListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ArchiveListCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 07 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eArchiveListCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to list the archived tasks.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ArchiveListCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs an ArchiveListCommand instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArchiveListCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the unarchive command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return archiveList.listArchivedTasks();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ByeCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 06 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ByeCommand class extends a Command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it represents the terminating command when a user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * wants to end using Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a ByeCommand instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the command by returning the exit message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 63
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eCommand abstract class defines behavior of commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * entered by client. A command have an execute method.\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public abstract String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                                   NoteList noteList, NoteStorage noteStorage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public abstract boolean isByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DeleteCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eDeleteCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to the deletion of a task.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the DeleteCommand."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.deleteTask(this.index, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the Object\u0027s equals method to compare"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * whether two DeleteCommand instances are equal."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param object The object that wants to be compared."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The boolean whether it is equal or not."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (this \u003d\u003d object) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else if (object instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DeleteCommand castedDeleteCommand \u003d (DeleteCommand)object;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return this.index \u003d\u003d castedDeleteCommand.index;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 81
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DoneCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eDoneCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to the marking tasks as done.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DoneCommand instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of a task that wants to be marked as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.markDone(this.index, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 63
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * FindCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eFindCommand class extends the Command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * the searching of tasks using keyword.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a FindCommand instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param key The keyword fot searching a task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.findTask(key);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 66
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ListCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eListCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to list the tasks.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a ListCommand instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.listTasks();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 62
    }
  },
  {
    "path": "src/main/java/duke/command/NoteAddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Note;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteAddCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNoteAddCommand extends the Command abstract class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of a command regarding"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to adding notes.\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteAddCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Note note;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a NoteAddCommand instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param note The note that would like to be added to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteAddCommand(Note note) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the command by adding the note to noteList"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and write the details in the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return noteList.addNote(note, noteStorage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 65
    }
  },
  {
    "path": "src/main/java/duke/command/NoteDeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteDeleteCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNoteDeleteCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to the deletion of a note.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteDeleteCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the NoteDeleteCommand."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteDeleteCommand(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the note-delete command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return noteList.deleteNote(this.index, noteStorage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 63
    }
  },
  {
    "path": "src/main/java/duke/command/NoteListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteListCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNoteListCommand extends the command abstract class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it describes the behavior of the commands regarding"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to list the notes.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteListCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a NoteListCommand instance."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteListCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return noteList.listNotes();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 56
    }
  },
  {
    "path": "src/main/java/duke/command/ReminderCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ReminderCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 06 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eReminderCommand class extends the Command class, and it"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * describe the behavior of a reminder, where the top 3 nearest deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * or event is being listed.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ReminderCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a ReminderCommand instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ReminderCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the reminder command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return taskList.listReminder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 63
    }
  },
  {
    "path": "src/main/java/duke/command/UnarchiveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.ArchiveList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.NoteStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * UnarchiveCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 13 Feb 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eUnarchiveCommand extends the Command class which describes the behavior"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * of unarchiving tasks command.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class UnarchiveCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs an ArchiveAddCommand instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task that is wanted to be unarchived."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public UnarchiveCommand(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Executes the unarchive command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param storage The writer to the hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveStorage The storage of the archive."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteStorage The storage of the notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the outcome of the execution."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, ArchiveList archiveList, Storage archiveStorage,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                          NoteList noteList, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Task task \u003d archiveList.getTask(this.index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        archiveList.deleteArchivedTask(this.index, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        taskList.addTask(task, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Done! I have successfully unarchived:\\n\" + task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a boolean value of whether the Command is a ByeCommand instance."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the instance is a ByeCommand."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 67
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DukeException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe DukeException class extends the Exception class and"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * it handles the input error by the client, such as lack"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * of arguments, as well as invalid type of arguments entered"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * by the client.\u003c/p\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DukeException instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the toString method to show the error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidArgumentFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DukeInvalidArgumentFormatException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe DukeInvalidArgumentFormatException class extends the DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * class and it handles the invalid format entered by the client.\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DukeInvalidArgumentFormatException extends DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DukeInvalidArgumentFormatException class with the error"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The error message of the DukeInvalidArgumentFormatException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DukeInvalidArgumentFormatException(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 31
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DukeInvalidDateFormatException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 27 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eDukeInvalidDateFormatException class extends the DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and it handles the invalid format of the date of event and deadline.\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DukeInvalidDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DukeInvalidDateFormatException with an"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * error message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The corresponding error message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DukeInvalidDateFormatException(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 41
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DukeInvalidTaskFormatException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe DukeInvalidTaskFormatException class extends the DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * class and it handles the invalid format of a task from the file.\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DukeInvalidTaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private int lineIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the exception instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The description of the message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param lineIndex The index of the line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DukeInvalidTaskFormatException(String message, String task, int lineIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.lineIndex \u003d lineIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the Object\u0027s toString method to describe the details"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the exception."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the details of the exception."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return getMessage() + \"\\nTask: \" + this.task + \"\\nLine: \" + lineIndex;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 47
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUnknownKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * DukeUnknownKeywordException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe DukeUnknownKeywordException class extends the DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * class and it handles the unknown keyword entered by the client.\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class DukeUnknownKeywordException extends DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a DukeInvalidArgumentFormatException class with the error"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The error message of the DukeInvalidArgumentFormatException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public DukeUnknownKeywordException(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 31
    }
  },
  {
    "path": "src/main/java/duke/util/ArchiveList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ArchiveList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 07 Feb 2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ArchiveList class defines the behavior of archive"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * management."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ArchiveList implements IList\u003cTask\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs an ArchiveList instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param tasks The list of the archived tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArchiveList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints all the tasks archived in the ArrayList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the Duke instance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String listArchivedTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"The archive is currently empty. Fill me please!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String message \u003d \"Here\u0027s your archived tasks:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"%d. %s\", i, tasks.get(i - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                message +\u003d \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Archives the task with the corresponding"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * type, and the description provided by the client."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The task that wants to be archived."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The output message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String archiveTask(Task task, Storage storage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        boolean isAppendMode \u003d tasks.size() !\u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        storage.write(task, isAppendMode);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Got it. I\u0027ve archived this task: \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", task)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d archived task(s).\", tasks.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Deletes the task of a particular index"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the archive, then remove it from the file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task in the archive to be deleted."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The output message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String deleteArchivedTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        storage.rewriteToFile(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", task)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d task(s) in the list.\", tasks.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the task of a given index"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the list of tasks. The index value is normalized"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * by subtracting the value with 1 since the value starts"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from 1."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The Task instance of an index provided by the client."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 108
    }
  },
  {
    "path": "src/main/java/duke/util/Argument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Argument"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 23 Jan 2020"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eArgument class is used for storing the commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * entered by the client. The Argument stores the keyword,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and the details of the command, such as the description,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * and the date of the task, if applicable.\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Argument {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Keyword keyword;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs the Argument instance that takes in a Command enum"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and the details of the command entered by the client. The method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is private, which is intended to be called by the factory method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param keyword The keyword enum, representing the keyword of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details, which are the second word, onwards of the command entered."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Argument(Keyword keyword, String details) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * getCommand method is used for other classes to retrieve"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the Command enum of the Argument instance."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding command enum of an Argument."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Keyword getKeyword() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.keyword;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 53
    }
  },
  {
    "path": "src/main/java/duke/util/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * The Deadline class extends the Task class and it defines"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * the properties that a deadline has."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskSchedule bySchedule;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cp\u003eConstructs a Deadline instance, given the description,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and the schedule when the deadline is due.\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param bySchedule The date when the deadline is due."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date is not properly formatted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Deadline(String description, String bySchedule) throws DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.bySchedule \u003d TaskSchedule.parseSchedule(bySchedule);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the due date of the deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the due date of the deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskSchedule getDueDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.bySchedule;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the Object\u0027s toString method"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and it contains the mark, the description, as well as"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the due date of the deadline."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String that represents the deadline\u0027s details."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        assert bySchedule !\u003d null : \"The due date should be entered to this task.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return String.format(\"[%s] [%s] %s (by: %s)\", this.type, getStatusIcon(), this.description, this.bySchedule);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 60
    }
  },
  {
    "path": "src/main/java/duke/util/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * The Event class extends the Task class and it defines"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * the properties that an event has."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskSchedule atSchedule;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cp\u003eConstructs an Event instance, given the description,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and the schedule when the event is happening.\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param atSchedule The date of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date is not properly formatted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Event(String description, String atSchedule) throws DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.atSchedule \u003d TaskSchedule.parseSchedule(atSchedule);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the schedule of the event instance."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The date of the event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskSchedule getEventSchedule() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.atSchedule;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the Object\u0027s toString method"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and it contains the mark, the description, as well as"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the schedule of the event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String that represents the event\u0027s details."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        assert atSchedule !\u003d null : \"The event date should be entered to this task.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return String.format(\"[%s] [%s] %s (at: %s)\", this.type, getStatusIcon(), this.description, this.atSchedule);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 59
    }
  },
  {
    "path": "src/main/java/duke/util/IList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * IList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * IList interface describes the behavior of the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public interface IList\u003cT\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the size of the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    int size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 25
    }
  },
  {
    "path": "src/main/java/duke/util/IReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * IReader"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe IReader interface describes the behavior of a reader.\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public interface IReader\u003cT\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the tasks or notes from the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The array list of the file content."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException If there is I/O issue."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the format of a task is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the format date is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cT\u003e load() throws IOException, DukeInvalidTaskFormatException, DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 36
    }
  },
  {
    "path": "src/main/java/duke/util/IStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * IStorage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eIStorage interface describes the behavior"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * of the storage that reads and writes the objects into files."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public interface IStorage\u003cT\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the content from the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArrayList of all the content loaded from the file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If there is a not properly formatted date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If there is a content there is not properly formatted."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cT\u003e load() throws DukeInvalidDateFormatException, DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the content to the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param content The content that wants to be written."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isAppendMode Whether the file wants to be appended or resetted to blank."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    void write(T content, boolean isAppendMode);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Rewrites the content to the file whenever there is a change."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param contents The ArrayList of the content."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    void rewriteToFile(ArrayList\u003cT\u003e contents);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 51
    }
  },
  {
    "path": "src/main/java/duke/util/IWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * IWriter"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe IWriter interface describes the behavior of a writer.\u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public interface IWriter\u003cT\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the tasks or notes to the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param content The string format of a task or note."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isAppendMode The boolean of whether the file writing is in append mode."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException If there is an I/O issue."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    void write(T content, boolean isAppendMode) throws IOException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Sets the file to blank."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    void setBlank();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 37
    }
  },
  {
    "path": "src/main/java/duke/util/Keyword.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Keyword"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * The Command enum represents the instructions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * that are allowed to be performed by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public enum Keyword {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Keywords that can be used."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eLIST\u003c/li\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eDONE\u003c/li\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eTODO\u003c/li\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eDEADLINE\u003c/li\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eEVENT\u003c/li\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eDELETE\u003c/li\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eFIND\u003c/li\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eBYE\u003c/li\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eREMINDER\u003c/li\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eARCHIVE_LIST\u003c/li\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eARCHIVE_ADD\u003c/li\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eARCHIVE_DELETE\u003c/li\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eUNARCHIVE\u003c/li\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eNOTE_LIST\u003c/li\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eNOTE_ADD\u003c/li\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cli\u003eNOTE_DELETE\u003c/li\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND, BYE, REMINDER, ARCHIVE_LIST, ARCHIVE_ADD, ARCHIVE_DELETE,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    UNARCHIVE, NOTE_LIST, NOTE_ADD, NOTE_DELETE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 43
    }
  },
  {
    "path": "src/main/java/duke/util/Note.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Note"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNote class describes the behavior of the notes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to be entered by the client.\u003c/p\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Note {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private LocalDateTime timestamp;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a Note instance."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param text The contain of the note."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Note(String text, LocalDateTime timestamp) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.timestamp \u003d timestamp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the text of the note."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The note\u0027s content."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.text;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the date when the note is created."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String format of the timestamp."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.timestamp.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the Object\u0027s toString method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the String representation of the Note."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.text;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 64
    }
  },
  {
    "path": "src/main/java/duke/util/NoteList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteList class defines the behavior of notes"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * management."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteList implements IList\u003cNote\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cNote\u003e notes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a NoteList instance."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param notes The ArrayList of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteList(ArrayList\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints all the notes stored in the ArrayList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the Duke instance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String listNotes() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (notes.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"The list is currently empty. Fill me please!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String message \u003d \"Here\u0027s your notes:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d notes.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"%d. %s\", i, notes.get(i - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            if (i !\u003d notes.size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                message +\u003d \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the note of a given index"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the list of tasks. The index value is normalized"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * by subtracting the value with 1 since the value starts"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from 1."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the note in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The Note instance of an index provided by the client."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Note getNote(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return notes.get(index - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Adds the note to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param note The task that wants to be added to the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String addNote(Note note, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        notes.add(note);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        boolean isAppendMode \u003d notes.size() !\u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        noteStorage.write(note, isAppendMode);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", note)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d note(s) in the list.\", notes.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Deletes the note of a particular index"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the list, then remove it from the file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task in the list to be deleted."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String deleteNote(int index, NoteStorage noteStorage) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Note task \u003d getNote(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        notes.remove(index - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        noteStorage.rewriteToFile(notes);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Noted. I\u0027ve removed this note: \\n \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", task)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d note(s) in the list.\", notes.size());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.notes.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 105
    }
  },
  {
    "path": "src/main/java/duke/util/NoteReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteReader"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNoteReader class abstracts the input method"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * from a file, parses the notes, and loads them"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to a Duke instance.\u003c/p\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteReader implements IReader\u003cNote\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String TIMESTAMP_FORMAT \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a NoteReader instance that is used"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * for reading the list of tasks from a file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param filename The filename where the list of notes is located."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteReader(String filename) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the list of tasks from the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArrayList containing the tasks loaded from the file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException From the InputStreamReader"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If there is an error in the format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If there is an error in the date format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArrayList\u003cNote\u003e load() throws IOException, DukeInvalidTaskFormatException,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(new File(filename));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(fis));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            notes.add(parseNote(line, counter));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Parses a line describing a single note from a file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param line The line describing the detail of a note."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param counter The index of the line"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding note of the line"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the note is not properly formatted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If there is an error in the date format."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Note parseNote(String line, int counter) throws DukeInvalidTaskFormatException,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] lineSplitted \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            LocalDateTime timestamp \u003d LocalDateTime.parse(lineSplitted[0],"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    DateTimeFormatter.ofPattern(TIMESTAMP_FORMAT));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            String content \u003d lineSplitted[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return new Note(content, timestamp);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidDateFormatException(\"OOPS! It seems that your date \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"is not properly formatted. The date should be in form of \u0027dd-MM-yyyy HH:mm\u0027\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidTaskFormatException(\"OOPS! It seems that yout notes is lack of argument.\", line,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    counter);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 99
    }
  },
  {
    "path": "src/main/java/duke/util/NoteStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteStorage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 08 Feb 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteStorage class abstracts the I/O method"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * of reading and writing notes from a file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteStorage implements IStorage\u003cNote\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteReader reader;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteWriter writer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a NoteStorage instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param filePath The file path where the file is located."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteStorage(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        assert (new File(filePath)).exists() : \"The storage file does not exist.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.reader \u003d new NoteReader(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.writer \u003d new NoteWriter(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the notes from the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArrayList of all the notes loaded from the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If there is a not properly formatted date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If there is a task there is not properly formatted."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArrayList\u003cNote\u003e load() throws DukeInvalidDateFormatException, DukeInvalidTaskFormatException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            notes \u003d reader.load();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeInvalidTaskFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the note to the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param note The task that wants to be added to the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isApppendMode Whether the file wants to be appended or resetted to blank."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void write(Note note, boolean isApppendMode) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            this.writer.write(note, isApppendMode);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Rewrites the list of tasks to the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param notes The ArrayList of notes."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void rewriteToFile(ArrayList\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.writer.setBlank();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            for (int i \u003d 0; i \u003c notes.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                this.writer.write(notes.get(i), i !\u003d 0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 90
    }
  },
  {
    "path": "src/main/java/duke/util/NoteWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * NoteWriter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 27 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eNoteWriter class abstracts the output method"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to write the note to the file whenever there is a"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * change.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class NoteWriter implements IWriter\u003cNote\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public NoteWriter(String filename) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the note to the file whenever there is a change"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the client."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param note The note that would be written."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isAppendMode A boolean to determine whether the writer is in append mode."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException If there is an error in I/O."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void write(Note note, boolean isAppendMode) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        FileOutputStream fos;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (isAppendMode) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename), true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] dataArray \u003d new String[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dataArray[0] \u003d note.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dataArray[1] \u003d note.getDate();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String noteString \u003d String.join(\" | \", dataArray);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (isAppendMode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        writer.write(noteString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Sets the file to blank."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void setBlank() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            FileOutputStream fos;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 80
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ArchiveAddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ArchiveDeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ArchiveListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.ReminderCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.NoteAddCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.NoteDeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.NoteListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.UnarchiveCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidArgumentFormatException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeUnknownKeywordException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Parser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eParser class describes the behaviour of a"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * parser that parses commands entered by the client.\u003c/p\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static HashMap\u003cString, Keyword\u003e VALID_KEYWORDS \u003d new HashMap\u003c\u003e() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"list\", Keyword.LIST);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"done\", Keyword.DONE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"todo\", Keyword.TODO);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"deadline\", Keyword.DEADLINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"event\", Keyword.EVENT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"delete\", Keyword.DELETE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"find\", Keyword.FIND);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"bye\", Keyword.BYE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"reminder\", Keyword.REMINDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"archive-list\", Keyword.ARCHIVE_LIST);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"archive-add\", Keyword.ARCHIVE_ADD);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"archive-delete\", Keyword.ARCHIVE_DELETE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"unarchive\", Keyword.UNARCHIVE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"note-list\", Keyword.NOTE_LIST);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"note-add\", Keyword.NOTE_ADD);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"note-delete\", Keyword.NOTE_DELETE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a Parser instance."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Parses the command string entered by the client and create a Command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * instance. If the command keyword is a valid keyword, it will return an"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Argument instance. Otherwise, it will throw an exception."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commandString The command string entered by the client."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return An Argument instance, initialized by the constructor."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeUnknownKeywordException If the command keyword (the first word) is invalid."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date is invalid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the format of the command is invalid."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Command parse(String commandString, IList\u003cTask\u003e taskList, IList\u003cTask\u003e archiveList, IList\u003cNote\u003e noteList)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throws DukeUnknownKeywordException, DukeInvalidArgumentFormatException, DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String commandStr \u003d getCommandKeyword(commandString);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         If optional_command is empty, it means that the command is not found."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         Therefore, it will throw the exception to inform the client."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Optional\u003cKeyword\u003e optionalKeyword \u003d getOptionalKeyword(commandStr);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Keyword keyword \u003d optionalKeyword.orElseThrow(() -\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                new DukeUnknownKeywordException(\"☹ OOPS!!! I\u0027m sorry, \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                        + \"but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String details \u003d getDetails(commandString);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return validateCommand(keyword, details, taskList, archiveList, noteList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the keyword from the user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commandString The user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The command keyword."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getCommandKeyword(String commandString) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] splittedCommands \u003d commandString.split(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return splittedCommands[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the details from the user input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commandString The user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The details or other particulars from the input."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getDetails(String commandString) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] splittedCommands \u003d commandString.split(\" \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return splittedCommands.length \u003e 1"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                ? commandString.split(\" \", 2)[1]"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Validates the command and returns the corresponding Command instance if"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the command string is valid."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param keyword The keyword of the command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param archiveList The list of archived tasks."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding Command instance."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the command is in invalid format."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date is in invalid format."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Command validateCommand(Keyword keyword, String details, IList\u003cTask\u003e taskList,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                                    IList\u003cTask\u003e archiveList, IList\u003cNote\u003e noteList) throws"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException, DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidListArgument(details);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidDoneArgument(details, taskList);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidDeleteArgument(details, taskList);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidFindArgument(details);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidTodoArgument(details);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidDeadlineArgument(details);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidByeArgument(details);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case REMINDER:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidReminderArgument(details);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case ARCHIVE_LIST:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidArchiveListArgument(details);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case ARCHIVE_ADD:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidArchiveAddArgument(details, taskList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case ARCHIVE_DELETE:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidArchiveDeleteArgument(details, archiveList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case UNARCHIVE:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidUnarchiveArgument(details, archiveList);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case NOTE_LIST:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidNoteListArgument(details);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case NOTE_ADD:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidNoteAddArgument(details);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        case NOTE_DELETE:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidNoteDeleteArgument(details, noteList);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            command \u003d checkValidEventArgument(details);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the Keyword enums of the corresponding"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * command string provided. Optional instances are used to handle cases"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * where the command string entered by the client is invalid, thus returning"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * null value."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commandString The command provided by the client to be processed."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding Keyword enums, packed in form of an Optional instance."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static Optional\u003cKeyword\u003e getOptionalKeyword(String commandString) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return Optional.ofNullable(VALID_KEYWORDS.get(commandString));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"list\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not a valid argument."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ListCommand checkValidListArgument(String details) throws DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!details.equals(\"\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027list\u0027 command is invalid.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"done\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid (i.e. if the argument is empty or"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * not a number)."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of the tasks."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The index of the done argument, if the argument is valid."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not valid."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private DoneCommand checkValidDoneArgument(String details, IList\u003cTask\u003e taskList) throws"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027done\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"delete\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid (i.e. if the argument is empty or"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * not a number)."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of the tasks."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The index of the delete argument, if the argument is valid."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not valid."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private DeleteCommand checkValidDeleteArgument(String details, IList\u003cTask\u003e taskList) throws"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027delete\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"todo\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid (i.e. if the argument has no"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * description)."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The description of the todo argument, if the argument is valid."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not valid."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private AddCommand checkValidTodoArgument(String details) throws DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (details.equals(\"\")) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027todo\u0027 command requires a description\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new AddCommand(new Todo(details));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"deadline\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid (i.e. if the argument has no description,"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * or the due date, or the format of the command is not proper)."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The Pair of String, regarding to the description and the due date."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not valid."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private AddCommand checkValidDeadlineArgument(String details) throws DukeInvalidArgumentFormatException,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String caption;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String bySchedule;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] detailsWithSchedule \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            caption \u003d detailsWithSchedule[0];"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            bySchedule \u003d detailsWithSchedule[1];"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027deadline\u0027 \""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"command requires a description and a due date.\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new AddCommand(new Deadline(caption, bySchedule));"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the Argument instance"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * is a valid \"event\" argument. It will throw an exception if"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the argument is not valid (i.e. if the argument has no description,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * or the event date, or the format of the command is not proper)."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The Pair of String, regarding to the description and the event date."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidArgumentFormatException If the argument is not valid."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private AddCommand checkValidEventArgument(String details) throws DukeInvalidArgumentFormatException,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String caption;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String atSchedule;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] detailsWithSchedule \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            caption \u003d detailsWithSchedule[0];"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            atSchedule \u003d detailsWithSchedule[1];"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027event\u0027 \""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"command requires a description and an event date.\");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new AddCommand(new Event(caption, atSchedule));"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * find command."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The FindCommand instance of the corresponding input."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private FindCommand checkValidFindArgument(String details) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new FindCommand(details);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid bye command."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ByeCommand instance of the corresponding input."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ByeCommand checkValidByeArgument(String details) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ByeCommand();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid reminder command."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ReminderCommand instance of the corresponding input."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ReminderCommand checkValidReminderArgument(String details) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ReminderCommand();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid archive-list command."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArchiveListCommand instance of the corresponding input."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ArchiveListCommand checkValidArchiveListArgument(String details) throws DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!details.equals(\"\")) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027archive-list\u0027 command is invalid.\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ArchiveListCommand();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid archive-add command."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of the archives."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArchiveAddCommand instance of the corresponding input."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ArchiveAddCommand checkValidArchiveAddArgument(String details, IList\u003cTask\u003e taskList) throws"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027done\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ArchiveAddCommand(index);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid archive-delete command."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of the archives."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArchiveDeleteCommand instance of the corresponding input."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private ArchiveDeleteCommand checkValidArchiveDeleteArgument(String details, IList\u003cTask\u003e taskList) throws"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027archive-delete\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new ArchiveDeleteCommand(index);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid unarchive command."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskList The list of the archives."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The UnarchiveCommand instance of the corresponding input."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private UnarchiveCommand checkValidUnarchiveArgument(String details, IList\u003cTask\u003e taskList) throws"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027archive-delete\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new UnarchiveCommand(index);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * note-add command."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The NoteAddCommand instance of the corresponding input."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteAddCommand checkValidNoteAddArgument(String details) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new NoteAddCommand(new Note(details, LocalDateTime.now()));"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * note-list command."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The NoteListCommand instance of the corresponding input."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteListCommand checkValidNoteListArgument(String details) throws DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (!details.equals(\"\")) {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027list\u0027 command is invalid.\");"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new NoteListCommand();"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies that the command entered by the client is a valid"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * note-delete command."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param details The details of the command."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The NoteDeleteCommand instance of the corresponding input."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private NoteDeleteCommand checkValidNoteDeleteArgument(String details, IList\u003cNote\u003e noteList) throws"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidArgumentFormatException {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            index \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027archive-delete\u0027 command requires a number.\");"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e noteList.size()) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidArgumentFormatException(\"☹ OOPS!!! The index given is out of bound.\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return new NoteDeleteCommand(index);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 511
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 23 Jan 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Storage class abstracts the I/O method"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * of reading and writing tasks from a file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Storage implements IStorage\u003cTask\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskReader reader;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskWriter writer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a Storage instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param filePath The file path where the file is located."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        assert (new File(filePath)).exists() : \"The storage file does not exist.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.reader \u003d new TaskReader(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.writer \u003d new TaskWriter(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the tasks from the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArrayList of all the tasks loaded from the file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If there is a not properly formatted date."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If there is a task there is not properly formatted."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeInvalidDateFormatException, DukeInvalidTaskFormatException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            tasks \u003d reader.load();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeInvalidTaskFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the task to the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The task that wants to be added to the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isApppendMode Whether the file wants to be appended or resetted to blank."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void write(Task task, boolean isApppendMode) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            this.writer.write(task, isApppendMode);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Rewrites the list of tasks to the file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param tasks The ArrayList of the tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void rewriteToFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.writer.setBlank();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                this.writer.write(tasks.get(i), i !\u003d 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 91
    }
  },
  {
    "path": "src/main/java/duke/util/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eThe Task abstract class defines some basic properties and"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * behaviors that every task have. The tasks are set to be not done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * initially.\u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a Task instance with isDone variable set to be"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param description The description or the details of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param type The type of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Marks the task to be done by"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * setting the isDone property of a task to be true."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the appropriate icon"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the task based on whether the task is done or not."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The appropriate icon. A tick if the task is done, a cross, otherwise."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return (this.isDone ? \"V\" : \"X\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the status of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The boolean whether the task is done or not."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The desription of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 74
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskList class defines the behavior of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * management."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class TaskList implements IList\u003cTask\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a TaskList instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param tasks The ArrayList of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Verifies whether the index"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * provided is within the range or not."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return the boolean value of whether the index given is within the valid range."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public boolean isNotInRange(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return index \u003c\u003d 0 || index \u003e tasks.size() || tasks.size() \u003c\u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Marks the task of a particular index"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * to be done, and inform the client later. This method is"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * being called when a done command is entered by a client."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of a particular task in the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String markDone(int index, Storage storage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        storage.rewriteToFile(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"   %s\\n\", task.toString())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d task(s) in the list.\", tasks.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the task of a given index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the list of tasks. The index value is normalized"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * by subtracting the value with 1 since the value starts"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from 1."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The Task instance of an index provided by the client."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints all the tasks stored in the ArrayList"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the Duke instance."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"The list is currently empty. Fill me please!\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String message \u003d \"Here\u0027s your current tasks:\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"%d. %s\", i, tasks.get(i - 1));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            if (i !\u003d tasks.size()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                message +\u003d \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Adds the task with the corresponding"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * type, and the description provided by the client."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The task that wants to be added to the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String addTask(Task task, Storage storage) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        boolean isAppendMode \u003d tasks.size() !\u003d 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        storage.write(task, isAppendMode);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", task)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d task(s) in the list.\", tasks.size());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Deletes the task of a particular index"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the list, then remove it from the file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param index The index of the task in the list to be deleted."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String deleteTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        storage.rewriteToFile(tasks);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"    %s\\n\", task)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                + String.format(\"Now you have %d task(s) in the list.\", tasks.size());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Finds the task that contains a particular keyword."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param key The keyword."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The message to be displayed."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String findTask(String key) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .filter(x -\u003e x.getDescription().contains(key))"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String message \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (filteredTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"OOPS! There is no matching task in your list.\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"\\n%d. %s\", i, filteredTasks.get(i - 1));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Lists the reminder of the top 3 approaching deadline and event."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The output message of the reminder."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String listReminder() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cDeadline\u003e filterDeadline \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .filter(x -\u003e (x instanceof Deadline) \u0026\u0026 !x.getStatus())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .map(x -\u003e (Deadline)x)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cEvent\u003e filterEvent \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .filter(x -\u003e (x instanceof Event) \u0026\u0026 !x.getStatus())"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .map(x -\u003e (Event)x)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Collections.sort(filterDeadline, Comparator.comparing(Deadline::getDueDate));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Collections.sort(filterEvent, Comparator.comparing(Event::getEventSchedule));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String message \u003d \"Here is the approaching deadline:\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (filterDeadline.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message \u003d \"You have no approaching deadline.\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 0; i \u003c Math.min(filterDeadline.size(), 3); i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"\\n%d. %s\", i + 1, filterDeadline.get(i));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (filterEvent.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d \"\\nAnd you don\u0027t have any upcoming event :)\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d \"\\nAnd here is the approaching event:\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 0; i \u003c Math.min(filterEvent.size(), 3); i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            message +\u003d String.format(\"\\n%d. %s\", i + 1, filterEvent.get(i));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 203
    }
  },
  {
    "path": "src/main/java/duke/util/TaskReader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskReader"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 27 Jan 2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eTaskReader class abstracts the input method"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * from a file, parses the tasks, and loads them"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to a Duke instance.\u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class TaskReader implements IReader\u003cTask\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final HashMap\u003cString, Keyword\u003e KEYWORD \u003d new HashMap\u003c\u003e() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"D\", Keyword.DEADLINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"E\", Keyword.EVENT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            put(\"T\", Keyword.TODO);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a TaskReader instance that is used"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * for reading the list of tasks from a file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param filename The filename where the list of tasks is located."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskReader(String filename) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Loads the list of tasks from the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The ArrayList containing the tasks loaded from the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException From the InputStreamReader"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If there is an error in the format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, DukeInvalidTaskFormatException,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(new File(filename));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(fis));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            tasks.add(parseTask(line, counter));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Parses a line describing a single task from a file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param line The line describing the detail of a task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param counter The index of the line"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding task of the line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the task is not properly formatted."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Task parseTask(String line, int counter) throws DukeInvalidTaskFormatException,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] lineSplitted \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Keyword keyword \u003d getKeyword(lineSplitted[0], line, counter);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            boolean isDone \u003d getStatus(lineSplitted[1], line, counter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                description \u003d lineSplitted[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                description \u003d lineSplitted[2];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                String dueDate \u003d lineSplitted[3];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                task \u003d new Deadline(description, dueDate);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                description \u003d lineSplitted[2];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                String eventDate \u003d lineSplitted[3];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                task \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidTaskFormatException(\"OOPS! It seems there is a lack of argument in the task.\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    line, counter);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the corresponding type of task in form of Command enum from the string."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param commandString The command in form of string."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param line The line describing the detail of the task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param counter The index of the line."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding Command enum representing the type of string."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the command cannot be found."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Keyword getKeyword(String commandString, String line, int counter) throws"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DukeInvalidTaskFormatException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        Keyword keyword \u003d TaskReader.KEYWORD.get(commandString);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (keyword \u003d\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidTaskFormatException(\"OOPS! We cannot load \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"the task since the command is unknown.\", line, counter);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return keyword;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the corresponding boolean of whether the task is done or not."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param statusString The status of the task."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param line The line describing the detail of the task."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param counter The index of the line."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The boolean of whether the task is done or not."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidTaskFormatException If the status is not properly formatted."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private boolean getStatus(String statusString, String line, int counter) throws DukeInvalidTaskFormatException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            int status \u003d Integer.parseInt(statusString);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            if (status !\u003d 0 \u0026\u0026 status !\u003d 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                throw new DukeInvalidTaskFormatException(\"OOPS! We cannot load \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                        + \"the task since the status of the task is invalid.\", line, counter);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                return status \u003d\u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidTaskFormatException(\"OOPS! We cannot load \""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"the task since the status of the task is invalid.\", line, counter);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 166
    }
  },
  {
    "path": "src/main/java/duke/util/TaskSchedule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskSchedule"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 27 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eTaskSchedule abstracts the date of an event and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * a deadline, with a properly formatted input and output.\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class TaskSchedule implements Comparable\u003cTaskSchedule\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String INPUT_DATE_FORMAT \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private static final String OUTPUT_DATE_FORMAT \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a TaskSchedule instance."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param date The verified date of an event or deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private TaskSchedule(LocalDateTime date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Returns a TaskSchedule instance in a factory method fashion"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * with validating the input date string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param scheduleString The String that represents the date of an event or deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The corresponding TaskSchedule instance."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws DukeInvalidDateFormatException If the date string is not properly formatted."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public static TaskSchedule parseSchedule(String scheduleString) throws DukeInvalidDateFormatException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_DATE_FORMAT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(scheduleString, formatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return new TaskSchedule(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            throw new DukeInvalidDateFormatException(\"OOPS! It seems that your date \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"is not properly formatted. The date should be in form of \u0027dd-MM-yyyy HH:mm\u0027\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the date in form of LocalDateTime."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The LocalDateTime instance."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the toString method to print"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * the formatted date using DateTimeFormatter instance."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The formatted String representing the date"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Overrides the compareTo\u0027s Comparable interface method."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param taskSchedule A TaskSchedule instance that wants to be compared."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The resulting integer from comparing the elements."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public int compareTo(TaskSchedule taskSchedule) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.date.compareTo(taskSchedule.date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 89
    }
  },
  {
    "path": "src/main/java/duke/util/TaskWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskWriter"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 27 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eTaskWriter class abstracts the output method"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * to write the task to the file whenever there is a"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * change.\u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class TaskWriter implements IWriter\u003cTask\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a TaskWriter instance to write"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * into a particular file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param filename The name of the file where TaskWriter is expected to write."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskWriter(String filename) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Writes the task to the file whenever there is a change"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * from the client."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The task that can be written."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param isAppendMode A boolean to determine whether the writer is in append mode."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @throws IOException If there is an error in I/O."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void write(Task task, boolean isAppendMode) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        FileOutputStream fos;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (isAppendMode) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename), true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String[] dataArray \u003d new String[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dataArray[0] \u003d getCommandString(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dataArray[1] \u003d getStatus(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        dataArray[2] \u003d getDetails(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String taskString \u003d String.join(\" | \", dataArray);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (isAppendMode) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        writer.write(taskString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the String of the type from a task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The corresponding task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the type of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getCommandString(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the String of the status from a task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The corresponding task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the progress of the task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getStatus(Task task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (task.getStatus()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Gets the details of the task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param task The corresponding task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String representing the details of the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private String getDetails(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        String details \u003d task.getDescription();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            details +\u003d \" | \" + ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            details +\u003d \" | \" + ((Event) task).getEventSchedule();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Sets the file to blank."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void setBlank() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            FileOutputStream fos;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fos \u003d new FileOutputStream(new File(filename));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 133
    }
  },
  {
    "path": "src/main/java/duke/util/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 21 Jan 2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * The Todo class extends the Task class and it defines"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * the properties that a todo task has."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * \u003cp\u003eConstructs a Todo instance, given the description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of the task.\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * toString method overrides the Object\u0027s toString method"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * and it contains the mark, as well as the description of"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * a task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String that represents the task\u0027s details."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return String.format(\"[%s] [%s] %s\", this.type, getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 43
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Ui"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Ui class defines the behavior of the class that"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * handles the user interface related matters."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a Ui instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\\nAdd your command here.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param e The error that is being raised."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void displayErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        System.err.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints the message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @param message The message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void displayMessage(String message) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints a line."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        System.out.println(\"------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Prints a closing message to the client."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * The readCommand method abstracts the input method"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * done by the Scanner object. It reads the whole line"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * of input entered by the client."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The String object entered by the client."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 89
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         prefWidth\u003d\"400.0\"  type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #bfff00;\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter your command\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 19
    }
  },
  {
    "path": "src/test/java/duke/stub/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.IList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.util.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * TaskListStub"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eTaskListStub is a Stub for simulating the required"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * behavior of a TaskList class.\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class TaskListStub implements IList\u003cTask\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Constructs a TaskListStub instance."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public TaskListStub() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            tasks.add(new Todo(\"This is a dummy task.\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Implements the size method of TaskListImplementation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 48
    }
  },
  {
    "path": "src/test/java/duke/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidArgumentFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeInvalidDateFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.exception.DukeUnknownKeywordException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import duke.stub.TaskListStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * ParserTest"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * 28 Jan 2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * \u003cp\u003eParserTest class is a test class for Parser class.\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " * @author Mario Lorenzo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Tests the Parser\u0027s parse function for the valid format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void parse_validFormat_success() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            assertEquals(new DeleteCommand(1), new Parser().parse(\"delete 1\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    new TaskListStub(), new TaskListStub(), new NoteList(new ArrayList\u003c\u003e())));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeUnknownKeywordException | DukeInvalidArgumentFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     * Tests the Parser\u0027s parse function for the invalid format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    public void parse_invalidNumber_exceptionThrown() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            assertEquals(new DeleteCommand(1), new Parser().parse(\"delete lol\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    new TaskListStub(), new TaskListStub(), new NoteList(new ArrayList\u003c\u003e())));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        } catch (DukeUnknownKeywordException | DukeInvalidArgumentFormatException | DukeInvalidDateFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "            assertEquals(\"☹ OOPS!!! \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "                    + \"The argument for \u0027delete\u0027 command requires a number.\", e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 63
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Hello I\u0027m Duke!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Add your command here!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "------------------------"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "java -classpath ../bin Driver \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mario7lorenzo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mario7lorenzo": 34
    }
  }
]
