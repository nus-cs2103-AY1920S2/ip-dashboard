[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    archiveVersion \u003d \"0.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 39,
      "-": 21
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* [2. Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* [3. Feature](#3-feature)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.1. Chatting](#31-chatting)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.2. Load task immediately from hard disk](#32-load-task-immediately-from-hard-disk)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.3. Add a new task](#33-add-a-new-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.4. Display list of tasks](#34-display-list-of-tasks)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.5. Mark task as done](#35-mark-task-as-done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.6. Delete a task](#36-delete-a-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.7. Find a task](#37-find-a-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [3.8. Close the chatbot with user input](#38-close-the-chatbot-with-user-input)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* [4. Usage](#4-usage)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [4.1. Add a new task](#41-add-a-new-task)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [4.2. `list`](#42-list)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [4.3. `done [index of task]`](#43-done-index-of-task)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [4.4. `delete [index of task]`](#44-delete-index-of-task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    * [4.5. `find [keyword]`](#45-find-keyword)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Tired of being a procrastinator? Fret not! Dodo is here to make sure you do your work."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "You can save your todo, deadline, event list--all in one!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "![Figure of Dodo](Ui.png)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "##### Figure 1. Screenshot of Dodo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. Install `java 11` or above in your computer."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "2. Download the `jar` file [here](https://github.com/johannagwan/duke/releases/tag/v0.2)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "3. In your terminal, run `java -jar [path to jar file]` to run the jar file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "4. Type your input accordingly. List of commands are available at [Section 4](#4-usage). "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "## 3. Feature"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.1. Chatting"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Dodo is a personalised chatbot who will reply you in an instant. It\u0027s your friend!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.2. Load task immediately from hard disk"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "When Dodo starts, it will automatically load your tasks from your hard disk file. If you have no existing file, Dodo will automatically create one for you as you add your tasks to the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.3. Add a new task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "You can add your upcoming todo, deadline and event into your list of tasks. It is automatically saved by Dodo!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Details of the different types of task are as follows: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* Todo: a task to complete **without** a specified due date."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* Deadline: a task to complete **with** a specified due date."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "* Event: an occasion that will happen in a specified date."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.4. Display list of tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Dodo can display the list of tasks (todo, deadline, and event) that you have saved in chronological order according to the due dates and in alphabetical order."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.5. Mark task as done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "All tasks are initially marked as undone. When you have accomplished your task, don\u0027t forget to inform Dodo, by marking your task as done. Before ticking off your task, remember to type `list` to check your task\u0027s index, as the index may change if you have previously added or deleted a task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "If the command `done [index]` is done after `find [keywords]`, the command `done [index]` will operate on the **full** list instead of the items filtered out by the `find [keyword]` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.6. Delete a task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "If you accidentally add a new task, or simply want to reduce your task clutter, you can delete your task according to its index. Remember  to type `list` to check your task\u0027s index, as the index may change if you have previously added or deleted a task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "If the command `delete [index]` is done after `find [keywords]`, the command `delete [index]` will operate on the **full** list instead of the items filtered out by the `find [keyword]` command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.7. Find a task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Want to find a task with a specified keyword? Fret not, Dodo got your back. Dodo can display a list of tasks which contain the keyword you input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 3.8. Close the chatbot with user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "You can close the chatbot by simply keying in `bye`."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "## 4. Usage"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 4.1. Add a new task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "All tasks must be input in the correct format to be added successfully. Don\u0027t worry if you do not remember the exact format. As a good friend, Dodo will remind you."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Invalid input format!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To list all tasks: list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To add new deadline: deadline [description] /by [due date in yyyy-mm-dd]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To add new event: event [description] /at [date in yyyy-mm-dd]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To add new todo: todo [description]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To mark task as done: done [index]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To delete a task: delete [index]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To find a task: find [keyword]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "- To exit: bye"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "#### 4.1.1. `todo [description]`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Creates a new todo task with a description."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `todo running at gym`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Gotcha. Added this to your list:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "[T][N] running at gym"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Now you got 1 task in your list!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "#### 4.1.2. `deadline [description] /by [due date in yyyy-mm-dd]`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Creates a new deadline task with a description and a due date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `deadline assignment 1 /by 2020-02-02`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Gotcha. Added this to your list:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "[D][N] assignment 1 (by: Feb 2 2020)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Now you got 2 tasks in your list!"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "#### 4.1.3. `event [description] /at [date in yyyy-mm-dd]`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Creates a new event task with a description and a date."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `event formal dinner /at 2020-02-16`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Gotcha. Added this to your list:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "[E][N] formal dinner (at: Feb 16 2020)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Now you got 3 tasks in your list!"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 4.2. `list`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Displays a list of tasks that is loaded from the hard disk and that you have added."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Stop procrastinating. Do it now!"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. [D][N] assignment 1 (by: Feb 2 2020)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "2. [E][N] formal dinner (at: Feb 16 2020)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "3. [T][N] running at gym"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 4.3. `done [index of task]`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Marks a task as done. All tasks are initially marked as undone by default."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `done 1`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Good job! One off your chest!"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "[D][Y] assignment 1 (by: Feb 2 2020)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "When you key in `list` again, the expected outcome would be:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Stop procrastinating. Do it now!"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. [D][Y] assignment 1 (by: Feb 2 2020)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "2. [E][N] formal dinner (at: Feb 16 2020)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "3. [T][N] running at gym"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 4.4. `delete [index of task]`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Deletes a particular task with the specified index."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `delete 1`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Okay, I have removed this task for you:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "[D][Y] assignment 1 (by: Feb 2 2020)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Now you got 2 tasks in your list!"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "When you key in `list` again, the expected outcome would be:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Stop procrastinating. Do it now!"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. [E][N] formal dinner (at: Feb 16 2020)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "2. [T][N] running at gym"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "### 4.5. `find [keyword]`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Finds a particular task which contains the specified keyword or."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `find o`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Stop procrastinating. Do it now!"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. [E][N] formal dinner (at: Feb 16 2020)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Example of usage: `find gym`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "Stop procrastinating. Do it now!"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "1. [T][N] running at gym"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 177,
      "-": 17
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "T | Y | sleep"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author johannagwan-reused"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "//Reused from https://github.com/johannagwan/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Displays Duke\u0027s response as a dialog."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param text Duke\u0027s response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param img Image of Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return DialogBox."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 71,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Main class of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList \u003d new TaskList(storage.load(), storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList \u003d new TaskList(null, null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (IOException e) { // if file path does not exist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            storage.makeNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList \u003d new TaskList(new ArrayList\u003c\u003e(), storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Reads the user command and passes it to Ui to be processed accordingly."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void runDuke() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            Command cmd \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d parser.handleCommands(inputs, taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (!cmd.hasNextCommand()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                ui.print(e.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                ui.print(e.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Main method to run Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Duke duke;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        duke.runDuke();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java/8708357"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //with minor modifications."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param input The user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Command cmd \u003d parser.handleCommands(inputs, taskList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        cmd.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (!cmd.hasNextCommand()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 105,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author johannagwan-reused"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "//Reused from https://github.com/johannagwan/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 13,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author johannagwan-reused"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "//Reused from https://github.com/johannagwan/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            stage.setTitle(\"Dodo\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 41,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author johannagwan-reused"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "//Reused from https://github.com/johannagwan/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kuroko_chibi.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/akashi_chibi.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Initializes Duke GUI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ui.greet(), dukeImage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 62,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidInputFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.enums.TaskTypes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command object to add task to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private TaskTypes taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents an AddCommand object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskType The type of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inputs The user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public AddCommand(TaskTypes taskType, String[] inputs) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Adds a task into the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String desc \u003d inputs[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (desc.isBlank()) { // if description is just white space"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String[] deadlineDescs \u003d desc.split(\" /by |\\\\|\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (deadlineDescs.length \u003d\u003d 1) { // invalid Deadline input format"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String deadlineDesc \u003d deadlineDescs[0].trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String deadlineDate \u003d deadlineDescs[1].trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (deadlineDesc.isBlank()) { // if description is just white space"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                LocalDate formattedDeadlineDate \u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (deadlineDate.length() \u003d\u003d 10 \u0026\u0026 isValidDate(deadlineDate)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    formattedDeadlineDate \u003d LocalDate.parse(deadlineDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new InvalidDateException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                task \u003d new Deadline(deadlineDesc, formattedDeadlineDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String[] eventDescs \u003d desc.split(\" /at |\\\\|\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (eventDescs.length \u003d\u003d 1) { // invalid Event input format"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String eventDesc \u003d eventDescs[0].trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                String eventDate \u003d eventDescs[1].trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (eventDesc.isBlank()) { // if description is just white space"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                LocalDate formattedEventDate \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (eventDate.length() \u003d\u003d 10 \u0026\u0026 isValidDate(eventDate)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    formattedEventDate \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    throw new InvalidDateException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                task \u003d new Event(eventDesc, formattedEventDate);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            storage.addToStorage(task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            storage.sortStorage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printAddToList();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.print(task.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printNumTask(taskList.getTasks());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.print(e.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from http://www.java2s.com/Tutorial/Java/0120__Development/CheckifaStringisavaliddate.htmv"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //with minor modifications."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Checks if an input date is written in a valid date format."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inDate The input date."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return true if the input date is written in a valid date format."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private boolean isValidDate(String inDate) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            dateFormat.parse(inDate.trim());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 148,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command to quit the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a ByeCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Shows the quit message to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a general Command object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a Command object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public abstract boolean hasNextCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidInputFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.TaskIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command to delete a task from the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a DeleteCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inputs The user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public DeleteCommand(String[] inputs) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Deletes the task from the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (!isNumeric(inputs[1])) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int index \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (index \u003c 1 || index \u003e taskList.getTasks().size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.print(e.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from https://www.baeldung.com/java-check-string-number with minor modifications."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Checks if a string can be converted to an integer."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param strNum The string to be checked."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return true if the string can be converted to an integer."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (strNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int intNum \u003d Integer.parseInt(strNum);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 79,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidInputFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.TaskIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a DoneCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inputs The user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public DoneCommand(String[] inputs) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (!isNumeric(inputs[1])) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int index \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (index \u003c 1 || index \u003e taskList.getTasks().size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList.markTaskAsDone(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.print(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from https://www.baeldung.com/java-check-string-number with minor modifications."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Checks if a string can be converted to an integer."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param strNum The string to be checked."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return true if the string can be converted to an integer."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (strNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int intNum \u003d Integer.parseInt(strNum);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 80,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public ErrorCommand(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.print(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 23
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command to find a task based on user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a FindCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inputs The user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public FindCommand(String[] inputs) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.inputs \u003d inputs;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Finds a task from the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String desc \u003d inputs[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskList.findTask(desc);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.print(e.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a command to display the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a ListCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public ListCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Prints out the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param ui The User Interface object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Collections.sort(taskList.getTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        taskList.printList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/enums/TaskTypes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public enum TaskTypes {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 4
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"Description of a task cannot be empty!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"Apologies, I\u0027m too dumb to understand that!\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"Format:\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To list all tasks: list\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new deadline: deadline [description] /by [due date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new event: event [description] /at [date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new todo: todo [description]\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To mark task as done: done [index]\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To delete a task: delete [index]\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To find a task: find [keyword]\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To exit: bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"Date format should be in yyyy-mm-dd\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/InvalidInputFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class InvalidInputFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"Invalid input format!\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"Format:\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To list all tasks: list\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new deadline: deadline [description] /by [due date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new event: event [description] /at [date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new todo: todo [description]\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To mark task as done: done [index]\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To delete a task: delete [index]\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To find a task: find [keyword]\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To exit: bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/TaskIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class TaskIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"You keyed in an invalid index!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.enums.TaskTypes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Displays, modifies, and finds the content of the list according to the user\u0027s command input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inputs The user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param taskList The TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return The respective command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Command handleCommands(String[] inputs, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String command \u003d inputs[0].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Command cmd \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new ListCommand(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new ByeCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new AddCommand(TaskTypes.TODO, inputs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new AddCommand(TaskTypes.DEADLINE, inputs);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new AddCommand(TaskTypes.EVENT, inputs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new DoneCommand(inputs);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new DeleteCommand(inputs);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                cmd \u003d new FindCommand(inputs);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            cmd \u003d new ErrorCommand(e.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.exception.InvalidInputFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Creates a hard disk that allows user to add, delete, or modify the content of the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Creates a hard disk to store and load the user\u0027s task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param filePath Relative path to the file that is being opened."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from https://www.w3schools.com/java/java_files_create.asp with minor modifications."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Creates new file when the data file specified in the file path does not exist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void makeNewFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String newFilePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            File newFile \u003d new File(newFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (!newFile.createNewFile()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                ui.printDuplicateFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else { // if file is successfully created, change the file path to the new one."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                filePath \u003d newFilePath;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Loads the content of the hard disk into a list of tasks that user can see."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return A task list with content from the hard disk."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidInputFormatException If an input is keyed in a wrong format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidDateException If a date is input in a wrong format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, InvalidInputFormatException, InvalidDateException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        while ((inputLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String[] inputs \u003d inputLine.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String type \u003d inputs[0].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String doneStatus \u003d inputs[1].trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            String desc \u003d inputs[2].trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (type.equalsIgnoreCase(\"T\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                addTodo(desc, doneStatus);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else if (type.equalsIgnoreCase(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                addDeadline(desc, doneStatus);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else if (type.equalsIgnoreCase(\"E\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                addEvent(desc, doneStatus);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Collections.sort(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        deleteAllInStorage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        addAllToStorage(tasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Sorts the content inside the hard disk according to due dates and alphabetical order."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidInputFormatException If an input is keyed in a wrong format."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidDateException If a date is input in a wrong format."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void sortStorage() throws InvalidInputFormatException, InvalidDateException, IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        List\u003cTask\u003e tasksInStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasksInStorage \u003d load();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Collections.sort(tasksInStorage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        deleteAllInStorage();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        addAllToStorage(tasksInStorage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Deletes all content inside the hard disk."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void deleteAllInStorage() throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileOutputStream fileOutputStr \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.write(data.getBytes());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Adds all the sorted tasks into the hard disk."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param sortedTasks The list of sorted tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void addAllToStorage(List\u003cTask\u003e sortedTasks) throws IOException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        for (Task task : sortedTasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            addToStorage(task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Loads a todo task into the task list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param desc The details of the todo task."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param doneStatus An indicator which shows whether a todo task has been completed or not."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void addTodo(String desc, String doneStatus) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (doneStatus.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            assert todo.isDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Loads a deadline task into the task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param desc The details of the deadline task."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param doneStatus An indicator which shows whether a deadline task has been completed or not."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidInputFormatException If an input is keyed in a wrong format."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidDateException If a date is input in a wrong format."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void addDeadline(String desc, String doneStatus)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throws InvalidInputFormatException, InvalidDateException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String[] descs \u003d desc.split(\" /by |\\\\|\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (descs.length \u003d\u003d 1) { // invalid Deadline input format"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String deadlineDesc \u003d descs[0].trim();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String deadlineDate \u003d descs[1].trim();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (deadlineDate.length() !\u003d 10) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        LocalDate formattedDeadlineDate \u003d null;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (deadlineDate.length() \u003d\u003d 10 \u0026\u0026 isValidDate(deadlineDate)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            formattedDeadlineDate \u003d LocalDate.parse(deadlineDate);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task deadline \u003d new Deadline(deadlineDesc, formattedDeadlineDate);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (doneStatus.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Loads an event task into the task list."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param desc The details of the event task."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param doneStatus An indicator which shows whether an event task has been completed or not."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidInputFormatException If an input is keyed in a wrong format."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws InvalidDateException If a date is input in a wrong format."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private void addEvent(String desc, String doneStatus)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throws InvalidInputFormatException, InvalidDateException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String[] descs \u003d desc.split(\" /at |\\\\|\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (descs.length \u003d\u003d 1) { // invalid Event input format"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throw new InvalidInputFormatException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String eventDesc \u003d descs[0].trim();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String eventDate \u003d descs[1].trim();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        LocalDate formattedEventDate \u003d null;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (eventDate.length() \u003d\u003d 10 \u0026\u0026 isValidDate(eventDate)) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            formattedEventDate \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task event \u003d new Event(eventDesc, formattedEventDate);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (doneStatus.equalsIgnoreCase(\"Y\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author johannagwan-reused"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //Reused from http://www.java2s.com/Tutorial/Java/0120__Development/CheckifaStringisavaliddate.htm"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    //with minor modifications."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Checks if an input date is written in a valid date format."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param inDate The input date."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return true if the input date is written in a valid date format."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public static boolean isValidDate(String inDate) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        dateFormat.setLenient(false);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            dateFormat.parse(inDate.trim());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Saves the task that the user inputs into the hard disk."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param task The task that user inputs which needs to be saved into the hard disk."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void addToStorage(Task task) throws IOException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            data +\u003d \"D | \" + task.getStatusIcon() + \" | \" + task.getDescription()"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \" | \" + ((Deadline) task).getDate();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            data +\u003d \"E | \" + task.getStatusIcon() + \" | \" + task.getDescription()"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \" | \" + ((Event) task).getDate();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            data +\u003d \"T | \" + task.getStatusIcon() + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (file.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            bw.write(data);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            bw.write(\"\\n\" + data);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Modifies the done status of a task inside the hard disk according to the index number given by the user."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param index The index number ot the task that is being modified."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void changeToStorage(int index) throws IOException {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (counter \u003d\u003d index) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                line \u003d line.substring(0, 4) + \"Y\" + line.substring(5, line.length());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                data +\u003d line;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                assert counter \u003e 1 : counter;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                data +\u003d \"\\n\" + line;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileOutputStream fileOutputStr \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.write(data.getBytes());"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.close();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Deletes the task in the hard disk according to the index number given by the user."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param index The index number ot the task that is being modified."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void deleteInStorage(int index) throws IOException {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        boolean isFirstUndeletedLine \u003d true;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (counter !\u003d index) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                if (isFirstUndeletedLine) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    data +\u003d line;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    isFirstUndeletedLine \u003d false;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    assert !isFirstUndeletedLine;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                    data +\u003d \"\\n\" + line;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        FileOutputStream fileOutputStr \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.write(data.getBytes());"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        fileOutputStr.close();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 336,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a Deadline Object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a Deadline Object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param description The details of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param deadlineDate The date for the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Deadline(String description, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String formattedDeadlineTime \u003d \" (by: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"[D]\" + super.toString() + formattedDeadlineTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return deadlineDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public int compareTo(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int cmp \u003d getDate().compareTo(((Deadline) task).getDate());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (cmp \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return cmp;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int cmp \u003d getDate().compareTo(((Event) task).getDate());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (cmp \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return cmp;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents an Event object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents an Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *  @param description The details of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param eventDate The date of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Event(String description, LocalDate eventDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String formattedEventDate \u003d \" (at: \" + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"[E]\" + super.toString() + formattedEventDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return eventDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public int compareTo(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int cmp \u003d getDate().compareTo(((Deadline) task).getDate());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (cmp \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return cmp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            int cmp \u003d getDate().compareTo(((Event) task).getDate());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (cmp \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                return cmp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Creates a task based on the description input by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param description The details of the task created."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Prints the done status of a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return \"Y\" if the task is marked done, \"N\" otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Checks if a task is marked as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return true if a task is marked as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public abstract int compareTo(Task task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 55
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Contains the task list and operations to add, delete, and change the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param storage The hard disk for storage of data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Collections.sort(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Marks the task as done by changing the done status from \"N\" to \"Y\"."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * It also updates the done status in the hard disk storage list accordingly."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param index The index number of the task that is marked as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void markTaskAsDone(int index) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printTaskAlrDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            assert task.isDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            storage.changeToStorage(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printTaskDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.print(task.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Deletes the task from the task list and the hard disk storage list accordingly."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param index The index number of the task that is being deleted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void deleteTask(int index) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.printRemoveTask();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.print(task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        ui.printNumTask(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        storage.deleteInStorage(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Finds task(s) which contains a substring given by the user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param desc A substring of a task that user wants to find."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void findTask(String desc) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            if (task.getDescription().contains(desc)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printNoFoundTask();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            assert foundTasks.size() \u003e 0 : foundTasks.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printFoundTask();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            ui.printList(foundTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 100
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Represents a Todo object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Represents a Todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param description Details of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public int compareTo(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return toString().compareTo(task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Greets the user when the GUI first starts and displays the available commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @return greetings and available commands format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String greetings \u003d \"Hi there, I\u0027m Dodo!\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"How may I help you today?\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"Available commands:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To list all tasks: list\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new deadline: deadline [description] /by [due date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new event: event [description] /at [date in yyyy-mm-dd]\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To add new todo: todo [description]\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To mark task as done: done [index]\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To delete a task: delete [index]\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To find a task: find [keyword]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                + \"- To exit: bye\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        return greetings;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Loading error. Try again!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Stop procrastinating. See you!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printFoundTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printNoFoundTask() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Sorry I can\u0027t find what you are looking for....\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printRemoveTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Okay, I have removed this task for you:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printAddToList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Gotcha. Added this to your list:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected void printNoTaskYet() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"You currently don\u0027t have any task. Start listing now!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    protected void printStopProcrastinating() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Stop procrastinating. Do it now!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printTaskDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Good job! One off your chest!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printTaskAlrDone() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"Task is already done!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printDuplicateFile() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Updates the user of the remaining number of tasks in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param tasks The current list of tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printNumTask(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        String taskWord;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (tasks.size() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskWord \u003d \"task\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            assert tasks.size() \u003e 1 : tasks.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            taskWord \u003d \"tasks\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        System.out.printf(\"Now you got %d %s in your list!\\n\", tasks.size(), taskWord);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * Prints the list of tasks the user has."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     * @param currTasks The list of tasks to be printed."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void printList(List\u003cTask\u003e currTasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        if (currTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            printNoTaskYet();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            assert currTasks.size() \u003e 0 : currTasks.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            printStopProcrastinating();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            for (int i \u003d 0; i \u003c currTasks.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                System.out.printf(\"%d. %s\\n\", i + 1, currTasks.get(i).toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 122
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"75.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"true\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"  /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void testIsValidDate() throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Storage storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(true,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                storage.isValidDate(\"2020-01-01\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(false,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "                storage.isValidDate(\"1 Jan 2020\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task testTodo \u003d new Todo(\"test todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(false, testTodo.isDone());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        testTodo.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(true, testTodo.isDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "johannagwan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        Task testTodo \u003d new Todo(\"test todo\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(\"N\", testTodo.getStatusIcon());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        testTodo.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "        assertEquals(\"Y\", testTodo.getStatusIcon());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "johannagwan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "johannagwan": 25
    }
  }
]
