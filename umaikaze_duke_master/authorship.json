[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "# text-ui-test output files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "/text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "/text-ui-test/DIFF.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "/text-ui-test/EXPECTED.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "# JUnit test input / output files"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "/src/test/data.txt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "# IntelliJ build"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "/out/"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 11,
      "-": 14
    }
  },
  {
    "path": "src/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "D|1|refill catfood |25/1/2020 18:30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "E|0|kishi-san meeting |31/1/2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "T|0|that has a timing "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "E|0|typed in wrong order |5/2/2020 6:00"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 4
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    Storage st;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    TaskList tl;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Duke(String savePath) throws UnsupportedEncodingException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        st \u003d new Storage(savePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            tl \u003d new TaskList(st.loadFile());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            tl \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    void run(BufferedReader br) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ui.showReply(\"how may i sewve u today nya?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String[] line \u003d br.readLine().split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String cmd \u003d line[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        while (!cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                switch (cmd) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        tl.printList(ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        ui.showReply(tl.markDone(Integer.parseInt(line[1]) - 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        ui.showReply(tl.delete(Integer.parseInt(line[1]) - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        ui.showReply(tl.addTask(line));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (!cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    tl.saveFile(st);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                ui.showError(e.getMessage() + \"\\n\\tYouw date and time fowmat is invawid ^;;w;;^ \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        + \"Make suwe to follow d/M/yyyy fowmat followed by optionyal 24 hour time H:mm (^・`ω´・^)\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                ui.showError(\"Oh nyo ^;;w;;^  I was unyabwe to save / load because:\\n\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            line \u003d br.readLine().split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            cmd \u003d line[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ui.showReply(\"Bye. Hope to see you again soon ^\u003ew\u003c^\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            Duke d \u003d new Duke(\"../src/data/data.txt\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            d.run(br);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            System.out.println(\"^;;w;;^ The programmer was clumsy and set an unsupported output encoding: \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    + e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            System.out.println(\"^;;w;;^ a fatal input / output error has occurred: \" + e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 72,
      "-": 2
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 7
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    LocalDateTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    boolean hasTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    // Meant for file loading"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Parser(String description, String timeStr) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        parseTime(timeStr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    // Meant for user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Parser(String[] line) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        findTimeString(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        findDescriptionString(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    private void findTimeString(String[] words) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder dateTimeSb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String dateStr \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String timeStr \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            if (words[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                for (int j \u003d i + 1; j \u003c words.length \u0026\u0026 j \u003c i + 2; j++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    if (words[j].contains(\"/\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        dateStr \u003d words[j];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        timeStr \u003d j + 1 \u003e\u003d words.length ? \"\" : words[j + 1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (!dateStr.equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            dateTimeSb.append(dateStr).append(\" \").append(timeStr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            parseTime(dateTimeSb.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    private void findDescriptionString(String[] words) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder description \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            if (words[i].charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (i + 2 \u003c words.length \u0026\u0026 words[i + 2].contains(\":\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    i +\u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            description.append(words[i]).append(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.description \u003d description.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    private void parseTime(String str) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String[] dateTime \u003d str.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            hasTime \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            time \u003d LocalDateTime.parse(dateTime[0] + \" 23:29\", DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            hasTime \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            time \u003d LocalDateTime.parse(dateTime[0] + \" \" + dateTime[1], DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 73
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    private File saveFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Storage(String savePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.saveFile \u003d new File(savePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void saveFile(List\u003cTask\u003e list) throws IOException, DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        PrintWriter out \u003d new PrintWriter(saveFile, \"UTF-8\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            Task task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            sb.append(task.getSaveString()).append(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out.print(sb.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public List\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(saveFile));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String nextLine \u003d br.readLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String[] line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            line \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            for (int i \u003d 0; i \u003c line.length; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                line[i] \u003d line[i].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            while (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                Parser p;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                switch (line[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        task \u003d new Todo(line[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        if (line[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                            task.markDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        System.out.println(\"\\tLoaded a todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        p \u003d new Parser(line[2], line[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        task \u003d new Deadline(p.getDescription(), p.time, p.hasTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        if (line[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                            task.markDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        System.out.println(\"\\tLoaded a deadwinye\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        p \u003d new Parser(line[2], line[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        task \u003d new Event(p.getDescription(), p.time, p.hasTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        if (line[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                            task.markDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        System.out.println(\"\\tLoaded an event\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                nextLine \u003d br.readLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    line \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            throw new IOException(\"Save data is empty, we will stawt fwesh (・`ω´・)\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 80
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public TaskList(List\u003cTask\u003e loaded) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list \u003d loaded;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String countList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"Nyow you have \" + list.size() + \" tasks in the wist.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    private Task getTask(String[] line) throws DukeException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String cmd \u003d line[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Parser p \u003d new Parser(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (p.getDescription().equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    throw new DukeException(\"OOPS ;;ω;;  The descwiption of a deadwinye cannyot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (p.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    throw new DukeException(\"OOPS ;;ω;;  The deadwinye of a deadwinye cannyot be empty\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                            \", did you use /by to state the deadwinye?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                newTask \u003d new Deadline(p.getDescription(), p.time, p.hasTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (p.getDescription().equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    throw new DukeException(\"OOPS owo  The descwiption of a event cannyot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (p.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    throw new DukeException(\"OOPS ;;ω;;  The timing fow an event cannyot be empty,\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                            \" did you use /at to state the timing?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                newTask \u003d new Event(p.getDescription(), p.time, p.hasTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                if (p.getDescription().equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                    throw new DukeException(\"OOPS (・`ω´・)  The descwiption of a todo cannyot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                newTask \u003d new Todo(p.getDescription());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                throw new DukeException(\"OOPS oωo  I\u0027m sowwy, but I don\u0027t knyow what that means ^;;ω;;^\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String addTask(String[] line) throws DukeException{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task newTask \u003d getTask(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list.add(newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"Got it ^UωU^ I\u0027ve added this task: \\n\\t\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + newTask + \"\\n\\t\" + countList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String markDone(int index) throws DukeException{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            throw new DukeException(\"Tasks out of bounds cannyot be donye \u003eω\u003c\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"Nyice ^;;ω;;^  I\u0027ve mawked this task as donye: \\n\\t\" + task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String delete(int index) throws DukeException{"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            throw new DukeException(\"Nyooooo ;;ω;; You cannyot delete beyond the list size!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list.remove(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"Nyoted (^・`ω´・^)  I\u0027ve wemuvd this task: \\n\\t\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + task + \"\\n\\t\" + countList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void printList(Ui ui) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ui.printList(list);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void saveFile(Storage st) throws IOException, DukeException{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        st.saveFile(list);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 97
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Ui() throws UnsupportedEncodingException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        showHeading();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void showHeading() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        showReply(\"hewwo fwom\\n\\t _____     _\\n\\t\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + \"|     |___| |_ ___ ___ ___ ___ ___ ___\\n\\t\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + \"|   --| .\u0027|  _| . | -_|  _|_ -| . |   |\\n\\t\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + \"|_____|__,|_| |  _|___|_| |___|___|_|_|\\n\\t\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + \"              |_|\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void showReply(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\\t\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"*\".repeat(60)).append(\"\\n\\t\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(line).append(\"\\n\\t\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"*\".repeat(60)).append(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out.print(sb.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\\t\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"x\".repeat(60)).append(\"\\n\\t\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(error).append(\"\\n\\t\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"x\".repeat(60)).append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out.print(sb.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\\t\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"*\".repeat(60)).append(\"\\n\\tHewe awe the tasks in youw wist:\\n\\t\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            sb.append(\"list is empty ^qwq^\\n\\t\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                sb.append(i).append(\". \").append(list.get(i - 1)).append(\"\\n\\t\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        sb.append(\"*\".repeat(60)).append(\"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        out.print(sb.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 54
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected boolean hasTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean hasTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.hasTime \u003d hasTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"D|\" + (isDone ? 1 : 0) + \"|\" + description + \"|\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\" + (hasTime ? \" H:mm\" : \"\")));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"EEEE, d MMM yyyy\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + (hasTime ? \" H:mm\" : \"\"))) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 27
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected boolean hasTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean hasTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.hasTime \u003d hasTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"E|\" + (isDone ? 1 : 0) + \"|\" + description + \"|\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\" + (hasTime ? \" H:mm\" : \"\")));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"EEEE, d MMM yyyy\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                + (hasTime ? \" H:mm\" : \"\"))) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 27
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String getSaveString() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        throw new DukeException(\"Nyot awwowed to save basic task\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 26
    }
  },
  {
    "path": "src/main/java/umaikaze/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String getSaveString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"T|\" + (isDone ? 1 : 0) + \"|\" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 17
    }
  },
  {
    "path": "src/test/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "T|0|TestTodo"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 1
    }
  },
  {
    "path": "src/test/java/umaikaze/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import umaikaze.duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void saveFile_normalInput_Todo() throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String dir \u003d \"data.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list.add(new Todo(\"TestTodo\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Storage storage \u003d new Storage(dir);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        storage.saveFile(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(dir));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        assertEquals(\"T|0|TestTodo\", br.readLine());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void loadFile_normalInput_Todo() throws IOException, DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        String dir \u003d \"data.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Storage storage \u003d new Storage(dir);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list \u003d storage.loadFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        assertEquals(\"[T][\\u2718] TestTodo\", list.get(0).toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 33
    }
  },
  {
    "path": "src/test/java/umaikaze/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "package umaikaze.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void task_normalInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task t \u003d new Task(\"Test Description\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        assertEquals(t.toString(), \"[\\u2718] Test Description\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    public void markDone_normalInput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Task t \u003d new Task(\"Test Description\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        t.markDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        assertEquals(t.toString(), \"[\\u2713] Test Description\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 19
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\thewwo fwom"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t _____     _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t|     |___| |_ ___ ___ ___ ___ ___ ___"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t|   --| .\u0027|  _| . | -_|  _|_ -| . |   |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t|_____|__,|_| |  _|___|_| |___|___|_|_|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t              |_|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t..\\src\\data\\data.txt (The system cannot find the file specified)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\thow may i sewve u today nya?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tlist is empty ^qwq^"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✘] take care of kyaru "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 1 tasks in the wist."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[D][✘] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 3 tasks in the wist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS owo  I\u0027m sowwy, but I don\u0027t knyow what that means ^;;w;;^"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS (・`ω´・)  The descwiption of a todo cannyot be empty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS ;;w;;  The descwiption of a deadwinye cannyot be empty."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS owo  The descwiption of a event cannyot be empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✘] that has a timing "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 4 tasks in the wist."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS ;;w;;  The descwiption of a deadwinye cannyot be empty."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\txxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 5 tasks in the wist."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t1. [T][✘] take care of kyaru "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t2. [D][✘] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t3. [E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t4. [T][✘] that has a timing "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t5. [E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyice ^;;w;;^  I\u0027ve mawked this task as donye: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✓] take care of kyaru "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyice ^;;w;;^  I\u0027ve mawked this task as donye: "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[D][✓] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyoted (^・`ω´・^)  I\u0027ve wemuvd this task: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✓] take care of kyaru "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 4 tasks in the wist."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t1. [D][✓] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t2. [E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t3. [T][✘] that has a timing "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t4. [E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tBye. Hope to see you again soon ^\u003ew\u003c^"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 89
    }
  },
  {
    "path": "text-ui-test/DIFF.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "Comparing files ACTUAL.TXT and EXPECTED.TXT"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        hewwo fwom"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "         _____     _"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        |     |___| |_ ___ ___ ___ ___ ___ ___"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        |   --| .\u0027|  _| . | -_|  _|_ -| . |   |"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        |_____|__,|_| |  _|___|_| |___|___|_|_|"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "                      |_|"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ..\\src\\data\\data.txt (The system cannot find the file specified)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        how may i sewve u today nya?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "hewwo fwom"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": " _____     _"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|     |___| |_ ___ ___ ___ ___ ___ ___"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|   --| .\u0027|  _| . | -_|  _|_ -| . |   |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|_____|__,|_| |  _|___|_| |___|___|_|_|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "              |_|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "how may i sewve u today nya?"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list is empty qwq"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        list is empty ^qwq^"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✘] take care of kyaru"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 1 tasks in the wist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✘] take care of kyaru "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 1 tasks in the wist."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [D][✘] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [D][✘] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 3 tasks in the wist."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "DukeException:  ************************************************************"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS owo  I\u0027m sowwy, but I don\u0027t knyow what that means :-("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 3 tasks in the wist."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        1. [T][✘] take care of kyaru"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        2. [D][✘] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        3. [E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyice ;;w;;  I\u0027ve mawked this task as donye:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✓] take care of kyaru"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyice ;;w;;  I\u0027ve mawked this task as donye:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [D][✓] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyoted (・`ω´・)  I\u0027ve wemuvd this task:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [D][✓] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        1. [T][✓] take care of kyaru"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        2. [E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Bye. Hope to see you again soon \u003ew\u003c"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** ACTUAL.TXT"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS owo  I\u0027m sowwy, but I don\u0027t knyow what that means ^;;w;;^"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS (・`ω´・)  The descwiption of a todo cannyot be empty."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS ;;w;;  The descwiption of a deadwinye cannyot be empty."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS owo  The descwiption of a event cannyot be empty."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✘] that has a timing "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 4 tasks in the wist."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        OOPS ;;w;;  The descwiption of a deadwinye cannyot be empty."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Got it ^UwU^ I\u0027ve added this task: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 5 tasks in the wist."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        1. [T][✘] take care of kyaru "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        2. [D][✘] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        3. [E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        4. [T][✘] that has a timing "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        5. [E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyice ^;;w;;^  I\u0027ve mawked this task as donye: "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✓] take care of kyaru "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyice ^;;w;;^  I\u0027ve mawked this task as donye: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [D][✓] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyoted (^・`ω´・^)  I\u0027ve wemuvd this task: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        [T][✓] take care of kyaru "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Nyow you have 4 tasks in the wist."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Hewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        1. [D][✓] refill catfood  (by: Saturday, 25 Jan 2020 18:30)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        2. [E][✘] kishi-san meeting  (at: Friday, 31 Jan 2020)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        3. [T][✘] that has a timing "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        4. [E][✘] typed in wrong order  (at: Wednesday, 5 Feb 2020 6:00)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        Bye. Hope to see you again soon ^\u003ew\u003c^"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "        ************************************************************"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "***** EXPECTED.TXT"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "*****"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "umaikaze": 170
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "hewwo fwom"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": " _____     _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|     |___| |_ ___ ___ ___ ___ ___ ___"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|   --| .\u0027|  _| . | -_|  _|_ -| . |   |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "|_____|__,|_| |  _|___|_| |___|___|_|_|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "              |_|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "how may i sewve u today nya?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tlist is empty qwq"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✘] take care of kyaru"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 1 tasks in the wist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[D][✘] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tGot it UwU I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 3 tasks in the wist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "DukeException:  ************************************************************"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tOOPS owo  I\u0027m sowwy, but I don\u0027t knyow what that means :-("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t1. [T][✘] take care of kyaru"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t2. [D][✘] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t3. [E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyice ;;w;;  I\u0027ve mawked this task as donye:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[T][✓] take care of kyaru"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyice ;;w;;  I\u0027ve mawked this task as donye:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[D][✓] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyoted (・`ω´・)  I\u0027ve wemuvd this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t[D][✓] refill catfood  (by: 6pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tNyow you have 2 tasks in the wist."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tHewe awe the tasks in youw wist:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t1. [T][✓] take care of kyaru"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t2. [E][✘] kishi-san meeting  (at: Friday 7pm)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\tBye. Hope to see you again soon \u003ew\u003c"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "\t************************************************************"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "todo take care of kyaru"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "deadline refill catfood /by 25/1/2020 18:30"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "event kishi-san meeting /at 31/1/2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "you don\u0027t know what this means"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "todo that has a timing /at 1/2/2020 18:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "deadline /by 20/1/2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "event /at 5/2/2020 6:00 typed in wrong order"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 17
    }
  },
  {
    "path": "text-ui-test/inputListOnly.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 2
    }
  },
  {
    "path": "text-ui-test/runTestRead.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "java -classpath ..\\out\\production\\duke\\ umaikaze.duke.Duke \u003c inputListOnly.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003e DIFF.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "java -classpath ..\\out\\production\\duke\\ umaikaze.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003e DIFF.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 9
    }
  },
  {
    "path": "text-ui-test/runtestFresh.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM delete output and data from previous run"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "if exist ..\\src\\data\\data.txt del ..\\src\\data\\data.txt"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "java -classpath ..\\out\\production\\duke\\ umaikaze.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "umaikaze"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "umaikaze"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT \u003e DIFF.TXT"
      }
    ],
    "authorContributionMap": {
      "umaikaze": 10
    }
  }
]
