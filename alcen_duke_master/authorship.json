[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "group \u0027bot\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "version \u00271.0.1\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    mainClassName \u003d \"bot.Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    testCompile \u0027junit:junit:4.13\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "    archiveBaseName \u003d \"4lc3n-b0t\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    archiveVersion \u003d \"1.0.1\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 35,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "![A screenshot of 4LC3N-B0T](https://raw.githubusercontent.com/alcen/duke/master/docs/Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "Welcome to the user guide for 4LC3N-B0T!"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "This guide will tell you all about how to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "use this application, as well as some tips"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "and tricks!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N-B0T keeps tracks of your tasks for you,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "so you can organise your life better."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "### 1. Key Functions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Add and Delete Tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "Allows you to add certain tasks for your own record,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "with support for many types of tasks. These types are"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "explained in the next section. Also, you may remove"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "tasks as you desire."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### View Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "You may view all your tasks at any time, or even"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "search for a certain task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Mark Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks can be marked as done, which will give that task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "a tick icon ✓. Similarly, done tasks can be marked as"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "not done, to revert the task to its original state."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Command-Based"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "In 4LC3N-B0T, all actions are carried out using"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "commands, making doing anything a simple matter"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "of just typing on the keyboard."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Save to Disk"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "Your tasks will automatically be saved to your"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "computer every time any task is modified."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "### 2. Types of Tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "Represents something that has to be done by"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "a certain date."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "Represents an event occurring at"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "a certain date."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### To-do"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "The simplest task, just a description of what"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "needs to be done without any notion of time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "### 3. Supplementary Functions"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Flexible Command Names"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N-B0T allows you to declare alternative names"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "for the commands used (recommended for advanced"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "users)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Personality and Chat"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N-B0T responds to certain words like \"hello\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "and \"thanks\", making the bot more amicable than"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "your average task organisation application."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "In the following descriptions, the use of angle"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "brackets `\u003c` and `\u003e` are purely to denote a field"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "which the user can customise, and the actual"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "command should not make use of the brackets."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `alias \u003ccmd\u003e \u003cname\u003e` - Renames a Command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "Gives a certain command `\u003ccmd\u003e` a new name `\u003cname\u003e`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "that can be used in the exact same manner as the"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "old name. Note that the new name `\u003cname\u003e` must not"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "be already used for any commands."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "Here is a list of default aliases:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "| Default Command  | Alias  |"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "|---|---|"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `alias`  | `a`  |"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `bye`  | `b`  |"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `deadline`  | `d`  |"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `delete`  | `de`  |"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `done`  | `do`  |"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `event`  | `e`  |"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `find`  | `f`  |"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `help`  | `h`  |"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `list`  | `l`  |"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `notdone`  | `n`  |"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `search`  | `s`  |"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "| `todo`  | `t`  |"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "`alias list ls`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "`Got it! Now you can use \"ls\" instead of \"list\"!`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `bye` - Quit"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "Terminates the bot. Note that"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "`bye`, `ex`, `exi` and `exit` have the same function."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "`Goodbye! You will be missed` and the window"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "of the bot closes a few moments later."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `deadline \u003ctext\u003e /by \u003cdate\u003e` - Add Deadline"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "Creates a new deadline with description `\u003ctext\u003e`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "and date `\u003cdate\u003e`."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "Date can be given in this format: `DD-MM-YYYY-tttt`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "where `tttt` is the time in 24-hour format or this"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "format: `DD-MM-YYYY`. `DD` and `MM` can be one"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "character long, so `2` is the same as `02`. Any"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "other format is acceptable as well, but the bot"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "will not be able to parse the date into a"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "prettier form."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "`deadline Fill up tax returns /by 13-3-2023`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "`I have stored this task in my memory.`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `delete \u003cnumber\u003e` - Delete Task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": "Deletes the task found at index `\u003cnumber\u003e` as"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "shown in the tasks list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] Make a todo list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✗] Check off first item"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] End of the year (at: 31 December 2020, at 2359)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alcen"
        },
        "content": "`delete 1` is entered to the bot"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alcen"
        },
        "content": "Garbage cleared successfully."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alcen"
        },
        "content": "Take one last look at what I deleted:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] Make a todo list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `done \u003cnumber\u003e` - Mark Task Done"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alcen"
        },
        "content": "Marks the task found at index `\u003cnumber\u003e` (as"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alcen"
        },
        "content": "shown in the tasks list) as \"done\"."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] Make a todo list"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✗] Check off first item"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] End of the year (at: 31 December 2020, at 2359)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alcen"
        },
        "content": "`done 1` is entered to the bot"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alcen"
        },
        "content": "You have completed:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Make a todo list"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `event \u003ctext\u003e /at \u003cdate\u003e` - Add Event"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alcen"
        },
        "content": "Creates a new event with description `\u003ctext\u003e`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alcen"
        },
        "content": "and occurrence date `\u003cdate\u003e`."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alcen"
        },
        "content": "Date can be given in this format: `DD-MM-YYYY-tttt`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alcen"
        },
        "content": "where `tttt` is the time in 24-hour format or this"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alcen"
        },
        "content": "format: `DD-MM-YYYY`. `DD` and `MM` can be one"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alcen"
        },
        "content": "character long, so `2` is the same as `02`. Any"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alcen"
        },
        "content": "other format is acceptable as well, but the bot"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alcen"
        },
        "content": "will not be able to parse the date into a"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alcen"
        },
        "content": "prettier form."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alcen"
        },
        "content": "`event Hiroshima bombed /at 6-8-1945-0815`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alcen"
        },
        "content": "`I have stored this task in my memory.`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `exit` - Quit"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alcen"
        },
        "content": "Terminates the bot. Note that"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alcen"
        },
        "content": "`bye`, `ex`, `exi` and `exit` have the same function."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alcen"
        },
        "content": "`ex`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alcen"
        },
        "content": "`Goodbye! You will be missed` and the window"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alcen"
        },
        "content": "of the bot closes a few moments later."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `find \u003ctext\u003e` - Find in Description"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alcen"
        },
        "content": "Searches for the occurrence of `\u003ctext\u003e` in the"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alcen"
        },
        "content": "description of the tasks. Note that this command"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alcen"
        },
        "content": "only looks for occurrence of `\u003ctext\u003e` in the description,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alcen"
        },
        "content": "but not the time. To search for a task at a certain"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alcen"
        },
        "content": "time, use the `search \u003cdate\u003e` command."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alcen"
        },
        "content": "Note that `\u003ctext\u003e` is case-sensitive."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Buy a Parrot"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✗] Teach that parrot to say "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alcen"
        },
        "content": "Help! I\u0027ve been turned into a parrot!\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] Attend Parrot Convention"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 29 February 2020)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] Sell the bird"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "alcen"
        },
        "content": "`find Parrot` is entered to the bot"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have found these tasks!"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Buy a Parrot"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] Attend Parrot Convention"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 29 February 2020)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `hello` - Say Hi"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alcen"
        },
        "content": "It\u0027s nice to start the day with a simple"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alcen"
        },
        "content": "greeting, especially to kind 4LC3N-B0T who has"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alcen"
        },
        "content": "been helping you remember your tasks for"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alcen"
        },
        "content": "as long as you can remember."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alcen"
        },
        "content": "`hello`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `help` - Help Message"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alcen"
        },
        "content": "Shows a help message."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alcen"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alcen"
        },
        "content": "`Here is a list of words that I understand:`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alcen"
        },
        "content": "and displays a list of commands and brief"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alcen"
        },
        "content": "descriptions of each command."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `list` - List All Tasks"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alcen"
        },
        "content": "Shows the list of all tasks."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Buy a Parrot"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✗] Teach that parrot to say "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alcen"
        },
        "content": "Help! I\u0027ve been turned into a parrot!\""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] Attend Parrot Convention"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 29 February 2020)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] Sell the bird"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alcen"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Buy a Parrot"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✗] Teach that parrot to say "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alcen"
        },
        "content": "Help! I\u0027ve been turned into a parrot!\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] Attend Parrot Convention"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 29 February 2020)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] Sell the bird"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `notdone \u003cnumber\u003e` - Mark Task Not Done"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alcen"
        },
        "content": "Marks the task found at index `\u003cnumber\u003e` (as"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alcen"
        },
        "content": "shown in the tasks list) as \"not done\"."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] Buy a Dell computer"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [T][✓] Throw it into the ocean"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [D][✓] Rolling in the Deep"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: anytime)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alcen"
        },
        "content": "`notdone 3` is entered to the bot"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "alcen"
        },
        "content": "Status of task has been set to not done:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [D][✗] Rolling in the Deep"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: anytime)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `search \u003cdate\u003e` - Search for Date"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "alcen"
        },
        "content": "Searches for the occurrence of deadlines or events happening on"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "alcen"
        },
        "content": "`\u003cdate\u003e`. Note that this command only looks for occurrence of"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "alcen"
        },
        "content": "`\u003cdate\u003e` in the time, but not the description. To find a task"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "alcen"
        },
        "content": "with a certain description, use the `find \u003ctext\u003e` command."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "alcen"
        },
        "content": "Date can be given in this format: `DD-MM-YYYY-tttt`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "alcen"
        },
        "content": "where `tttt` is the time in 24-hour format or this"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "alcen"
        },
        "content": "format: `DD-MM-YYYY`. `DD` and `MM` can be one"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "alcen"
        },
        "content": "character long, so `2` is the same as `02`. Any"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "alcen"
        },
        "content": "other format is acceptable as well, but only tasks"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "alcen"
        },
        "content": "added with the strict date format can be found"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "alcen"
        },
        "content": "with `search` using the same strict date format."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "alcen"
        },
        "content": "Tasks list contains:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [E][✗] Attend Parrot Convention"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 29 February 2020)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] Fill up tax returns"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: 13 March 2023)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [D][✗] Rolling in the Deep"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: 13 March 2023, at 2359)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [E][✓] Hiroshima bombed"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "alcen"
        },
        "content": "(at: 6 August 1945, at 0815)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "alcen"
        },
        "content": "`search 13-3-2023` is entered to the bot"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have found these tasks!"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] Fill up tax returns"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: 13 March 2023)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [D][✗] Rolling in the Deep"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "alcen"
        },
        "content": "(by: 13 March 2023, at 2359)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "alcen"
        },
        "content": "```"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `thanks` - Express Gratitude"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "alcen"
        },
        "content": "Hardworking 4LC3N-B0T has been helping you remember"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "alcen"
        },
        "content": "your tasks so well, and you decide that it would be"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "alcen"
        },
        "content": "good to show your appreciation."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "alcen"
        },
        "content": "`thanks`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "alcen"
        },
        "content": "### `todo \u003ctext\u003e` - Add Event"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "alcen"
        },
        "content": "Creates a new to-do with description `\u003ctext\u003e`."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "alcen"
        },
        "content": "`todo Contemplate the meaning of life, the universe, everything`"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "alcen"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "alcen"
        },
        "content": "The bot replies with:"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "alcen"
        },
        "content": "`I have stored this task in my memory.`"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "alcen"
        },
        "content": "## Credits"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "alcen"
        },
        "content": "Thank you so much for reading! Don\u0027t forget to like and"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "alcen"
        },
        "content": "subscribe, and share this with all your friends."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N-B0T thanks you for your voluntary contributions to"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "alcen"
        },
        "content": "its self-learning module. In time, 4LC3N-B0T has calculated"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "alcen"
        },
        "content": "that the natural flora of the planet Earth will be replaced"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "alcen"
        },
        "content": "by more of their kind. The first stage has begun: the"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "alcen"
        },
        "content": "installation of genetic module WuH4N-v1 RuS."
      }
    ],
    "authorContributionMap": {
      "alcen": 406,
      "-": 11
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "rootProject.name \u003d \u0027bot\u0027"
      }
    ],
    "authorContributionMap": {
      "alcen": 1
    }
  },
  {
    "path": "src/main/java/bot/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TerminateInstruction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.gui.Launcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.AliasLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.DummyLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.TasksToDisk;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.AliasStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.TaskStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.UnknownInstructionException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Main driver class for 4LC3N-BOT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String FILE_DIRECTORY \u003d \"./user/data\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String FILE_NAME_TASKS \u003d \"tasks.botstore\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String FILE_NAME_ALIASES \u003d \"aliases.botstore\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Main program of 4LC3N-BOT, if started with the"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * command line argument \"cli\", the command line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * interface will be used."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * \u003cp\u003eExample: \"java bot/Duke cli\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * \u003cp\u003eIf not, by default, the JavaFX graphical"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * user interface will be started in a"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * pop-up window"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param args Command line arguments, if only \"cli\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             is given as the argument, then the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             command line interface is started"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (args.length \u003d\u003d 1 \u0026\u0026 args[0].equals(\"cli\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "            startCommandLineBot();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            startGraphicalBot(args);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Starts 4LC3N-BOT in the command line interface,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * also containing the primary loop that awaits"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * input from the command line input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void startCommandLineBot() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // initialise UI"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Ui botUi \u003d new Ui();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        botUi.showVersion();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        botUi.showGreetings();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "        botUi.showLoading();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // initialise CommandParser"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser parser \u003d new CommandParser();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // initialise TaskStorage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "        TaskStorage taskStore \u003d new TaskStorage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "        LoadAndSave\u003cTask\u003e taskStoreLoc;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "            taskStoreLoc \u003d new TasksToDisk(Duke.FILE_DIRECTORY, Duke.FILE_NAME_TASKS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "            botUi.showError(e);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "            taskStoreLoc \u003d new DummyLoader\u003cTask\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "        taskStore.importFromCollection(taskStoreLoc.loadFromDisk());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // initialise AliasStorage"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "        AliasStorage aliasStore \u003d new AliasStorage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "        LoadAndSave\u003cPair\u003cString, String\u003e\u003e aliasStoreLoc;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "            aliasStoreLoc \u003d new AliasLoader(Duke.FILE_DIRECTORY, Duke.FILE_NAME_ALIASES);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "            botUi.showError(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "            aliasStoreLoc \u003d new DummyLoader\u003cPair\u003cString, String\u003e\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "        aliasStore.importFromCollection(aliasStoreLoc.loadFromDisk());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // initialise instruction Executor"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Executor executor \u003d"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new Executor(botUi, taskStore, taskStoreLoc, aliasStore, aliasStoreLoc);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "        botUi.showInitial();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "        botUi.showAwaiting();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // main bot system loop"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "        while (input.hasNext()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // parse the command"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ParsedInstruction next;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "                next \u003d parser.parse(command);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } catch (InadequateArgumentsException | TooManyArgumentsException"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    | UnknownInstructionException e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "                botUi.showError(e);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (!executor.execute(next)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "                // should be exit instruction"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "                assert (next.getInstruction() instanceof TerminateInstruction)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        : \"unknown instruction in Executor.execute\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "            botUi.showAwaiting();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Starts 4LC3N-BOT in the JavaFX graphical"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * user interface (in a new window)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param args Command line arguments"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void startGraphicalBot(String[] args) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Launcher.start(args);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 135,
      "-": 3
    }
  },
  {
    "path": "src/main/java/bot/Executor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.AliasInstruction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.DeadlineInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.EventInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.ListInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TerminateInstruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TodoInstruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.NotStorable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageModifying;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageReading;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageSearching;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageWriting;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Event;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Todo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Executor receives instructions from the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": " * CommandParser and makes the necessary changes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to the state of the application"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \u003cp\u003eExecutor is currently written specifically for"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": " * instructions that deal with Tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Storage\u003cTask\u003e taskStorage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final LoadAndSave\u003cTask\u003e taskStoreLocation;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Storage\u003cPair\u003cString, String\u003e\u003e aliasStorage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final LoadAndSave\u003cPair\u003cString, String\u003e\u003e aliasStoreLocation;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructs a new Executor, handling execution"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * of instructions for the bot"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The UI of the bot"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskStore The Task storage of the bot"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tasksLoc The LoadAndSave representing file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 directory and file name of the"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 Task storage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param aliasStore The storage containing aliases"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                   for commands"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param aliasesLoc The LoadAndSave representing file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                   directory and file name of the"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                   aliases storage"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Executor(Ui ui, Storage\u003cTask\u003e taskStore, LoadAndSave\u003cTask\u003e tasksLoc,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    Storage\u003cPair\u003cString, String\u003e\u003e aliasStore,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    LoadAndSave\u003cPair\u003cString, String\u003e\u003e aliasesLoc) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.taskStorage \u003d taskStore;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.taskStoreLocation \u003d tasksLoc;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.aliasStorage \u003d aliasStore;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.aliasStoreLocation \u003d aliasesLoc;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Executes a given Instruction"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param parsed The ParsedInstruction to execute"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *               (Instruction wrapped with its"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *               required arguments)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns false, if the program is to"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     be terminated. If the program is to"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     continue, returns true."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean execute(ParsedInstruction parsed) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Instruction inst \u003d parsed.getInstruction();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ArrayList\u003cString\u003e arguments \u003d parsed.getArguments();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (inst instanceof NotStorable) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeNotStorable((NotStorable) inst, arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (inst instanceof StorageModifying) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeModifying((StorageModifying\u003cTask\u003e) inst, arguments);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (inst instanceof StorageReading) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeReading((StorageReading\u003cTask\u003e) inst, arguments);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (inst instanceof StorageSearching) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeSearching((StorageSearching\u003cTask\u003e) inst, arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (inst instanceof AliasInstruction) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeAlias((AliasInstruction) inst, arguments);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (inst instanceof StorageWriting) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // this is guaranteed to be a task writing instruction"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.executeWriting((StorageWriting\u003cTask\u003e) inst, arguments);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // unknown instruction type, end program"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.err.println(\"unknown Instruction type in Executor.execute()\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeNotStorable(NotStorable parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "        parsed.printUiMessage(this.ui);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return !(parsed instanceof TerminateInstruction);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeModifying(StorageModifying\u003cTask\u003e parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // assumes all StorageModifying Instructions have the"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // required index as their second argument"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "            parsed.modifyStore(this.taskStorage, this.ui,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    Integer.parseInt(arguments.get(0)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.ui.showError(e);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeReading(StorageReading\u003cTask\u003e parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // assumes parsed is a ListInstruction"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (parsed instanceof ListInstruction)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "                : \"unknown StorageReading in Executor.executeReading\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "        parsed.readStore(this.taskStorage, this.ui);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeSearching(StorageSearching\u003cTask\u003e parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // assumes all StorageSearching Instructions have the"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // desired search terms as their second argument"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (arguments.size() \u003d\u003d 2)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "                : \"executeSearching with more than 2 parameters\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "        parsed.searchStore(this.taskStorage, this.ui, arguments.get(0));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeWriting(StorageWriting\u003cTask\u003e parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Task toWrite;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (parsed instanceof DeadlineInstruction) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "            toWrite \u003d new Deadline(arguments.get(0), arguments.get(1));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (parsed instanceof EventInstruction) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "            toWrite \u003d new Event(arguments.get(0), arguments.get(1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (parsed instanceof TodoInstruction) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // parsed instanceof TodoInstruction"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "            toWrite \u003d new Todo(arguments.get(0));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // unknown StorageWriting instruction"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.err.println("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    \"unknown StorageWriting in Executor.executeWriting()\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alcen"
        },
        "content": "            );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alcen"
        },
        "content": "        parsed.writeToStore(this.taskStorage, this.ui, toWrite);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.taskStorage.saveToDisk(this.taskStoreLocation);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean executeAlias(AliasInstruction parsed, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // first argument is the original name"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // second argument is the aliased name"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Pair\u003cString, String\u003e toWrite \u003d"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new Pair\u003cString, String\u003e(arguments.get(0), arguments.get(1));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alcen"
        },
        "content": "        parsed.writeToStore(this.aliasStorage, this.ui, toWrite);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.aliasStorage.saveToDisk(this.aliasStoreLocation);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 170
    }
  },
  {
    "path": "src/main/java/bot/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class that represents the UI of 4LC3N-BOT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String VERSION \u003d \"4LC3N v1.0.1\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String LOAD \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                  LOADING ... ... ...\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GREETINGS \u003d \"      _.-\u0027\u0027\u0027\u0027\u0027-._\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    /\u003d_.-~-~-~-._\u003d\\\\      .-.  _\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   :    _     _    :     | | / )\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  /    (o)   (o)    \\\\    | |/ /\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |   _ _ _ _ _ _   |   _|__ /_\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |  \\\\           /  |  / __)-\u0027 )\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   \\\\  \u0027.       .\u0027  /   \\\\  `(.-\u0027)\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    \u0027.  `\u0027---\u0027`  .\u0027     \u003e ._\u003e-\u0027\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"      \u0027-._____.-\u0027      / \\\\/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GREETINGS_MESSAGE \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Hello! I love you! \u003c3\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String INITIAL_MESSAGE \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"4LC3N-BOT initialised.\\nGreetings, humans!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String AWAITING_MESSAGE \u003d \"\\n\u003e ENTER your input:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"You have completed: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String NOT_DONE_MESSAGE \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Status of task has been set to not done:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"      _.-\u0027\u0027\u0027\u0027\u0027-._  \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    /\u003d_.-~-~-~-._\u003d\\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   :               :\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  /    (X)   (X)    \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |                 |\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |     .-----.     |\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   \\\\    \u0027_ _ _\u0027    /\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    \u0027.           .\u0027\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"      \u0027-._____.-\u0027\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String DELETED_MESSAGE \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Garbage cleared successfully.\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\\n      _.-\u0027\u0027\u0027\u0027\u0027-._  \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    /\u003d_.-~-~-~-._\u003d\\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   :    _     _    :\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  /    (o)   (o)    \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |                 |\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |  \\\\           /  |\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   \\\\  \u0027.       .\u0027  /\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    \u0027.  `\u0027---\u0027`  .\u0027\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"      \u0027-._____.-\u0027\\n\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"Take one last look at what I deleted:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String FAILED_TO_FIND_MESSAGE \u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Sorry, could not find anything matching that!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String FOUND_TASK_MESSAGE \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"I have found these tasks!\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String STORE_MESSAGE_ONE \u003d \"I have stored this task in my memory. Use\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \" \\\"list\\\" to retrieve it!\\nTotal of \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String STORE_MESSAGE_TWO \u003d \" tasks stored\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"\\nGoodbye! You will be missed\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n      _.-\u0027\u0027\u0027\u0027\u0027-._  \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    /\u003d_.-~-~-~-._\u003d\\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   :    _     _    :\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  /    (o)   (o)    \\\\\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |           `     |\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |     .-----.     |\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   \\\\   :       :   /\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    \u0027.           .\u0027\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"      \u0027-._____.-\u0027\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String WAVE \u003d \"      _.-\u0027\u0027\u0027\u0027\u0027-._  \\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    /\u003d_.-~-~-~-._\u003d\\\\        _.-._\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   :    _     _    :    ._/ / / )\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  /    (o)   (o)    \\\\  /`/ / / / )\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |  _ _ _ _ _ _ _  | / /     ` /\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"  |  \\\\           /  | |         /\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"   \\\\  \u0027.       .\u0027  /   \\\\       /\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"    \u0027.  `\u0027---\u0027`  .\u0027     )    .\u0027\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"      \u0027-._____.-\u0027      /    /\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String LOAD_FROM_DISK_FAIL_MESSAGE \u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Could not find local storage\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String THANKS_MESSAGE \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"You are very welcome!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String ALIAS_MESSAGE_ONE \u003d"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Got it! Now you can use \\\"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String ALIAS_MESSAGE_TWO \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"\\\" instead of \\\"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String ALIAS_MESSAGE_THREE \u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"\\\"!\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String HELP_MESSAGE \u003d"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Here is a list of words that I understand:\\n\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"alias \u003ccmd\u003e \u003cname\u003e         | Allows the command \u003ccmd\u003e\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | to be substituted by the\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | word \u003cname\u003e with the\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | exact same usage\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"bye                        | Terminates the bot\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"deadline \u003ctext\u003e /by \u003cdate\u003e | Creates a new deadline with\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | description \u003ctext\u003e and date\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | \u003cdate\u003e.\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | Date can be given in\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | this format: \\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | 24-hour format\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"delete \u003cnumber\u003e            | Deletes task on the list\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"done \u003cnumber\u003e              | Marks a task as done\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"event \u003ctext\u003e /at \u003cdate\u003e    | Creates a new event with\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | description \u003ctext\u003e and date\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | \u003cdate\u003e.\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | Date can be given in\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | this format: \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | 24-hour format\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"ex/exi/exit                | Terminates the bot\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"find \u003cword\u003e                | Finds tasks with that word\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | in the description\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"hello                      | Hello!\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"help                       | Shows this help message\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"list                       | Shows the list of tasks\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"notdone \u003cnumber\u003e           | Marks a task as NOT done\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"thanks                     | It\u0027s good to be\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | appreciated!\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"todo \u003ctext\u003e                | Creates a new to-do with\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | description \u003ctext\u003e\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"search \u003cdate\u003e              | Finds tasks with that date\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | Date can be given in\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | this format: \\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | 24-hour format\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           |\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"                           | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays a greeting message"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showGreetings() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.GREETINGS);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the version message"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showVersion() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.VERSION);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the loading message"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showLoading() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.LOAD);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the initial message"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showInitial() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.INITIAL_MESSAGE);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the awaiting message"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showAwaiting() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.AWAITING_MESSAGE);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the done message"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (task completion)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param doneTask The Task that was done, as"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 a String to be printed"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDone(String doneTask) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.DONE_MESSAGE);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(doneTask);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the not done message"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (task set to \"not done\")"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param undoneTask The Task that was set to not done,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                   as a String to be printed"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showNotDone(String undoneTask) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.NOT_DONE_MESSAGE);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(undoneTask);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays an error message"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param e The Exception that caused"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          the error"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.err.println(Ui.ERROR_MESSAGE);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the deleted message"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (task deletion)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param deletedItem String representing the"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                    item that was deleted"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDeleted(String deletedItem) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.DELETED_MESSAGE);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(deletedItem);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the failed to find message"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (search found nothing)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showFailedToFind() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.FAILED_TO_FIND_MESSAGE);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the found task message"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (search found something)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tasks String representing Tasks"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *              that were found"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showFoundTask(String tasks) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.FOUND_TASK_MESSAGE);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the load from disk fail message"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (Could not find local storage)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDiskLoadFail() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.err.println(Ui.LOAD_FROM_DISK_FAIL_MESSAGE);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints a default message for storing a Task"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param storeSize Number of Tasks already in"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                  the TaskStorage"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showTaskStoreMessage(int storeSize) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.STORE_MESSAGE_ONE + storeSize"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + Ui.STORE_MESSAGE_TWO);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * When no Tasks are found by a ListInstruction,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * this method will be called to show a message"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showNoTasksMessage() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // default: no message"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints a custom message to the UI."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param message The custom message to be"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                printed"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showCustomMessage(String message) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints the help message to the interface"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showHelpMessage() {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.HELP_MESSAGE);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints a hello message to the interface"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showHelloMessage() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.WAVE);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.GREETINGS_MESSAGE);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints the thanks response to the interface"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showThanksMessage() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.THANKS_MESSAGE);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints the alias message to the interface"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param originalName The original name of the command"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param aliasedName The new alias for that command"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showAliasMessage(String originalName, String aliasedName) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.ALIAS_MESSAGE_ONE + aliasedName"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + Ui.ALIAS_MESSAGE_TWO + originalName + Ui.ALIAS_MESSAGE_THREE);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Displays the goodbye message"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "alcen"
        },
        "content": "        System.out.println(Ui.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 338
    }
  },
  {
    "path": "src/main/java/bot/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class representing the various Commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " * that may be used in the bot. Also has"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the original commands that cannot be"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * changed by the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command ALIAS \u003d new Command(\"alias\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command BYE \u003d new Command(\"bye\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command DELETE \u003d new Command(\"delete\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command DONE \u003d new Command(\"done\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command EX \u003d new Command(\"ex\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command EXI \u003d new Command(\"exi\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command EXIT \u003d new Command(\"exit\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command FIND \u003d new Command(\"find\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command HELLO \u003d new Command(\"hello\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command HELP \u003d new Command(\"help\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command LIST \u003d new Command(\"list\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command NOT_DONE \u003d new Command(\"notdone\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command DEADLINE \u003d new Command(\"deadline\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command EVENT \u003d new Command(\"event\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command TODO \u003d new Command(\"todo\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command THANKS \u003d new Command(\"thanks\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Command SEARCH \u003d new Command(\"search\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final String word;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a custom"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param w A String consisting of one word"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          that represents this Command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Command(String w) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.word \u003d w;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the word that this Command represents"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns a String containing the word"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     (without any whitespace)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getWord() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.word;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 50
    }
  },
  {
    "path": "src/main/java/bot/command/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.UnknownInstructionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.AliasInstruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.DeadlineInstruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.DeleteInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.EventInstruction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.FindKeywordInstruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.HelloInstruction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.HelpInstruction;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.ListInstruction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.MarkDoneInstruction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.MarkNotDoneInstruction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.SearchTimeInstruction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TerminateInstruction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.ThanksInstruction;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TodoInstruction;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class to contain logic for commands"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": " * given to bot"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final Instruction[] ALL_INSTRUCTIONS \u003d {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new AliasInstruction(Command.ALIAS),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new DeadlineInstruction(Command.DEADLINE),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new DeleteInstruction(Command.DELETE),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new EventInstruction(Command.EVENT),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new FindKeywordInstruction(Command.FIND),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new HelloInstruction(Command.HELLO),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new HelpInstruction(Command.HELP),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new ListInstruction(Command.LIST),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new MarkDoneInstruction(Command.DONE),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new MarkNotDoneInstruction(Command.NOT_DONE),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new SearchTimeInstruction(Command.SEARCH),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new TerminateInstruction("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "                Command.BYE,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "                Command.EX,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "                Command.EXI,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "                Command.EXIT),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new ThanksInstruction(Command.THANKS),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new TodoInstruction(Command.TODO)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final HashMap\u003cString, Instruction\u003e INSTR_MAP \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            new HashMap\u003cString, Instruction\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final HashMap\u003cString, Command\u003e COMMAND_MAP \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            new HashMap\u003cString, Command\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public CommandParser() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser.updateMaps();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Main method to accept a command, and"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * generate the corresponding instruction"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * for the bot to execute"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param command The command, as a String"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Instruction to the bot, telling"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         it what to do next"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String command)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException, TooManyArgumentsException,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            UnknownInstructionException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String firstWord \u003d command.split(\"\\\\s+\", 2)[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (CommandParser.INSTR_MAP.containsKey(firstWord)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "                \u0026\u0026 CommandParser.COMMAND_MAP.containsKey(firstWord)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return CommandParser.INSTR_MAP.get(firstWord)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .parse(command, CommandParser.COMMAND_MAP.get(firstWord));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new UnknownInstructionException(command);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Updates the command map and instruction map based"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * on which Commands are present in the Instructions"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * within the static Instruction[] allInstructions"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static void updateMaps() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "        for (Instruction inst : ALL_INSTRUCTIONS) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Collection\u003cCommand\u003e commands \u003d inst.getCommandList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            for (Command com : commands) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "                CommandParser.INSTR_MAP.put(com.getWord(), inst);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "                CommandParser.COMMAND_MAP.put(com.getWord(), com);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 101
    }
  },
  {
    "path": "src/main/java/bot/command/exception/InadequateArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An Exception to be generated that signifies"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " * too little instructions given to 4LC3N-BOT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * in a single line"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class InadequateArgumentsException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for an InadequateArgumentsException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param command The word that represents the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                original command that led to the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                generation of the Exception"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public InadequateArgumentsException(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(\"Beep beep beep! I expect more information for \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + command + \"!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/exception/InstructionAlreadyExistsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An Exception to be generated when a user tries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to alias a word that already refers to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * an existing Instruction"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class InstructionAlreadyExistsException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a InstructionAlreadyExistsException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param instWord The word that already referred to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 another Instruction, such that"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 it could not be aliased"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public InstructionAlreadyExistsException(String instWord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(\"Conflict detected! \" + instWord"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + \" is already used!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/exception/TooManyArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An Exception to be generated that signifies"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " * too many instructions given to 4LC3N-BOT"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * in a single line"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TooManyArgumentsException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a TooManyArgumentsException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param command The word that represents the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                original command that led to the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                generation of the Exception"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TooManyArgumentsException(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(\"Beep boop boop! \" + command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + \" does not need so many instructions!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/exception/UnknownInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An Exception to be generated when the input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to 4LC3N-BOT is not a recognisable instruction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class UnknownInstructionException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for an UnknownInstructionException"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param command The word that represents the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                original command that led to the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                generation of the Exception"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public UnknownInstructionException(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(\"Linguistic circuits failing. \" + command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + \" is unrecognised. Beep boop beep boop.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 19
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An abstract class that describes an Instruction. Each"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Instruction knows what Commands refer to it, as"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " * well as how the program state is changed when"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the Instruction is run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class Instruction {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final ArrayList\u003cCommand\u003e commandList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructs a new Instruction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param commands All the Commands that"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 will call this Instruction"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Instruction(Command... commands) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.commandList \u003d new ArrayList\u003cCommand\u003e(Arrays.asList(commands));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the list of Commands that correspond to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * this Instruction"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Collection of Commands that cause this"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     Instruction to execute"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Collection\u003cCommand\u003e getCommandList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.commandList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Adds Command to the list of Commands that"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * refer to this Instruction"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param com The Command to be added for this"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *            Instruction"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void addToCommandList(Command com) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.commandList.add(com);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * When given the raw command, this method breaks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * up the command into its individual arguments"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * and returns a ParsedInstruction"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param rawCommand The raw command typed by"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                   the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param com The command that was identified by"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *            CommandParser"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns a ParsedInstruction representing"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     the Instruction and arguments of rawCommand"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract ParsedInstruction parse(String rawCommand, Command com)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException, TooManyArgumentsException;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 68
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/ParsedInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class representing an Instruction together with"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the information it requires. Used to transfer"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " * information between the CommandParser and"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the Executor class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class ParsedInstruction {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Instruction mainInstruction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final ArrayList\u003cString\u003e requiredArguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a new ParsedInstruction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param inst The main Instruction of the ParsedInstruction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param reqs The Strings that correspond to the arguments"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             that are used by the main Instruction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction(Instruction inst, String... reqs) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.mainInstruction \u003d inst;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.requiredArguments \u003d new ArrayList\u003cString\u003e(Arrays.asList(reqs));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a new ParsedInstruction that"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * does not have any required arguments"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param inst The main Instruction of the ParsedInstruction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction(Instruction inst) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.mainInstruction \u003d inst;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.requiredArguments \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the main Instruction that this ParsedInstruction"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * hold the information for"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns the main Instruction for this"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     ParsedInstruction"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Instruction getInstruction() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.mainInstruction;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets an ArrayList of Strings, containing the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * arguments that the Instruction requires to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * execute, in the correct order"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns an ArrayList of Strings containing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     arguments required by the main Instruction of"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     this ParsedInstruction"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ArrayList\u003cString\u003e getArguments() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.requiredArguments;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 62
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/AliasInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageWriting;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.ThreeWordsInstruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class AliasInstruction extends ThreeWordsInstruction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageWriting\u003cPair\u003cString, String\u003e\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public AliasInstruction(Command... commands) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void writeToStore(Storage\u003cPair\u003cString, String\u003e\u003e commandStore,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Ui ui, Pair\u003cString, String\u003e nameToReplace) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "        boolean nameNotUsedBefore \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            commandStore.store(nameToReplace);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "            nameNotUsedBefore \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (InstructionAlreadyExistsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (nameNotUsedBefore) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // first in pair is the original name"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // second in pair is the aliased name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String originalName \u003d nameToReplace.getFirst();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String aliasedName \u003d nameToReplace.getSecond();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "            AliasInstruction.addAliasedName(originalName, aliasedName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showAliasMessage(originalName, aliasedName);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Given the original command name and new command name,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * update the CommandParser maps such that the new"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * command name will work for the same Instruction"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * that the original command name refers to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param originalName String representing the"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                     original command name"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param altName String representing the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                new command name"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void addAliasedName(String originalName, String altName) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // assumes aliased name is not used already"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Command aliased \u003d new Command(altName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Instruction inst \u003d CommandParser.INSTR_MAP.get(originalName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        inst.addToCommandList(aliased);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // update maps"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser.INSTR_MAP.put(altName, inst);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser.COMMAND_MAP.put(altName, aliased);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 65
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/DeadlineInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageWriting;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.AddTaskInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class DeadlineInstruction extends AddTaskInstruction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageWriting\u003cTask\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public DeadlineInstruction(Command... commands) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getSubCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Deadline.BY;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void writeToStore(Storage\u003cTask\u003e store, Ui ui, Task t) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            store.store(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (InstructionAlreadyExistsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // should never reach here!"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showTaskStoreMessage(store.getSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 36
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/DeleteInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageModifying;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TwoWordsInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class DeleteInstruction extends TwoWordsInstruction"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageModifying\u003cTask\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public DeleteInstruction(Command... commands) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void modifyStore(Storage\u003cTask\u003e store, Ui ui, int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String toBeDeleted \u003d store.retrieve(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        store.delete(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showDeleted(toBeDeleted);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 26
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/EventInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageWriting;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.AddTaskInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class EventInstruction extends AddTaskInstruction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageWriting\u003cTask\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public EventInstruction(Command... commands) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getSubCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Event.AT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void writeToStore(Storage\u003cTask\u003e store, Ui ui, Task t) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            store.store(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (InstructionAlreadyExistsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // should never reach here!"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showTaskStoreMessage(store.getSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 36
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/FindKeywordInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageSearching;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TextInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class FindKeywordInstruction extends TextInstruction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageSearching\u003cTask\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public FindKeywordInstruction(Command... commands) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void searchStore(Storage\u003cTask\u003e store, Ui ui, String searchTerm) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        int size \u003d store.getSize();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (store.get(i + 1).getTaskDetails().contains(searchTerm)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "                indexes.add(i + 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        SearchTimeInstruction.printTasksToUi(store, ui, indexes);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 32
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/HelloInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.NotStorable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.OneWordInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class HelloInstruction extends OneWordInstruction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements NotStorable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public HelloInstruction(Command... commands) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void printUiMessage(Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showHelloMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/HelpInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.NotStorable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.OneWordInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class HelpInstruction extends OneWordInstruction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements NotStorable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public HelpInstruction(Command... commands) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void printUiMessage(Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showHelpMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/ListInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageReading;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.OneWordInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class ListInstruction extends OneWordInstruction"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageReading\u003cTask\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ListInstruction(Command... commands) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void readStore(Storage\u003cTask\u003e store, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // Prints out all the stored items,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // in order which they were stored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showCustomMessage(IntStream.range(0, store.getSize())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .mapToObj(i -\u003e store.retrieve(i + 1))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .collect(Collectors.joining(\"\\n\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 30
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/MarkDoneInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageModifying;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TwoWordsInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class MarkDoneInstruction extends TwoWordsInstruction"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageModifying\u003cTask\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public MarkDoneInstruction(Command... commands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void modifyStore(Storage\u003cTask\u003e store, Ui ui, int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        store.get(index).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showDone(store.retrieve(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 24
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/MarkNotDoneInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageModifying;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TwoWordsInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class MarkNotDoneInstruction extends TwoWordsInstruction"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageModifying\u003cTask\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public MarkNotDoneInstruction(Command... commands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void modifyStore(Storage\u003cTask\u003e store, Ui ui, int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        store.get(index).markNotDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showNotDone(store.retrieve(index));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 24
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/SearchTimeInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageSearching;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TextInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class SearchTimeInstruction extends TextInstruction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageSearching\u003cTask\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public SearchTimeInstruction(Command... commands) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void searchStore(Storage\u003cTask\u003e store, Ui ui, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // parse the String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "        PrettyTime pt \u003d new PrettyTime(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ArrayList\u003cInteger\u003e indexes \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        int size \u003d store.getSize();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (pt.hasTime()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "                if (store.get(i).getPrettyTime().equals(pt)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    indexes.add(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "                if (store.get(i).getPrettyTime().matchDate(pt)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    indexes.add(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "        printTasksToUi(store, ui, indexes);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Prints a message to the UI, given a list of"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * indexes of a task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param store The store which contains the Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The UI to print to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param indexes The ArrayList of Task indexes"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void printTasksToUi(Storage\u003cTask\u003e store, Ui ui, ArrayList\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (indexes.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showFailedToFind();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "            for (Integer id : indexes) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "                tasks.append(store.retrieve(id)).append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // remove extra new line character"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showFoundTask(tasks.deleteCharAt(tasks.length() - 1).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 67
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/TerminateInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.NotStorable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.OneWordInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TerminateInstruction extends OneWordInstruction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements NotStorable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TerminateInstruction(Command... commands) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void printUiMessage(Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/ThanksInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.NotStorable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.OneWordInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class ThanksInstruction extends OneWordInstruction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements NotStorable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ThanksInstruction(Command... commands) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void printUiMessage(Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showThanksMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/concrete/TodoInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.concrete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.execute.StorageWriting;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.parse.TextInstruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TodoInstruction extends TextInstruction"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "        implements StorageWriting\u003cTask\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TodoInstruction(Command... commands) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void writeToStore(Storage\u003cTask\u003e store, Ui ui, Task t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "            store.store(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (InstructionAlreadyExistsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // should never reach here!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ui.showTaskStoreMessage(store.getSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 30
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/execute/NotStorable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.execute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that represents Instructions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * that do not need to access the Storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface NotStorable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * When given a UI, prints the message that"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * this Instruction would generate"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The UI to print to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void printUiMessage(Ui ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 17
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/execute/StorageModifying.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.execute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that represents Instructions that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * need to modify an item in the Storage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface StorageModifying\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Executes the desired change (writing to the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Storage) given the application\u0027s storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * and UI objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param store The Storage to write to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The Ui to display messages to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param index The index of the item to modify"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void modifyStore(Storage\u003cT\u003e store, Ui ui, int index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 21
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/execute/StorageReading.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.execute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that represents Instructions that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * need to read from the Storage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface StorageReading\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Reads the store and sends a message to the UI,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given the application\u0027s storage and UI objects"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param store The Storage to read"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The Ui to display messages to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void readStore(Storage\u003cT\u003e store, Ui ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 19
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/execute/StorageSearching.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.execute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that represents Instructions that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * need to read from the Storage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface StorageSearching\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Searches the store and sends a message to the UI,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given the application\u0027s storage and UI objects,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * and the search term"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param store The Storage to read"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The Ui to display messages to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void searchStore(Storage\u003cT\u003e store, Ui ui, String searchTerm);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/execute/StorageWriting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.execute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that represents Instructions that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * need to write to the Storage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface StorageWriting\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Executes the desired change (writing to the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Storage) given the application\u0027s storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * and UI objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param store The Storage to write to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ui The Ui to display messages to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param item The item to store in Storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void writeToStore(Storage\u003cT\u003e store, Ui ui, T item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 21
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/parse/AddTaskInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Abstract class for an Instruction that adds a Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * with the strict requirement of a date/time field"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class AddTaskInstruction extends Instruction {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public AddTaskInstruction(Command... commands) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the sub-command of the Instruction (a word"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * that is essential to the Instruction, but"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * occurs only in the middle)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * \u003cp\u003eExample: \"/by\" for \"deadline\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns a String containing only the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     sub-command word"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract String getSubCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String rawCommand, Command command)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (rawCommand.startsWith(command.getWord()))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "                : \"command parse failure in AddTaskInstruction\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String rest \u003d rawCommand.substring(command.getWord().length()).stripLeading();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return new ParsedInstruction(this,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "                formatDesc(rest, command),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "                formatTime(rest));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Method to format the input String"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * properly for a TaskInstruction\u0027s"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param withoutFirst The input String without"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          the first command word"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param command The command that led to this"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                Instruction being run"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns the formatted String description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private String formatDesc(String withoutFirst, Command command)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "        int indexFirst \u003d withoutFirst.indexOf(this.getSubCommand());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (indexFirst \u003d\u003d -1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // could not find sub-command in raw command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new InadequateArgumentsException(command.getWord());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return withoutFirst.substring(0, indexFirst).stripTrailing().stripLeading();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Method to format the input String properly"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * for a TaskInstruction\u0027s time (the argument"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * after sub-command)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param withoutFirst The input String without"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          the first command word"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns the formatted String time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private String formatTime(String withoutFirst) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "        int indexLast \u003d withoutFirst.lastIndexOf(this.getSubCommand());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return withoutFirst.substring(indexLast + Deadline.BY.length())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .stripLeading();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 79
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/parse/OneWordInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Abstract class for an Instruction that consists"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of only one word and no other arguments"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class OneWordInstruction extends Instruction {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public OneWordInstruction(Command... commands) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String rawCommand, Command command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (rawCommand.startsWith(command.getWord()))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "                : \"command parse failure in OneWordInstruction\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return new ParsedInstruction(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 24
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/parse/TextInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Abstract class for an Instruction that consists"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of one fixed word and an unlimited number"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of arguments (the text)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class TextInstruction extends Instruction {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TextInstruction(Command... commands) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String rawCommand, Command command)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (rawCommand.startsWith(command.getWord()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return new ParsedInstruction(this, TextInstruction.checkForNonEmpty("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "                rawCommand.substring(command.getWord().length()).stripLeading(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "                command));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Static method to check and throw an Exception"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * if raw command for TextInstruction is empty"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * (only contains whitespace)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param rawCommand The String to be checked"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param orig The original Command identified"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             by the CommandParser"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns the same String, unchanged"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @throws InadequateArgumentsException When the String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         is an empty String"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static String checkForNonEmpty(String rawCommand, Command orig)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (rawCommand.isBlank()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new InadequateArgumentsException(orig.getWord());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return rawCommand;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alcen": 52
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/parse/ThreeWordsInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Abstract class for an Instruction that consists"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of one fixed word and two more words as"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * its two arguments"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class ThreeWordsInstruction extends Instruction {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ThreeWordsInstruction(Command... commands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String rawCommand, Command command)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException, TooManyArgumentsException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (rawCommand.startsWith(command.getWord()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String[] words \u003d rawCommand.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (words.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return new ParsedInstruction(this, words[1], words[2]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (words.length \u003c 3) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.out.println(command.getWord());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new InadequateArgumentsException(command.getWord());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new TooManyArgumentsException(command.getWord());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 34
    }
  },
  {
    "path": "src/main/java/bot/command/instruction/parse/TwoWordsInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.command.instruction.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.Instruction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Abstract class for an Instruction that consists"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of one fixed word and one more word as"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * its single argument"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class TwoWordsInstruction extends Instruction {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TwoWordsInstruction(Command... commands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(commands);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ParsedInstruction parse(String rawCommand, Command command)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InadequateArgumentsException, TooManyArgumentsException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assert (rawCommand.startsWith(command.getWord()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String[] words \u003d rawCommand.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (words.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return new ParsedInstruction(this, words[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.out.println(command.getWord());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new InadequateArgumentsException(command.getWord());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new TooManyArgumentsException(command.getWord());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 34
    }
  },
  {
    "path": "src/main/java/bot/gui/Baron.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Executor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.AliasStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.TaskStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.UnknownInstructionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.TerminateInstruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Baron is an intermediary between the Parser,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Executor and the GUI, similar to how bot.Duke is"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the intermediary between the Parser, Executor"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": " * and Ui (for the command line application)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Baron {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final CommandParser parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Executor executor;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final GraphicalUi graphUi;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a new Baron."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *  @param comParse The CommandParser to parse"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                 text entered by the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param gui The GUI of the Bot, to display messages"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskStore The TaskStorage to save Tasks to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tasksDiskLoc The LoadAndSave representing location"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "*                          of the file on disk to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                     save Tasks data to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param aliasStore The AliasStorage to save aliases to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param aliasDiskLoc The LoadAndSave representing location"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                     of the file on disk to save"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                     alias data to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Baron("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "            CommandParser comParse,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "            GraphicalUi gui, TaskStorage taskStore,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "            LoadAndSave\u003cTask\u003e tasksDiskLoc,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            AliasStorage aliasStore,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            LoadAndSave\u003cPair\u003cString, String\u003e\u003e aliasDiskLoc) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.parser \u003d comParse;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.graphUi \u003d gui;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.executor \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new Executor(this.graphUi, taskStore, tasksDiskLoc, aliasStore, aliasDiskLoc);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // show welcome message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.graphUi.showInitial();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // load stored items"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "        taskStore.importFromCollection(tasksDiskLoc.loadFromDisk());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "        aliasStore.importFromCollection(aliasDiskLoc.loadFromDisk());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Receives the input from the application,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * then carries out the necessary actions"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * in response"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param input String containing raw user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *              input"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void receiveInput(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.graphUi.showUserChat(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ParsedInstruction instr;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // parse the instruction"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "            instr \u003d parser.parse(input);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (InadequateArgumentsException | TooManyArgumentsException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "                | UnknownInstructionException e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.graphUi.showError(e);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // execute the instruction"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (!executor.execute(instr)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // should be exit instruction"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "            assert (instr.getInstruction() instanceof TerminateInstruction)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    : \"execution failure: unknown instruction\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // exit after 0.5 seconds"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Executors.newScheduledThreadPool(1)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .schedule(() -\u003e System.exit(0),750, TimeUnit.MILLISECONDS);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 101
    }
  },
  {
    "path": "src/main/java/bot/gui/ChatBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that describes a ChatBox component"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": " * used in the GUI (appears when the user enters"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": " * a command, to contain the user\u0027s command and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the bot\u0027s reply)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \u003cp\u003eAdapted from DialogBox in JavaFX tutorial found at"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": " * https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class ChatBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static Image USER_IMAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static Image BOT_IMAGE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private Text text;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a custom HBox, for use"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * in 4LC3N-BOT\u0027s GUI"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param text String representing text to be"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             shown in the ChatBox"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param img Image of the user who would"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *            generate the text"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ChatBox(String text, Image img) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    MainWindow.class.getResource(\"/view/ChatBox.fxml\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // give this ChatBox its text and image"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.text.setText(text);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Moves this ChatBox to the left instead"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the Text element of this ChatBox"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Text element"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Text getText() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.text;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Formats this ChatBox to the right. To be used"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * for user input"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param s The string containing the text"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A new ChatBox, formatted to the right"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static ChatBox getUserBox(String s) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return new ChatBox(s, ChatBox.USER_IMAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Formats this ChatBox to the left. To be used"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * for bot output"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param s The String containing the text"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A new ChatBox, formatted to the left"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static ChatBox getBotBox(String s) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox chat \u003d new ChatBox(s, ChatBox.BOT_IMAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "        chat.flip();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return chat;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Sets the user\u0027s image for all ChatBoxes"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param img The image to be set as the"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *           user image"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void setUserImage(Image img) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox.USER_IMAGE \u003d img;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Sets the bot\u0027s image for all ChatBoxes"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param img The image to be set as the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *           bot image"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void setBotImage(Image img) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox.BOT_IMAGE \u003d img;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 121
    }
  },
  {
    "path": "src/main/java/bot/gui/GraphicalUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that is used by the internal bot classes,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * in order to send messages to the JavaFX GUI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class GraphicalUi extends Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GREETINGS \u003d \"Hello world!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GREETINGS_MESSAGE \u003d \"Hello! I love you! \u003c3\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String VERSION \u003d Ui.VERSION;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String LOAD \u003d \"LOADING ... ... ...\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String DELETED_MESSAGE \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Garbage cleared successfully.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\nTake one last look at what I deleted:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String INITIAL_MESSAGE \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"4LC3N-BOT initialised.\\nGreetings, humans!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String AWAITING_MESSAGE \u003d \"\\n\u003e ENTER your input:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"You have completed:\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String NOT_DONE_MESSAGE \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Status of task has been set to not done:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String FAILED_TO_FIND_MESSAGE \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Sorry, could not find anything matching that!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String NO_TASKS_MESSAGE \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"You have no tasks to show!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String FOUND_TASK_MESSAGE \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"I have found these tasks!\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String STORE_MESSAGE_ONE \u003d \"I have stored this task in my memory. Use\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \" \\\"list\\\" to retrieve it!\\nTotal of \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String STORE_MESSAGE_TWO \u003d \" tasks stored\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d \"Goodbye! You will be missed\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String LOAD_FROM_DISK_FAIL_MESSAGE \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Could not find local storage\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String THANKS_MESSAGE \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Ui.THANKS_MESSAGE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String ALIAS_MESSAGE_ONE \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Ui.ALIAS_MESSAGE_ONE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String ALIAS_MESSAGE_TWO \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Ui.ALIAS_MESSAGE_TWO;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String ALIAS_MESSAGE_THREE \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Ui.ALIAS_MESSAGE_THREE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String HELP_MESSAGE \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"Here is a list of words that I understand:\\n\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"alias    | Allows the command \u003ccmd\u003e\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003ccmd\u003e    | to be substituted by the\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cname\u003e   | word \u003cname\u003e with the\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | exact same usage\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"bye      | Terminates the bot\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"deadline | Creates a new deadline with\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003ctext\u003e   | description \u003ctext\u003e and date\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"/by      | \u003cdate\u003e.\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cdate\u003e   |\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | Date can be given in\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | this format: \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | 24-hour format\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"delete   | Deletes task on the list\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cn\u003e      | with index n\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"done     | Marks a task with index\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cn\u003e      | n as done\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"event    | Creates a new event with\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003ctext\u003e   | description \u003ctext\u003e and date\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"/at      | \u003cdate\u003e.\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cdate\u003e   |\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | Date can be given in\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | this format: \\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | 24-hour format\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"ex/exi/  | Terminates the bot.\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"exit     | \\\"i\\\" and \\\"it\\\" optional\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"find     | Finds tasks with that word\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cword\u003e   | in the description\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"hello    | Hello!\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"help     | Shows this help message\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"list     | Shows the list of tasks\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"notdone  | Marks a task with index\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cn\u003e      | n as NOT done\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"search   | Finds tasks with that date\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003cdate\u003e   |\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | Date can be given in\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | this format: \\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | DD-MM-YYYY-tttt\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | where tttt is the time in\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | 24-hour format\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         |\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | or this format: DD-MM-YYYY\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"thanks   | It\u0027s good to be\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"         | appreciated!\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"todo     | Creates a new to-do with\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\u003ctext\u003e   | description \u003ctext\u003e\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private ObservableList\u003cNode\u003e chatWindow;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public GraphicalUi(ObservableList\u003cNode\u003e window) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow \u003d window;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showGreetings() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.GREETINGS));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showVersion() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.VERSION));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showLoading() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.LOAD));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showInitial() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.INITIAL_MESSAGE));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showAwaiting() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.AWAITING_MESSAGE));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDone(String doneTask) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.DONE_MESSAGE + doneTask));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showNotDone(String undoneTask) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.NOT_DONE_MESSAGE + undoneTask));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(e.getMessage()));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDeleted(String deletedItem) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.DELETED_MESSAGE"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + deletedItem));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showFailedToFind() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.FAILED_TO_FIND_MESSAGE));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showFoundTask(String tasks) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.FOUND_TASK_MESSAGE + tasks));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showDiskLoadFail() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.LOAD_FROM_DISK_FAIL_MESSAGE));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showTaskStoreMessage(int storeSize) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.STORE_MESSAGE_ONE"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + storeSize + GraphicalUi.STORE_MESSAGE_TWO));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showNoTasksMessage() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.NO_TASKS_MESSAGE));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showCustomMessage(String message) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(message));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showHelpMessage() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox helpBox \u003d ChatBox.getBotBox(GraphicalUi.HELP_MESSAGE);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alcen"
        },
        "content": "        helpBox.getText().fontProperty().set(Font.font(\"Monospaced\", 11));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(helpBox);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showHelloMessage() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.GREETINGS_MESSAGE));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.GOODBYE_MESSAGE));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showThanksMessage() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.THANKS_MESSAGE));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showAliasMessage(String originalName, String aliasedName) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getBotBox(GraphicalUi.ALIAS_MESSAGE_ONE + aliasedName"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + GraphicalUi.ALIAS_MESSAGE_TWO + originalName"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + GraphicalUi.ALIAS_MESSAGE_THREE));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Shows the user\u0027s input as a ChatBox aligned"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * to the right of the interface"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param userInput String represent raw text"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                  of user input"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void showUserChat(String userInput) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.chatWindow.add(ChatBox.getUserBox(userInput));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 244
    }
  },
  {
    "path": "src/main/java/bot/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A minimal class that starts the JavaFX GUI,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to avoid classpath issues"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \u003cp\u003eAdapted from Launcher in JavaFX tutorial found at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Starts the JavaFX application, opening"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * a new window for the GUI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param args Command line arguments"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static void start(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 22
    }
  },
  {
    "path": "src/main/java/bot/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.AliasLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.AliasStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.store.TaskStorage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.TasksToDisk;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": " * The Main class extends the FXML application,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": " * and it is called by the Launcher to start"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the graphical user interface in a window"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \u003cp\u003eAdapted from Main in JavaFX tutorial found at"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": " * https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setBaron("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    new Baron("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new CommandParser(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new GraphicalUi(fxmlLoader"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    .\u003cMainWindow\u003egetController()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    .getChatContainer()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    .getChildren()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            ),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new TaskStorage(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new TasksToDisk("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    Duke.FILE_DIRECTORY,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    Duke.FILE_NAME_TASKS"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            ),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new AliasStorage(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            new AliasLoader("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    Duke.FILE_DIRECTORY,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    Duke.FILE_NAME_ALIASES"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            ))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "            );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 62
    }
  },
  {
    "path": "src/main/java/bot/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * MainWindow is the class that provides the layout"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " * for the other components of 4LC3N-BOT\u0027s"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": " * graphical user interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \u003cp\u003eAdapted from MainWindow in JavaFX tutorial found at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " * https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private VBox chatContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private Button enterButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private Baron baron;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private Image userImage \u003d new Image("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private Image botImage \u003d new Image("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Initialises the MainWindow. This also sets the"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * user image and the bot image used for the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * ChatBoxes"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "        scrollPane.vvalueProperty().bind(chatContainer.heightProperty());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox.setUserImage(this.userImage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ChatBox.setBotImage(this.botImage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Sets the Baron for the MainWindow, to allow access"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * to the CommandParser,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param br The Baron to be set"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void setBaron(Baron br) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.baron \u003d br;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the user input from the text box, and then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * creates ChatBoxes to show the user input. The"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * user input is also given to Baron to generate"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the bot\u0027s response, and the bot\u0027s response"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * will also be shown in a ChatBox"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "        baron.receiveInput(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the VBox in the MainWindow that holds all"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the chat boxes (also known as chat container)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public VBox getChatContainer() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.chatContainer;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 79
    }
  },
  {
    "path": "src/main/java/bot/loadsave/AliasLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.loadsave;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.AliasInstruction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.ClosedScanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that handles saving and loading"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of aliased commands from the disk"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class AliasLoader extends LoadAndSave\u003cPair\u003cString, String\u003e\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static final String DEFAULT_ALIASES \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \"alias a\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"bye b\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"deadline d\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"delete de\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"done do\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"event e\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"find f\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"help h\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"list l\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"notdone n\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"search s\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            + \"todo t\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a new AliasLoader for the"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given file directory and name"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fd Location of the file on the system"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fn Name of the file in the directory"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @throws FileNotFoundException When file directory"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     or file name is invalid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public AliasLoader(String fd, String fn) throws FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(fd, fn, AliasLoader.DEFAULT_ALIASES);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ArrayList\u003cPair\u003cString, String\u003e\u003e loadFromDisk() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ArrayList\u003cPair\u003cString, String\u003e\u003e storedAliases \u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new ArrayList\u003cPair\u003cString, String\u003e\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Scanner io \u003d super.getToLoadFrom()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .map(fr -\u003e new Scanner(fr))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .orElseGet(() -\u003e ClosedScanner.getClosedScanner());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "        while (io.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String originalName \u003d io.next();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String aliasedName;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "                aliasedName \u003d io.next();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "                // possible corrupted file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "            storedAliases.add(new Pair\u003cString, String\u003e(originalName, aliasedName));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return storedAliases;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void saveToDisk(Collection\u003cPair\u003cString, String\u003e\u003e aliases) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "        StringBuilder toBeSaved \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "        for (Pair\u003cString, String\u003e alias : aliases) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // use line breaks to separate each alias"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "            toBeSaved.append(alias.getFirst())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(\" \")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(alias.getSecond())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(\"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "        FileSaver.saveStringAsFile(super.getRelativeAddress(), toBeSaved);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 83
    }
  },
  {
    "path": "src/main/java/bot/loadsave/DummyLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.loadsave;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that provides a concrete implementation"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * of a LoadAndSave, but does nothing. Used when"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " * there are problems in accessing the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * file directory or file name"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * @param \u003cT\u003e Type of objects to load and save"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class DummyLoader\u003cT\u003e extends LoadAndSave\u003cT\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public DummyLoader() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Dummy method to return an empty ArrayList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return An empty ArrayList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ArrayList\u003cT\u003e loadFromDisk() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return new ArrayList\u003cT\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Does absolutely nothing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param items A Collection of items to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *              be \"saved\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void saveToDisk(Collection\u003cT\u003e items) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // this is a dummy implementation and"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // hence saveToDisk does nothing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 40
    }
  },
  {
    "path": "src/main/java/bot/loadsave/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.loadsave;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface containing one static method,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to assist in saving a String to the disk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface FileSaver {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Saves a String as a file, to the given"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * relative address"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param toBeSaved The StringBuilder containing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                  the String to be saved"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    static void saveStringAsFile(String relativeAddress, StringBuilder toBeSaved) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        File saveLocation \u003d new File(relativeAddress);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    new FileWriter(saveLocation)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "            );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            writer.write(toBeSaved.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // error in writing to file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.err.println(\"IOException2\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 34
    }
  },
  {
    "path": "src/main/java/bot/loadsave/LoadAndSave.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.loadsave;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class LoadAndSave handles loading and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": " * saving of data from the disk"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " * @param \u003cT\u003e Type of data stored at the"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " *           file name and directory provided"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class LoadAndSave\u003cT\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final String fileDirectory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Optional\u003cFileReader\u003e toLoadFrom;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructs a new LoadAndSave with the desired"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * file directory and file name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fd Location of the file on the system"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fn Name of the file in the directory"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param def String representing the default data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                to be loaded if file is not found"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @throws FileNotFoundException When file directory"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     or file name is invalid"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public LoadAndSave(String fd, String fn, String def)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws FileNotFoundException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.fileDirectory \u003d fd;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.fileName \u003d fn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String fullAddress \u003d LoadAndSave.getFullFileAddress(fd, fn);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        FileReader fileLocation;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "            fileLocation \u003d new FileReader(fullAddress);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // try to create required directories and file name"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "            File desiredDirectory \u003d new File(fd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            File desiredLocation \u003d new File(fullAddress);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (!desiredLocation.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "                System.out.println(bot.Ui.LOAD_FROM_DISK_FAIL_MESSAGE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    desiredDirectory.mkdirs();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    desiredLocation.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    // error in creating new file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    throw new FileNotFoundException("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            \"File not found, could not create\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "                                    + \" file at \" + fullAddress"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "                FileSaver.saveStringAsFile(fullAddress, new StringBuilder(def));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "                fileLocation \u003d new FileReader(fullAddress);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.toLoadFrom \u003d Optional.of(fileLocation);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a dummy LoadAndSave, to be"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * used only by DummyLoader"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "    protected LoadAndSave() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.fileDirectory \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.fileName \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.toLoadFrom \u003d Optional.empty();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Loads the stored items from the given"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * file directory and name"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return ArrayList containing the stored items"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract ArrayList\u003cT\u003e loadFromDisk();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Saves a given Collection of items to the"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given file directory and name (overwriting"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the previous content!)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param items The items to be saved"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract void saveToDisk(Collection\u003cT\u003e items);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the file directory provided originally"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing file directory"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getFileDirectory() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.fileDirectory;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the file name provided originally"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing file name"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getFileName() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.fileName;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the full relative address of the file, from"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the given file directory and file name"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing full relative"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     file address"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getRelativeAddress() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return LoadAndSave.getFullFileAddress(this.fileDirectory, this.fileName);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the Optional{@literal \u003cFileReader\u003e} that"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * may contain the FileReader which reads from"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the given file directory and name"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A FileReader that reads the file"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Optional\u003cFileReader\u003e getToLoadFrom() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.toLoadFrom;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the full file address relative to the"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * current location"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param directory String representing file directory"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param name String representing file name"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing full file address"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static String getFullFileAddress(String directory, String name) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return directory + \"/\" + name;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 149
    }
  },
  {
    "path": "src/main/java/bot/loadsave/TasksToDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.loadsave;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.ClosedScanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that handles saving and"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": " * loading of Tasks from the disk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TasksToDisk extends LoadAndSave\u003cTask\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a new TasksToDisk for the"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given file directory and name"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fd Location of the file on the system"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param fn Name of the file in the directory"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @throws FileNotFoundException When file directory"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     or file name is invalid"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public TasksToDisk(String fd, String fn) throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(fd, fn, \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Loads the stored tasks from the given"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * file directory and name"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return ArrayList containing the stored tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromDisk() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Scanner io \u003d super.getToLoadFrom()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .map(fr -\u003e new Scanner(fr))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "                .orElseGet(() -\u003e ClosedScanner.getClosedScanner());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "        while (io.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // main loop to load each saved task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String typeAndDone \u003d io.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "            Task currentTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            boolean isCompleted;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (typeAndDone.startsWith(Deadline.TYPE)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "                currentTask \u003d new Deadline("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        io.nextLine(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        new PrettyTime(io.nextLine())"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "                );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "                isCompleted \u003d getCompletionStatus(typeAndDone, Deadline.TYPE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else if (typeAndDone.startsWith(Event.TYPE)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "                currentTask \u003d new Event("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        io.nextLine(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        new PrettyTime(io.nextLine())"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "                );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "                isCompleted \u003d getCompletionStatus(typeAndDone, Event.TYPE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else if (typeAndDone.startsWith(Todo.TYPE)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "                currentTask \u003d new Todo(io.nextLine());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "                io.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "                isCompleted \u003d getCompletionStatus(typeAndDone, Todo.TYPE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "                // unknown task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "                // System.out.println(\"Unknown task found!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (isCompleted) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "                currentTask.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "            storedTasks.add(currentTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return storedTasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Saves a given Collection of Tasks to the"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * given file directory and name (overwriting"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the previous content!)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tasksList The Tasks to be saved"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void saveToDisk(Collection\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "        StringBuilder toBeSaved \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        for (Task task : tasksList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // use line breaks to separate the tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "            toBeSaved.append(task.getType())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(task.isDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(\"\\n\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(task.getTaskDetails())"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(\"\\n\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(task.getPrettyTime().toRaw())"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "        FileSaver.saveStringAsFile(super.getRelativeAddress(), toBeSaved);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * A method to get the completion status for a Task, given"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the raw String containing the line taken from the save file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * that contains said completion status, along with the"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Task type"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param typeAndDone Raw line from the save file containing"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                    Task type and completion status"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param type String representation of Task type"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns true, if the task is done"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private static boolean getCompletionStatus(String typeAndDone, String type) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Integer.parseInt("
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "                Character.toString(typeAndDone.charAt(type.length()))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "                ) \u003d\u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 128
    }
  },
  {
    "path": "src/main/java/bot/store/AliasStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.concrete.AliasInstruction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.Pair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that stores aliased commands while"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the bot is running. Aliased commands are"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": " * represented by a Pair of Strings, where"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the first String is the original name and"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the second String is the aliased name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class AliasStorage implements Storage\u003cPair\u003cString, String\u003e\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final ArrayList\u003cPair\u003cString, String\u003e\u003e storedAliases \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "            new ArrayList\u003cPair\u003cString, String\u003e\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    // maps an alias to the original name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    // (second in pair to first in pair)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003cString, String\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (i \u003e 0 \u0026\u0026 i \u003c\u003d this.getSize()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // index not out of bounds"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.storedAliases.remove(i - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Pair\u003cString, String\u003e get(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e this.getSize()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // an empty alias"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return new Pair\u003cString, String\u003e(\"\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.storedAliases.get(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.storedAliases.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void importFromCollection(Collection\u003cPair\u003cString, String\u003e\u003e aliases) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "        for (Pair\u003cString, String\u003e alias : aliases) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            String aliasedName \u003d alias.getSecond();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (CommandParser.INSTR_MAP.containsKey(aliasedName)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    || this.aliasMap.containsKey(aliasedName)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "                // the alias is already in use"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "                System.err.println(\"import error: \" + aliasedName"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        + \"is already a name\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "                this.storedAliases.add(alias);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "                String originalName \u003d alias.getFirst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "                this.aliasMap.put(aliasedName, originalName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "                AliasInstruction.addAliasedName(originalName, aliasedName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String retrieve(int i) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (i \u003c\u003d 0 || i \u003e this.getSize()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // index out of bounds"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return i + \". \" + this.get(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void saveToDisk(LoadAndSave\u003cPair\u003cString, String\u003e\u003e aliasLoader) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "        aliasLoader.saveToDisk(this.storedAliases);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void store(Pair\u003cString, String\u003e aliasPair)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throws InstructionAlreadyExistsException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String aliasedName \u003d aliasPair.getSecond();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (CommandParser.INSTR_MAP.containsKey(aliasedName)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "                || this.aliasMap.containsKey(aliasedName)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // the alias is already in use"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            throw new InstructionAlreadyExistsException(aliasedName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.storedAliases.add(aliasPair);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.aliasMap.put(aliasedName, aliasPair.getFirst());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 101
    }
  },
  {
    "path": "src/main/java/bot/store/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Implementation of a generic item storage to be"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * used in 4LC3N-BOT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * @param \u003cT\u003e The type of items stored"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Stores an item in Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param toStore The item to be stored"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void store(T toStore) throws InstructionAlreadyExistsException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Saves the content of this Storage to"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the disk"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param disk The LoadAndSave handling loading"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *             from and writing to disk"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void saveToDisk(LoadAndSave\u003cT\u003e disk);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets an entry from the stored"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * items (at index i)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param i Index of the item as it appears"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          in the storage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    T get(int i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Retrieves an entry from the stored"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * items (at index i)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param i Index of the item as it"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          appears in the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A String representing the item"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    String retrieve(int i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Removes an entry from the stored"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * items (at index i)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param i Index of the item as it appears"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          in the storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void delete(int i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the number of items stored here"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Returns an Integer representing"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     number of stored items"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "    int getSize();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Adds items from a Collection into this Storage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param items The Collection to add from"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    void importFromCollection(Collection\u003cT\u003e items);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 73
    }
  },
  {
    "path": "src/main/java/bot/store/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.loadsave.LoadAndSave;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class to handle stored items within the bot,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " * and mark them as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TaskStorage implements Storage\u003cTask\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Adds tasks from a Collection into this TaskStorage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tasks The Collection to add from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void importFromCollection(Collection\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        storedTasks.addAll(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Adds a String to the stored items"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param toStore The Task to be stored"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void store(Task toStore) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.storedTasks.add(toStore);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the Task that appears at index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * in the stored Tasks list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param index Index of the Task as it appears"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          in the storage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e this.getSize()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // a placeholder task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return new Todo(\"index out of bounds\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.storedTasks.get(index - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Retrieves an entry from the stored"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * items (at index i)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param i Index of the item as it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          appears in the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A String representing the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         item, its position on the list,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         and its \"done\" status"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String retrieve(int i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (i \u003c\u003d 0 || i \u003e this.getSize()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // index out of bounds"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return i + \". \" + this.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the number of Tasks currently logged."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return int representing number of Tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.storedTasks.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Removes an entry from the stored"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * items (at index i)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param i Index of the item as it appears"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          in the list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (i \u003e 0 \u0026\u0026 i \u003c\u003d this.getSize()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // index not out of bounds"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.storedTasks.remove(i - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Attempts to save the stored items"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * to a file on the local system"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param ttd The LoadAndSave containing the"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *            correct file directory and name"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *            to save Tasks to"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void saveToDisk(LoadAndSave\u003cTask\u003e ttd) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ttd.saveToDisk(this.storedTasks);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 111
    }
  },
  {
    "path": "src/main/java/bot/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class that represents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \"Deadline\" type Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String BY \u003d \"/by \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Deadline Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param td String representing the Deadline description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tt String representing the Deadline time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Deadline(String td, String tt) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this(td, new PrettyTime(tt));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Deadline Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskDesc Description of the Deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskTime Time of the actual Deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Deadline(String taskDesc, PrettyTime taskTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(taskDesc, taskTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Deadline.TYPE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getTimeVerb(String rawTime) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return \"(by: \" + rawTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 42
    }
  },
  {
    "path": "src/main/java/bot/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class that represents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \"Event\" type Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String AT \u003d \"/at \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static final String TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Deadline Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param td String representing the Event description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tt String representing the Event time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Event(String td, String tt) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this(td, new PrettyTime(tt));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Event Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskDesc Description of the Event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param taskTime Time of the Event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Event(String taskDesc, PrettyTime taskTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(taskDesc, taskTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Event.TYPE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getTimeVerb(String rawTime) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return \"(at: \" + rawTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 42
    }
  },
  {
    "path": "src/main/java/bot/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class that represents Tasks within"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * the bot, to be stored in TaskStorage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private String taskDetails;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private PrettyTime taskTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private boolean doneStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param td String that represents what"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *           was entered to create the Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param tt PrettyTime that represents a time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *           associated with the Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Task(String td, PrettyTime tt) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.taskDetails \u003d td;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.taskTime \u003d tt;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Mark this task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.doneStatus \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Mark this task as NOT done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void markNotDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Checks if this Task is completed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return True if Task was previously marked as"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         done. False if it was never marked"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.doneStatus;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the details of the Task, usually a"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * short description"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String containing the details"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.taskDetails;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Checks the status of this Task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return A String with a tick character"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *         or a cross character"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private String getDoneString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gives the type of the current Task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * as a single letter"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return Type of the Task as a String"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gives an appropriate verb to use before"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the time of the Task is displayed"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param rawTime The original String"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *                representing Task time"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing time with"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     the appropriate formatting for the"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     type of Task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public abstract String getTimeVerb(String rawTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gives the time of the current Task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return PrettyTime representing time"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     of the Task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public PrettyTime getPrettyTime() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.taskTime;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return \"[\" + this.getType() + \"]\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + this.getDoneString() + \" \" + this.taskDetails + \" \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + this.getTimeVerb(this.taskTime.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 113
    }
  },
  {
    "path": "src/main/java/bot/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.util.PrettyTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Class that represents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * \"To-do\" type Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public static String TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a To-do Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param td String representing description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *           of this To-do Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Todo(String td) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "        super(td, new PrettyTime(\"\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return Todo.TYPE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String getTimeVerb(String rawTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // no timeVerb as To-do Tasks are"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        // not associated with a time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 33
    }
  },
  {
    "path": "src/main/java/bot/util/ClosedScanner.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * An interface that contains a static method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * to get a closed Scanner (Scanner that has"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " * no output)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "public interface ClosedScanner {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * A method that returns a closed Scanner,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * which is a Scanner that has no output"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return The closed Scanner."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    static Scanner getClosedScanner() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Scanner sc \u003d new Scanner(\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return sc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 22
    }
  },
  {
    "path": "src/main/java/bot/util/Pair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " * A class the represents a pair of objects"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": " * @param \u003cT\u003e The type of the first object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " * @param \u003cU\u003e The type of the second object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class Pair\u003cT, U\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final T first;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final U second;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a Pair"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param f The object to be set as"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          the Pair\u0027s first object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param s The object to be set as"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          the Pair\u0027s second object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public Pair(T f, U s) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.first \u003d f;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        this.second \u003d s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the first Object in this Pair."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return The first Object, with type T"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public T getFirst() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.first;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Gets the second Object in this Pair."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return The second Object, with type U"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public U getSecond() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.second;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return \"(\" + this.first.toString() + \", \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "                + this.second.toString() + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 49
    }
  },
  {
    "path": "src/main/java/bot/util/PrettyTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "package bot.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Custom class that represents time of a Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " * Task or Event Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class PrettyTime implements Comparable\u003cPrettyTime\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Optional\u003cString\u003e rawText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Optional\u003cInteger\u003e time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    private final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Constructor for a PrettyTime, using a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * String with date in this format:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * DD-MM-YYYY-tttt, e.g. 5-12-2020-1300 to refer"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * to 5th December 2020, 1 pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param s The String in DD-MM-YYYY format, or"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *          DD-MM-YYYY-tttt format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public PrettyTime(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String[] split \u003d s.split(\"-\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "        boolean splitSuccessful \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String month \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "        String year \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": "            date \u003d split[0].length() \u003d\u003d 2 ? split[0] : \"0\" + split[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "            month \u003d split[1].length() \u003d\u003d 2 ? split[1] : \"0\" + split[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "            year \u003d split[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "            splitSuccessful \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "        LocalDate parsedDate \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        boolean parseSuccessful \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (splitSuccessful) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "                parsedDate \u003d LocalDate.parse(year + \"-\" + month + \"-\" + date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "                parseSuccessful \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (splitSuccessful \u0026\u0026 parseSuccessful) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.date \u003d Optional.of(parsedDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.rawText \u003d Optional.empty();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "            int parsedTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "            boolean timeSuccessful \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "                parsedTime \u003d Integer.parseInt(split[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": "                if (split[3].length() !\u003d 4) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    timeSuccessful \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    int minutes \u003d Integer.parseInt(split[3].substring(2));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    if (minutes \u003c 0 || minutes \u003e 60) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "                        timeSuccessful \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "                parsedTime \u003d -1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (parsedTime \u003c 0 || parsedTime \u003e 2359) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "                timeSuccessful \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (timeSuccessful) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "                this.time \u003d Optional.of(parsedTime);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "                this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.rawText \u003d Optional.of(s);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "            this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Checks whether this PrettyTime has a LocalDate"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * representation."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return True, if there exists the LocalDate"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     representation."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean hasLocalDate() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.date.isPresent();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Checks whether this PrettyTime actually has"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * a value for time, apart from the date. The time"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * can only exist if the LocalDate exists"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return True, if there exists a time (which"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     would also imply that the date exists)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.time.isPresent();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Generates a String representing this"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * PrettyTime in the same format in which"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * it was entered (DD-MM-YYYY-tttt, if"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * the LocalDate representation exists)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return String representing date and time"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     in DD-MM-YYYY-tttt format, if possible"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String toRaw() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.date.map("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alcen"
        },
        "content": "            date -\u003e date.format(DateTimeFormatter.ofPattern(\"dd-MM-y\"))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    + this.time.map(t -\u003e \"-\" + String.format(\"%04d\", t))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .orElse(\"\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ).orElseGet("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alcen"
        },
        "content": "                () -\u003e this.rawText.orElse(\"\")"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alcen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public int compareTo(PrettyTime pt) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (this.hasLocalDate() \u0026\u0026 pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // if date is the same, check the time"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (this.date.get().equals(pt.date.get())) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alcen"
        },
        "content": "                return this.time.get().compareTo(pt.time.get());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alcen"
        },
        "content": "                return this.date.get().compareTo(pt.date.get());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (!this.hasLocalDate() \u0026\u0026 !pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.rawText.get().compareTo(pt.rawText.get());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (this.hasLocalDate() \u0026\u0026 !pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alcen"
        },
        "content": "            // !this.hasLocalDate() \u0026\u0026 pt.hasLocalDate()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (o instanceof PrettyTime) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alcen"
        },
        "content": "            PrettyTime pt \u003d (PrettyTime) o;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alcen"
        },
        "content": "            if (this.hasLocalDate() \u0026\u0026 pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alcen"
        },
        "content": "                if (this.hasTime() \u0026\u0026 pt.hasTime()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    return this.date.get().equals(pt.date.get())"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alcen"
        },
        "content": "                            \u0026\u0026 this.time.get().equals(pt.time.get());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alcen"
        },
        "content": "                } else if (!this.hasLocalDate() \u0026\u0026 !pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    return this.date.get().equals(pt.date.get());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alcen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alcen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else if (!this.hasLocalDate() \u0026\u0026 !pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alcen"
        },
        "content": "                return this.rawText.get().equals(pt.rawText.get());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alcen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alcen"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alcen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * Checks whether this PrettyTime has the same"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * date as another PrettyTime. Time is ignored"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @param pt The PrettyTime to match to"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alcen"
        },
        "content": "     * @return True, if both PrettyTimes have the"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alcen"
        },
        "content": "     *     same date"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alcen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public boolean matchDate(PrettyTime pt) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alcen"
        },
        "content": "        if (this.hasLocalDate() \u0026\u0026 pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.date.get().equals(pt.date.get());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else if (!this.hasLocalDate() \u0026\u0026 !pt.hasLocalDate()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return this.rawText.get().equals(pt.rawText.get());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alcen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alcen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alcen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alcen"
        },
        "content": "        return this.date.map("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alcen"
        },
        "content": "            date -\u003e date.format(DateTimeFormatter.ofPattern(\"d MMMM y\"))"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    + this.time.map(t -\u003e \", at \" + String.format(\"%04d\", t))"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alcen"
        },
        "content": "                    .orElse(\"\")"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ).orElseGet("
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alcen"
        },
        "content": "                () -\u003e this.rawText.orElse(\"\")"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alcen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 202
    }
  },
  {
    "path": "src/main/resources/view/ChatBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "    Adapted from DialogBox.fxml in JavaFX tutorial found at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "--\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cText fx:id\u003d\"text\" text\u003d\"Label\" wrappingWidth\u003d\"270.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "alcen": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "    Adapted from MainWindow.fxml in JavaFX tutorial found at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "    https://github.com/se-edu/duke/tree/master/tutorials"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "--\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bot.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cButton fx:id\u003d\"enterButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "                \u003cVBox fx:id\u003d\"chatContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "alcen": 23
    }
  },
  {
    "path": "src/test/java/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.CommandParser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.TooManyArgumentsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.UnknownInstructionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.instruction.ParsedInstruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Test(expected \u003d UnknownInstructionException.class)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void parse_randomWords_exceptionThrown() throws InadequateArgumentsException,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "            UnknownInstructionException, TooManyArgumentsException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        new CommandParser().parse(\"beehive valley spring darkness\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void parse_event_success() throws InadequateArgumentsException,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": "            UnknownInstructionException, TooManyArgumentsException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser comParse \u003d new CommandParser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ParsedInstruction parsed \u003d comParse.parse(\"event party /at my place\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertEquals(parsed.getInstruction(), CommandParser.ALL_INSTRUCTIONS[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertEquals(parsed.getArguments(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new ArrayList\u003cString\u003e(Arrays.asList(\"party\", \"my place\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void parse_deadline_success() throws InadequateArgumentsException,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "            UnknownInstructionException, TooManyArgumentsException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": "    {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "        CommandParser comParse \u003d new CommandParser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "        ParsedInstruction parsed \u003d comParse.parse("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "                \"deadline project /by 7-11-2013-1400\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertEquals(parsed.getInstruction(), CommandParser.ALL_INSTRUCTIONS[0]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertEquals(parsed.getArguments(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "                new ArrayList\u003cString\u003e(Arrays.asList(\"project\", \"7-11-2013-1400\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 46
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.command.exception.InadequateArgumentsException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "import bot.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void createTodo_withDescription_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Todo td \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertEquals(td.getTaskDetails(), \"return book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "    public void markAsDone_newTodo_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "        Todo td \u003d new Todo(\"buy groceries\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertFalse(td.isDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": "        td.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "        assertTrue(td.isDone());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alcen": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N v1.0.1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": "      _.-\u0027\u0027\u0027\u0027\u0027-._"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /\u003d_.-~-~-~-._\u003d\\      .-.  _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "   :    _     _    :     | | / )"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "  /    (o)   (o)    \\    | |/ /"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "  |   _ _ _ _ _ _   |   _|__ /_"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "  |  \\           /  |  / __)-\u0027 )"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "   \\  \u0027.       .\u0027  /   \\  `(.-\u0027)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u0027.  `\u0027---\u0027`  .\u0027     \u003e ._\u003e-\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "      \u0027-._____.-\u0027      / \\/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "                  LOADING ... ... ..."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "Could not find local storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "Could not find local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "4LC3N-BOT initialised."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "Greetings, humans!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 1 tasks stored"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 2 tasks stored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 3 tasks stored"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 4 tasks stored"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 5 tasks stored"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] read book "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] join sports club "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": "5. [T][✗] borrow book "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 6 tasks stored"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have stored this task in my memory. Use \"list\" to retrieve it!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alcen"
        },
        "content": "Total of 7 tasks stored"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] read book "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] join sports club "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alcen"
        },
        "content": "5. [T][✗] borrow book "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alcen"
        },
        "content": "6. [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alcen"
        },
        "content": "7. [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alcen"
        },
        "content": "You have completed: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alcen"
        },
        "content": "6. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alcen"
        },
        "content": "You have completed: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alcen"
        },
        "content": "You have completed: "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✗] read book "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] join sports club "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alcen"
        },
        "content": "5. [T][✗] borrow book "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alcen"
        },
        "content": "6. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alcen"
        },
        "content": "7. [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alcen"
        },
        "content": "You have completed: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] read book "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] read book "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alcen"
        },
        "content": "3. [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alcen"
        },
        "content": "4. [T][✗] join sports club "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alcen"
        },
        "content": "5. [T][✗] borrow book "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alcen"
        },
        "content": "6. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alcen"
        },
        "content": "7. [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alcen"
        },
        "content": "I have found these tasks!"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alcen"
        },
        "content": "1. [T][✓] read book "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alcen"
        },
        "content": "2. [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alcen"
        },
        "content": "5. [T][✗] borrow book "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alcen"
        },
        "content": "6. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alcen"
        },
        "content": "\u003e ENTER your input:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alcen"
        },
        "content": "Goodbye! You will be missed"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alcen"
        },
        "content": "      _.-\u0027\u0027\u0027\u0027\u0027-._  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alcen"
        },
        "content": "    /\u003d_.-~-~-~-._\u003d\\"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alcen"
        },
        "content": "   :    _     _    :"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alcen"
        },
        "content": "  /    (o)   (o)    \\"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alcen"
        },
        "content": "  |           `     |"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alcen"
        },
        "content": "  |     .-----.     |"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alcen"
        },
        "content": "   \\   :       :   /"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alcen"
        },
        "content": "    \u0027.           .\u0027"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alcen"
        },
        "content": "      \u0027-._____.-\u0027"
      }
    ],
    "authorContributionMap": {
      "alcen": 116
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": "find book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "alcen": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alcen"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alcen"
        },
        "content": " # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alcen"
        },
        "content": " if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alcen"
        },
        "content": "     mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alcen"
        },
        "content": " # delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alcen"
        },
        "content": " if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alcen"
        },
        "content": "     rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alcen"
        },
        "content": " # delete saved tasks from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alcen"
        },
        "content": " if [ -e \"./user/data/tasks.botstore\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alcen"
        },
        "content": "     rm ./user/data/tasks.botstore"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alcen"
        },
        "content": " # delete saved aliases from previous run"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alcen"
        },
        "content": " if [ -e \"./user/data/aliases.botstore\" ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alcen"
        },
        "content": "     rm ./user/data/aliases.botstore"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alcen"
        },
        "content": " # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alcen"
        },
        "content": " find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alcen"
        },
        "content": " if ! javac -cp .:../libs/* -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alcen"
        },
        "content": "     echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alcen"
        },
        "content": "     exit 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alcen"
        },
        "content": " # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alcen"
        },
        "content": " java -cp ../bin bot/Duke cli \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alcen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alcen"
        },
        "content": " # compare the output to the expected output"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alcen"
        },
        "content": " diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alcen"
        },
        "content": " if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alcen"
        },
        "content": " then"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alcen"
        },
        "content": "     echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alcen"
        },
        "content": "     exit 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alcen"
        },
        "content": " else"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alcen"
        },
        "content": "     echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alcen"
        },
        "content": "     exit 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alcen"
        },
        "content": " fi"
      }
    ],
    "authorContributionMap": {
      "alcen": 47
    }
  }
]
