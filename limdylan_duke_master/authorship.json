[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    archiveVersion \u003d \"\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 29,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoSuchInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeProgramTerminatedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.ui.Gui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private static Duke program;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private boolean hasTerminated;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.ui \u003d new Gui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.hasTerminated \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            this.tasks \u003d storage.loadTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static Duke getProgram() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (Duke.program \u003d\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Duke.program \u003d new Duke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return Duke.program;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void setUi(Ui ui) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public boolean hasTerminated() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return hasTerminated;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void setAsTerminated() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        hasTerminated \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void handleUserInput(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Command command \u003d Command.createCommand(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DukeProgramTerminatedException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            setAsTerminated();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DukeNoCommandException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        while (!hasTerminated) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                handleUserInput(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            } catch (DukeNoSuchInputException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                hasTerminated \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke.getProgram().run();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 92,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.ByeCommandMethod;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.CommandMethod;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.DeadlineCommandMethod;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.DeleteCommandMethod;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.DoneCommandMethod;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.EventCommandMethod;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.FindCommandMethod;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.ListCommandMethod;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.method.TodoCommandMethod;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeUnrecognisedCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private String[] arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private CommandMethod method;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static Command createCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            name \u003d inputs[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            if (inputs[1].contains(\" \")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                arguments \u003d inputs[1].split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                arguments \u003d new String[] {inputs[1]};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            name \u003d input;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            arguments \u003d new String[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        switch (name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case \"\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoCommandException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case TodoCommandMethod.NAME: {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new TodoCommandMethod());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case EventCommandMethod.NAME: {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new EventCommandMethod());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case DeadlineCommandMethod.NAME: {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    new DeadlineCommandMethod());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case ListCommandMethod.NAME: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new ListCommandMethod());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case DoneCommandMethod.NAME: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new DoneCommandMethod());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case DeleteCommandMethod.NAME: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new DeleteCommandMethod());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case FindCommandMethod.NAME: {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new FindCommandMethod());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case ByeCommandMethod.NAME: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return new Command(name, arguments, new ByeCommandMethod());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        throw new DukeUnrecognisedCommandException(name);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Command(String name, String[] arguments, CommandMethod method) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.method \u003d method;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String getCommandName() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String[] getArgumentList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String getArgumentString() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.join(\" \", arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        method.execute(this);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(getCommandName());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (arguments.length \u003e 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            output.append(String.format(\" %s\", getArgumentString()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 102
    }
  },
  {
    "path": "src/main/java/duke/command/method/ByeCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeProgramTerminatedException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class ByeCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throws DukeProgramTerminatedException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        throw new DukeProgramTerminatedException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 13
    }
  },
  {
    "path": "src/main/java/duke/command/method/CommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public interface CommandMethod {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    void execute(Command command) throws DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/command/method/DeadlineCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidDateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DeadlineCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(DeadlineCommandMethod.NAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String[] parts \u003d command.getArgumentString().split(\" /by \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidNumberOfArgumentsException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    DeadlineCommandMethod.NAME,2, parts.length);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String description \u003d parts[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            LocalDateTime by \u003d LocalDateTime.parse(parts[1],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    DeadlineTask.DATE_TIME_INPUT_FORMAT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            DeadlineTask newTask \u003d new DeadlineTask(description, by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String message \u003d program.getTaskList().addTask(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            program.getUi().print(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Storage storage \u003d program.getStorage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            storage.saveTaskList(program.getTaskList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidDateTimeException(parts[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 41
    }
  },
  {
    "path": "src/main/java/duke/command/method/DeleteCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeEmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DeleteCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TaskList tasks \u003d program.getTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(command.getCommandName());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeEmptyTaskListException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String firstArgument \u003d command.getArgumentList()[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(firstArgument) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String message \u003d tasks.removeTask(taskIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            program.getUi().print(message);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Storage storage \u003d program.getStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            storage.saveTaskList(program.getTaskList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidTaskException(firstArgument);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 35
    }
  },
  {
    "path": "src/main/java/duke/command/method/DoneCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeEmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DoneCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TaskList tasks \u003d program.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(command.getCommandName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeEmptyTaskListException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String firstArgument \u003d command.getArgumentList()[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(firstArgument) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Task task \u003d tasks.getTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String message \u003d task.markAsCompleted();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            program.getUi().print(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Storage storage \u003d program.getStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            storage.saveTaskList(program.getTaskList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidTaskException(firstArgument);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 37
    }
  },
  {
    "path": "src/main/java/duke/command/method/EventCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidDateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeInvalidNumberOfArgumentsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class EventCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(EventCommandMethod.NAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String[] parts \u003d command.getArgumentString().split(\" /at \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidNumberOfArgumentsException("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    EventCommandMethod.NAME, 2, parts.length);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String description \u003d parts[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            LocalDateTime at \u003d LocalDateTime.parse(parts[1],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    EventTask.DATE_TIME_INPUT_FORMAT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            EventTask newTask \u003d new EventTask(description, at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String message \u003d program.getTaskList().addTask(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            program.getUi().print(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Storage storage \u003d program.getStorage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            storage.saveTaskList(program.getTaskList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeInvalidDateTimeException(parts[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 41
    }
  },
  {
    "path": "src/main/java/duke/command/method/FindCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeEmptyTaskListException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class FindCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TaskList tasks \u003d program.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(command.getCommandName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeEmptyTaskListException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String query \u003d command.getArgumentString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        ListIterator\u003cTask\u003e iterator \u003d tasks.listIterator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Task t \u003d iterator.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            if (t.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                results.addTask(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String message \u003d String.format(\"Tasks with \u0027%s\u0027:\\n%s\", query,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                results.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        program.getUi().print(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 38
    }
  },
  {
    "path": "src/main/java/duke/command/method/ListCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class ListCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        program.getUi().print(\"Tasks so far:\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                + program.getTaskList().toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 14
    }
  },
  {
    "path": "src/main/java/duke/command/method/TodoCommandMethod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.command.method;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoArgumentsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class TodoCommandMethod implements CommandMethod {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String NAME \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void execute(Command command) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (command.getArgumentList().length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoArgumentsException(TodoCommandMethod.NAME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TodoTask newTask \u003d new TodoTask(command.getArgumentString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String message \u003d program.getTaskList().addTask(newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        program.getUi().print(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Storage storage \u003d program.getStorage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        storage.saveTaskList(program.getTaskList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCorruptedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeCorruptedFileException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeCorruptedFileException(String filePath) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format(\"File at %s is corrupted\", filePath));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeEmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeEmptyTaskListException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(\"Cannot get task from empty task list!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeFileNotFoundException(FileNotFoundException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(e.getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeInvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeInvalidDateTimeException(String dateTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                \"\u0027%s\u0027 is not a valid date-time (valid: \u002731/05/2019 2359\u0027)\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                dateTime));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidNumberOfArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeInvalidNumberOfArgumentsException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeInvalidNumberOfArgumentsException(String command, int expected,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            int received) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                \"Expected %d arguments for %s; instead received %d\", expected,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                command, received));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeInvalidTaskException(String taskIndex) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                \"%s is not a suitable task number!\", taskIndex));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limdylan": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeNoArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeNoArgumentsException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeNoArgumentsException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format(\"No arguments received for %s\", command));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limdylan": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeNoCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeNoCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeNoCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(\"No command issued\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeNoSuchInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeNoSuchInputException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeNoSuchInputException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(\"No input was found\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeProgramTerminatedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeProgramTerminatedException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeProgramTerminatedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(\"Program was terminated\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeReadFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeReadFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeReadFileException(IOException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(e.getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUnrecognisedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeUnrecognisedCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeUnrecognisedCommandException(String commandName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format(\"Unrecognised command: %s\", commandName));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUnrecognisedTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeUnrecognisedTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeUnrecognisedTaskTypeException(String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(String.format(\"Unrecognised task: %s\", taskType));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeWriteFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@SuppressWarnings(\"serial\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DukeWriteFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DukeWriteFileException(IOException e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(e.getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 10
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeCorruptedFileException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeReadFileException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeUnrecognisedTaskTypeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeWriteFileException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final String DEFAULT_FILE_PATH \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.filePath \u003d Storage.DEFAULT_FILE_PATH;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TaskList loadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                Task newTask \u003d parseTask(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                tasks.addTask(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeFileNotFoundException(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeReadFileException(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                | DukeUnrecognisedTaskTypeException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                | DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeCorruptedFileException(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Task parseTask(String line)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throws DukeUnrecognisedTaskTypeException, DateTimeParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String[] parts \u003d line.split(Pattern.quote(\" \" + Task.DELIMITER + \" \"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        char taskTypeIcon \u003d parts[0].charAt(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        boolean isCompleted \u003d parts[1].charAt(0) \u003d\u003d Task.COMPLETED;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String description \u003d parts[2];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        switch (taskTypeIcon) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case TodoTask.ICON: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            newTask \u003d new TodoTask(description, isCompleted);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case DeadlineTask.ICON: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            LocalDateTime by \u003d LocalDateTime.parse(parts[3],"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    DeadlineTask.DATE_TIME_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            newTask \u003d new DeadlineTask(description, by, isCompleted);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        case EventTask.ICON: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            LocalDateTime at \u003d LocalDateTime.parse(parts[3],"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    EventTask.DATE_TIME_OUTPUT_FORMAT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            newTask \u003d new EventTask(description, at, isCompleted);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            String taskTypeString \u003d Character.toString(taskTypeIcon);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeUnrecognisedTaskTypeException(taskTypeString);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void saveTaskList(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                String line \u003d task.toStringDelimited();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                fw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeWriteFileException(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 110
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char ICON \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_INPUT_FORMAT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMAT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"EE, dd MMM yyyy, HH:mm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime by,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            boolean isCompleted) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description, isCompleted);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public char getTaskIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return DeadlineTask.ICON;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toStringDelimited() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"%c %c %s %c %s\", getTaskIcon(), Task.DELIMITER,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                super.toStringDelimited(), Task.DELIMITER,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getDateTime().format(DeadlineTask.DATE_TIME_OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"[%c]%s (by: %s)\", getTaskIcon(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getDateTime().format(DeadlineTask.DATE_TIME_OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 48
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char ICON \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_INPUT_FORMAT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMAT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"EE, dd MMM yyyy, HH:mm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public EventTask(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public EventTask(String description, LocalDateTime at,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            boolean isCompleted) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description, isCompleted);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public char getTaskIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return EventTask.ICON;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toStringDelimited() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"%c %c %s %c %s\", getTaskIcon(), Task.DELIMITER,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                super.toStringDelimited(), Task.DELIMITER,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getDateTime().format(DeadlineTask.DATE_TIME_OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"[%c]%s (at: %s)\", getTaskIcon(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getDateTime().format(EventTask.DATE_TIME_OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char COMPLETED \u003d \u0027X\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char PENDING \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char DELIMITER \u003d \u0027|\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Task(String description, boolean isCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String markAsCompleted() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return String.format(\"\u0027%s\u0027 has already been done\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                    getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            isCompleted \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return String.format(\"Marked \u0027%s\u0027 as done\", getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public abstract char getTaskIcon();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public char getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return isCompleted ? Task.COMPLETED : Task.PENDING;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toStringDelimited() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"%c %c %s\", getStatusIcon(), Task.DELIMITER,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"[%c] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 49
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final char ICON \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TodoTask(String description, boolean isCompleted) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(description, isCompleted);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public char getTaskIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return TodoTask.ICON;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toStringDelimited() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"%c %c %s\", getTaskIcon(), Task.DELIMITER,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                super.toStringDelimited());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"[%c]%s\", getTaskIcon(), super.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 29
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final double DEFAULT_SPACING \u003d 5;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final double IMAGE_WIDTH \u003d 84.0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static final double IMAGE_HEIGHT \u003d 48.0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public DialogBox(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        super(DialogBox.DEFAULT_SPACING);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.text \u003d label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.displayPicture \u003d imageView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        displayPicture.setFitWidth(DialogBox.IMAGE_WIDTH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        displayPicture.setFitHeight(DialogBox.IMAGE_HEIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.setAlignment(Pos.BOTTOM_RIGHT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.setStyle(\"-fx-border-width: 0 0 1 0; -fx-border-color: black;\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.setAlignment(Pos.BOTTOM_LEFT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "                getChildren());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static DialogBox getUserDialog(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        DialogBox db \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public static DialogBox getReplyDialog(Label label, ImageView imageView) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        DialogBox db \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 54
    }
  },
  {
    "path": "src/main/java/duke/ui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoSuchInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class Gui extends Application implements Ui {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Image userImage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Image replyImage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private final String userImagePath \u003d \"/images/user.png\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private final String replyImagePath \u003d \"/images/reply.png\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Gui() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        userImage \u003d new Image(getClass().getResourceAsStream(userImagePath));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        replyImage \u003d new Image(getClass().getResourceAsStream(replyImagePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scene.getStylesheets().add(\"/style/stylesheet.css\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        stage.setMinWidth(500.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setPrefSize(485.0, 530.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        userInput.setPrefWidth(410.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        sendButton.setPrefWidth(65.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke.getProgram().setUi(this);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        print(Ui.WELCOME_MESSAGE + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke.getProgram().setAsTerminated();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Label userText \u003d new Label(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(userImage))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Duke program \u003d Duke.getProgram();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        program.handleUserInput(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (program.hasTerminated()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Application.launch(this.getClass());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String readInput() throws DukeNoSuchInputException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Label replyText \u003d new Label(message);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            DialogBox.getReplyDialog(replyText, new ImageView(replyImage))"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void printException(Exception e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        print(e.toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 145
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoSuchInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class TextUi implements Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        print(Ui.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String readInput() throws DukeNoSuchInputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            throw new DukeNoSuchInputException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void print(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void printException(Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        print(e.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        print(Ui.GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 44
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.exception.DukeNoSuchInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    final String ASCII_LOGO \u003d \"\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            + \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    final String WELCOME_MESSAGE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            \u003d String.format(\"Hello from \\n%s\", Ui.ASCII_LOGO);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    final String GOODBYE_MESSAGE \u003d \"Goodbye!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    void start();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    String readInput() throws DukeNoSuchInputException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    void print(String message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    void printException(Exception e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    void exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 25
    }
  },
  {
    "path": "src/main/java/duke/utils/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"Added: \u0027%s\u0027\", task.getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String removeTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return String.format(\"Removed: \u0027%s\u0027\", task.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public ListIterator\u003cTask\u003e listIterator() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return tasks.listIterator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            return \"{  * No tasks *  }\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"{\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        ListIterator\u003cTask\u003e iterator \u003d listIterator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            int index \u003d iterator.nextIndex();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            Task task \u003d iterator.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limdylan"
        },
        "content": "            output.append(String.format(\"\\n  %d. %s\", (index + 1), task));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        output.append(\"\\n}\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limdylan"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limdylan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limdylan": 57
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limdylan"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limdylan"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM https://github.com/nus-cs2103-AY1920S2/forum/issues/3#issue-551755325"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limdylan"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limdylan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limdylan"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    del sources"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limdylan"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limdylan"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM run the program, feed commands from input file and redirect the output to the actual"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limdylan"
        },
        "content": "java -classpath ..\\bin Duke \u003c input \u003e actual"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limdylan"
        },
        "content": "FC expected actual \u003e fc_output || cat fc_output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limdylan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limdylan"
        },
        "content": "REM cleanup"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limdylan"
        },
        "content": "del sources"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limdylan"
        },
        "content": "del actual"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limdylan"
        },
        "content": "del fc_output"
      }
    ],
    "authorContributionMap": {
      "limdylan": 27
    }
  }
]
