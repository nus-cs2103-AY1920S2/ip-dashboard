[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 6,
      "-": 19
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "D | 1 | return book  | Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "E | 1 | project meeting  | Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "T | 0 | redbook"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 3
    }
  },
  {
    "path": "src/main/java/BlankDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class BlankDeadlineException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public BlankDeadlineException(String errorMessage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 5
    }
  },
  {
    "path": "src/main/java/BlankEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class BlankEventException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public BlankEventException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 5
    }
  },
  {
    "path": "src/main/java/BlankTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class BlankTodoException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public BlankTodoException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import javax.swing.text.html.Option;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " * Represents a Deadline which inherits from Task and is stored/managed by Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Stores the time the deadline is supposed to be complete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected Optional\u003cLocalDate\u003e dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Creates a deadline object with given description and time to complete (by)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if (this.by.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            this.dueDate \u003d Optional.of(LocalDate.parse(this.by));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     *  Gives a string representation of the Deadline by building upon parent\u0027s representation method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @return a string representation"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if (this.dueDate.isPresent()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"[D]\" + super.toString() +  \"(by: \" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    this.dueDate.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return \"D | \" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import javax.swing.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public static void promptUser(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String stringNew \u003d String.format(\"%d. %s\", i + 1, this.list.get(i));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            promptUser(stringNew);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        list.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(list.get(index-1).toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void addToDo(String[] words, String input) throws BlankTodoException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if(words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            throw new BlankTodoException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Task todo \u003d new ToDo(input.substring(5), false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.list.add(todo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(todo.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(String.format(\"Now you have %d tasks in your list\", list.size()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void addDeadline(String[] words, String input) throws BlankDeadlineException{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if(words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            throw new BlankDeadlineException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Task deadline \u003d new Deadline(input.substring(9, input.indexOf(\u0027/\u0027)),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                input.substring(input.indexOf(\u0027/\u0027) + 4), false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.list.add(deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(deadline.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(String.format(\"Now you have %d tasks in your list\", list.size()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void addEvent(String[] words, String input) throws BlankEventException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if(words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            throw new BlankEventException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Task event \u003d new Event(input.substring(6, input.indexOf(\u0027/\u0027)),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                input.substring(input.indexOf(\u0027/\u0027) + 4), false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.list.add(event);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(event.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(String.format(\"Now you have %d tasks in your list\", list.size()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Task deleted \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.list.remove(index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(deleted.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(String.format(\"Now you have %d tasks in your list\", list.size()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public static ArrayList\u003cTask\u003e getPreviousTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        File file \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Scanner input \u003d new Scanner(file);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String line \u003d input.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String[] data \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    task \u003d new ToDo(data[2], getBooleanFromString(data[1]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    task \u003d new Deadline(data[2], data[3], getBooleanFromString(data[1]));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    task \u003d new Event(data[2], data[3], getBooleanFromString(data[1]));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public static void fillFileWithTasks(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/data.txt\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        String accumulatedTasks \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            accumulatedTasks \u003d accumulatedTasks + tasks.get(i).toFile() + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        fw.write(accumulatedTasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public static boolean getBooleanFromString(String s) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if(s.equals(\"0\")){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            duke.list \u003d getPreviousTasks(); //set list to the previous tasks list"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            //Ignore as list is already new."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        promptUser(\"What can I do for you?\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        //initiate objects"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        //read user input"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            String firstWord \u003d words[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            if (input.equals(\"bye\")){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                promptUser(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    fillFileWithTasks(duke.list);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    promptUser(\"Error saving file. The file \u0027data.txt\u0027 is no longer in data/data.txt\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (input.equals(\"list\")){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                duke.printList();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (firstWord.equals(\"done\")){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                int num \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                duke.markDone(num);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    duke.addToDo(words, input);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                } catch (BlankTodoException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    promptUser(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    duke.addDeadline(words, input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                } catch(BlankDeadlineException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    promptUser(e.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    duke.addEvent(words, input);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                } catch (BlankEventException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    promptUser(e.getMessage());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                int deleteNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                duke.deleteTask(deleteNum);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                promptUser(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 173,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " * Represents an Event which inherits from Task and is stored/managed by Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Stores the time the event is supposed to take place"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected Optional\u003cLocalDate\u003e dueTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Creates an Event object with given description and time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public Event(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if(this.time.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) { //YYYY-MM-DD"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            this.dueTime \u003d Optional.of(LocalDate.parse(this.time));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     *  Gives a string representation of the Event by building upon parent\u0027s representation method"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if (this.dueTime.isPresent()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"[E]\" + super.toString() + String.format(\"(at: %s)\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "                    this.dueTime.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"[E]\" + super.toString() + String.format(\"(at: %s)\", this.time);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return \"E | \" + super.toFile() + \" | \" + time;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 46
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " * Represents a Task to be managed/stored by the command line application Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Creates a new Task with the given description and sets isDone to false by default"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Gets the status icon of this Task based on whether it is done or not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @return a String containing the status icon (tick-mark or cross)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Marks this task as done by setting the isDone property to true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Gives a string representation of the Task including the status icon"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @return a String representation of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"1 | \" + this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "            return \"0 | \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 48
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " * Represents a To-do which inherits from Task and is stored/managed by Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Creates a To-Do object with given description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * Gives a string representation of the To-do by building upon parent\u0027s representation method"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     * @return a string representation"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "        return \"T | \" + super.toFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 25
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Now you have 1 tasks in your list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Now you have 2 tasks in your list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Now you have 3 tasks in your list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "3. [E][✓] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 19
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 6
    }
  },
  {
    "path": "test-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin $(find ../src/main/java/* | grep .java);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raivatshah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raivatshah"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "raivatshah": 34
    }
  }
]
