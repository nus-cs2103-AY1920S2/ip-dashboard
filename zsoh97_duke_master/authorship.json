[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "test{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 36,
      "-": 22
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "T / 0 /  Watch \u0027The Witcher\u0027 on Netflix"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "D / 1 / CS2105 Assignment/ 1 Mar 2020 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "E / 0 / CS2101 presentation / 20 Feb 2020 1200"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "## Batman\u0027s Alfred"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Adds a task of type (todo/deadline/event) to your task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Deletes the task at given index in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### Marking a task as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Marks the task at given index as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### Undoing the last command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Undoes the previous command which edited the task list (add, delete, done)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### Finding a task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Finds task in the task list containing the given key."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `todo (task details)` - Adds a new todo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Adds a new task of type, todo, into the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`todo Watch \u0027The Witcher\u0027 on Netflix`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`Noted. The following task has been added:` "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[T][X] Watch \u0027The Witcher\u0027 on Netflix`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`There are currently 1 item(s) in the list`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `deadline(task details) /by YYYY-MM-DD HHmm` - Adds a new deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Adds a new type of task, deadline, to the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`deadline CS2105 Assignment1 /by 2020-03-01 2359`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`Noted. The following task has been added:`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[D][X] CS2105 Assignment 1 (by: 1 Mar 2020 2359)`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`There are currently 2 item(s) in the list` "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `event(task details) /at YYYY-MM-DD HHmm` - Adds a new event."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Adds a new type of task, event, to the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`event CS2101 presentation /at 2020-02-20 1200`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`Noted. The following task has been added:`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[E][X] CS2101 Presentation (at: 20 Feb 2020 1200)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`There are currently 3 item(s) in the list`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `list` - Displays all tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Displays all the tasks in the task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`There are currently 3 items in your list:`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[T][X] Watch \u0027The Witcher\u0027 on Netflix`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[D][X] CS2105 Assignment 1 (by: 1 Mar 2020 2359)`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "`[E][X] CS2101 Presentation (at: 20 Feb 2020 1200)`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `done` - Marks a task as complete"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Marks the task at the given index as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Examples of usage:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `done 2`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `Well Done! The task: `"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " \u003cbr\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `[D][X] CS2105 Assignment (by: 1 Mar 2020 2359)`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " \u003cbr\u003e "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `has been marked as done.`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `find (keyword)` - Searches for tasks with given key"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Returns list of tasks which contains given key in their task description."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `find CS2101`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `The matching items in your list are:` "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `[E][X] CS2101 Presentation (at: 20 Feb 2020 1200)`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Removes the task at the given index from the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Examples of usage:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `delete 2`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " `Noted. Task 2 has been removed:`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  `[D][X] CS2105 Assignment (by: 1 Mar 2020 2359)`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   `There are currently 2 task(s) in the list.`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `undo` - Undoes a previous command"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  Undoes the previous command by the user that changed the task list or its items."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  Examples of usage:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  `undo`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  `Your previous command:`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   \u003cbr\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   `Noted.Task 2 has been removed:` "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   `[D][X] CS2105 Assignment (by: 1 Mar 2020 2359)`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   \u003cbr\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   `There are currently 2 task(s) in the list.`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   \u003cbr\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "   `has been undone.`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  Exits the program."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  `bye`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "  `Goodbye. I hope I was useful. See you again.`"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 145,
      "-": 22
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author JeffreyLum-reused"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "//reused from https://github.com/zsoh97/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param text Text to be displayed in DialogBox."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param img Image to be displayed in DialogBox."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Circle circleClip \u003d new Circle(50, 50, 48);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        displayPicture.setClip(circleClip);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill(Color.WHEAT,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                new CornerRadii(3), new Insets(3))));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.setBackground(new Background(new BackgroundFill(Color.SLATEGRAY,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                new CornerRadii(3), new Insets(3))));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Returns new DialogBox with the text and image to be displayed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param text Text to be displayed in DialogBox."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param img Image to be displayed in DialogBox."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return DialogBox containing the user\u0027s image and the user\u0027s input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Returns new DialogBox with the text and image to be displayed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param text Text to be displayed in DialogBox."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param img Image to be displayed in DialogBox."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return DialogBox containing Duke\u0027s image and the Duke\u0027s response."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 90,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Main class for Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Class contains constructor for Duke object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Duke object contains parameters: Storage to update list of Tasks and save file in hard"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * drive, TaskList to update list of tasks in duke and Ui for user to interact with."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param filePath file path to save file in hard drive"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert !filePath.isEmpty() : \"filepath should not be empty String.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Constructs new storage object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Load list of tasks from save file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            this.ui.showLoadingError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected String getGreeting() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves response from Duke based on user input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        boolean isExit;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                Runtime.getRuntime().exit(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (DukeException | InvalidCommandException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return ui.formatResponse(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Duke constructor for Launcher."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this(FILE_PATH);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 70,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author JeffreyLum-reused"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "//reused from https://github.com/zsoh97/duke/blob/master/tutorials/javaFxTutorialPart1.md"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 11,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            MainWindow mainWindow \u003d new MainWindow();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.setRoot(mainWindow);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            stage.setTitle(\"Batman\u0027s Alfred\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Jeffrey Lum-reused"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "//reused from https://github.com/zsoh97/duke/blob/master/tutorials/javaFxTutorialPart4.md with minor modifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/batman.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/alfred.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Sets private duke parameter to parameter Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param d Duke object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Creates a dialog box that retrieves Duke\u0027s welcome message and appends it to the dialog container."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getGreeting(), dukeImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 62,
      "-": 1
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            storage.write(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return ui.showTaskAddMessage(taskList.getSize(), task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 28
    }
  },
  {
    "path": "src/main/java/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage.overwrite(taskList.getTasks());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.showByeMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 19
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 14
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private int deleteIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Task task \u003d taskList.getTask(deleteIndex - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        taskList.deleteTask(deleteIndex - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage.overwrite(taskList.getTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.showDeleteMessage(task, deleteIndex, taskList.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 22
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private int doneIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public DoneCommand(int doneIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        taskList.markAsDone(doneIndex - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage.overwrite(taskList.getTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.showTaskDoneMessage(taskList.getTask(doneIndex - 1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 21
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            String response \u003d ui.getFindResponse(key, taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            System.out.println(response);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 26
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.getListResponse(taskList, taskList.getSize());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 12
    }
  },
  {
    "path": "src/main/java/commands/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public UndoCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String lastMessage \u003d ui.getLastMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (lastMessage \u003d\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(\"\\n No command has been made that can be undone.\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Task mostRecentTask \u003d taskList.getMostRecentTask();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (lastMessage.contains(\"added\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            taskList.undoAdd();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } else if (lastMessage.contains(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            taskList.undoDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } else if (lastMessage.contains(\"removed\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            int removedIndex \u003d Integer.parseInt(lastMessage.substring(15, 16));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            taskList.undoDelete(removedIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        storage.overwrite(taskList.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return ui.showUndoMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 32
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public DukeException(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 8
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import commands.UndoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Parser object used to parse user input into format to be displayed or saved in file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Parser object can parse date input by user into LocalDate format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructor for Parser object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Parses user input for Duke and calls the respective methods for the different commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param input User input String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response to user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws DukeException Error messages by Duke should user input have insufficient details."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws InvalidCommandException Error message by Duke when user has input a invalid command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public static Command parse(String input) throws DukeException, InvalidCommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        switch (splitInput[0]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"list\" :"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            assert input.equals(\"list\") : \"Command is just \u0027list.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"done\" :"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new DoneCommand(Integer.parseInt(splitInput[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"bye\" :"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"delete\" :"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(splitInput[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"find\" :"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new FindCommand(input.substring(4));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"todo\" :"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new AddCommand(parseTodo(input.substring(5)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"deadline\" :"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new AddCommand(parseDeadline(input));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new AddCommand(parseEvent(input));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new InvalidCommandException(\"\\nMy apologies, I do not recognise the command. :(\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Parses duke user input into date using LocalDate."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param unformattedDate unformatted date input by user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Formatted date input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public static String parseDate(String unformattedDate) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(unformattedDate);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        int day \u003d localDate.getDayOfMonth();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Month month \u003d localDate.getMonth();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        int year \u003d localDate.getYear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return day + \" \" + month.getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + year + \" \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected static Todo parseTodo(String taskDetails) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return new Todo(taskDetails);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Parses Deadline Task from file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param taskDetails Deadline task details read from file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws DukeException Duke\u0027s error message when there are missing details in the task being read from file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static Deadline parseDeadline(String taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String[] splitDetails \u003d taskDetails.split(\"/by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Check if given description has sufficient details."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (splitDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(\"\\nMy apologies, \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \"deadline description has insufficient details. :(\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Parse date details into LocalDate format."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String[] dateTime \u003d splitDetails[1].split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert dateTime.length \u003d\u003d 2 : \"Details of time are insufficient\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String taskBy \u003d Parser.parseDate(dateTime[0]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        parseTime(dateTime[1].trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Add deadline to list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return new Deadline(splitDetails[0].substring(9), taskBy + dateTime[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static void parseTime(String timeString) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if(time \u003e 2359 || time \u003c0 || time % 100 \u003e 59) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(\"\\n My apologies, please enter a valid time between 0000-2359.\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Parses Event Task from file."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param taskDetails Event task details read from file."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws DukeException Duke\u0027s error message when there are missing details in the task being read from file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static Event parseEvent(String taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String[] splitDetails \u003d taskDetails.split(\"/at \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Check if given description has sufficient details."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (splitDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(\"\\n My apologies, \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \"event description has insufficient details. :(\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Parse date details into LocalDate format."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String[] dateTime \u003d splitDetails[1].split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert dateTime.length \u003d\u003d 2 : \"Details of time are insufficient\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String eventAt \u003d Parser.parseDate(dateTime[0]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        parseTime(dateTime[1].trim());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Add deadline to list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return new Event(splitDetails[0].substring(6), eventAt + dateTime[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Parses line read from file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param readFile Line read from file."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Task parseLine(String readFile) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        switch (readFile.charAt(0)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Todo todo \u003d new Todo(readFile.substring(7));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            if (readFile.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            String[] splitDetails \u003d readFile.substring(7).split(\"/\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Deadline deadline \u003d new Deadline(splitDetails[0].trim(), splitDetails[1].trim());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            if (readFile.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            String[] splitEventDetails \u003d readFile.substring(7).split(\"/\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Event event \u003d new Event(splitEventDetails[0].trim(), splitEventDetails[1].trim());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            if (readFile.charAt(4) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            assert false : \"Invalid task type stored in storage\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(\"\\nCorrupt File! Unidentified file type)\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 176
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Storage object is used as a storage for the list of Task objects by user in Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Storage class provides implementation of methods to load, write to and overwrite"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * existing file on hard drive."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Storage objects have attributes of list of Task objects to store Task objects that"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * is loaded from file in hard drive and updated when user is using Duke and the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * path to file in hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param filePath path to file with saved list of tasks in hard drive."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert !filePath.isEmpty() : \"File path should not be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Overwrites current existing data in saved file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param newTaskList List of Task objects used to populate safe file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void overwrite(List\u003cTask\u003e newTaskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Assigns new input list to object\u0027s list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        tasks \u003d newTaskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Overwrite current save file with new list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            PrintWriter printWriter \u003d new PrintWriter(new BufferedWriter(new FileWriter("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    filePath, false)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                printWriter.println(task.writeToFile());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            printWriter.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Appends newest Task object to save file\u0027s list of saved Task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param task Task object to be added to list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void write(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Append new Task to save file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            PrintWriter printWriter \u003d new PrintWriter(new BufferedWriter(new FileWriter("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    filePath, true)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            printWriter.println(task.writeToFile());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            printWriter.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Loads list of tasks in save file into list of Task objects. Throws Duke exception."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return List of Task objects."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws DukeException Thrown when any line in the safe file does not fit the required Task object requirements."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            String readLine;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            //Check if save file has reached EOF"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            while ((readLine \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                Task task \u003d parser.parseLine(readLine);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                loadedTasks.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } catch (IOException ie) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 99
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private String taskDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Deadline(String taskDetails, String taskDeadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.taskDeadline \u003d taskDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"D /\" + super.writeToFile() + \"/ \" + taskDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + taskDeadline + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 21
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private String eventAt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Event(String taskDetails, String eventAt) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"E /\" + super.writeToFile() + \" / \" + eventAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 20
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Task is the main object used to maintain the list of tasks from the user by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * This class provides multiple implementations of Task object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * All Task objects will have the boolean attribute determining if the task has been"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * done, the task details, and the type of Task. Task objects with deadline and event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * types will have additional local date attributes and additional details when"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * applicable."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    protected String taskDetails;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructor to construct todo Task object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param taskDetails Details of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Task(String taskDetails) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.taskDetails \u003d taskDetails;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Returns tick or cross depending on status of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return tick or cross formatted as String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void undoDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Gets description of Task object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return String containing task description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.taskDetails;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Sets boolean isDone as true."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Returns details of Task object formatted for storing in hard drive."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return formatted string of task object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert !this.taskDetails.isEmpty() : \"Task details should not be empty.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Check if Task has been marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return \" 1 / \" + this.taskDetails;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \" 0 / \" + this.taskDetails;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 76
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * TaskList object stores the List of tasks by the user in Duke. Tasklist object handles"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * operations of adding Task object, deleting Task object and retrieving Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Class TaskList contains List of Task objects to be maintained."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private Task mostRecentTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructor for Tasklist object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructs new TaskList object with input List of Task objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param tasks List of Task objects used to populate TaskList\u0027s list parameter."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Deletes Task object at index from list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param index Index of Task object to be deleted."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0 : \"Index of \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + \"task should be greater than 0\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        mostRecentTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Adds Task object to list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param task Task object to be added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert task !\u003d null : \"Task should not be null.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        mostRecentTask \u003d task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Returns Task object from list at index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param index Index of desired Task object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Task object at index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0 : \"Index should be greater\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + \" than 0 and smaller than list size.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Duke marks Task as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param index Index which task to be marked is located."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        mostRecentTask \u003d task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Checks size of list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Returns number of Task objects in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Checks if the list contains no elements."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return True if the list contains no elements."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.tasks.isEmpty();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            sb.append(\"  \").append(i).append(\". \")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    .append(tasks.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert sb.length() \u003e 0 : \"StringBuilder should not be empty.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructs a new list to store search results."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param searchKey Identifier that Task details needs to have."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Task objects that contain identifier."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public List\u003cTask\u003e find(String searchKey) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Create new List\u003cTask\u003e to hold search results."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            if (t.getDescription().contains(searchKey)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Removes most recently added Task from list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void undoAdd() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        tasks.remove(this.getSize() - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Undoes completion mark on Task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void undoDone() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        mostRecentTask.undoDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Undoes deletion of task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param removedIndex Previous index of task before it was removed."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void undoDelete(int removedIndex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        tasks.add(removedIndex - 1, mostRecentTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Task getMostRecentTask() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return mostRecentTask;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 146
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Todo(String taskDetails) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        super(taskDetails);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"T /\" + super.writeToFile();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 17
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "//import org.junit.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * Ui class interacts with Duke user, requesting input and printing prompts for user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " * This class provides constructor for Ui object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static final String BORDER \u003d \"**********************************************************************\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static final String LOGO \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            + \" |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static final String TASK_ADD_STRING \u003d \"Noted. The following task has been added:\\n   \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"\\n Goodbye. I hope I was useful. See you again.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    private String lastMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Constructor for Ui object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Ui object displays welcome message when Duke is launched."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String greeting \u003d \"Hi! My name is Alfred. Welcome to\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return BORDER + \"\\n  \" + greeting +  LOGO + \"\\n How may I help you?\\n\" + BORDER;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Ui object displays input String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param toPrint input String for Ui object to display."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String formatResponse(String toPrint) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return BORDER + toPrint + BORDER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Fetches Duke\u0027s response to \u0027list\u0027 command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String getListResponse(TaskList tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return this.formatResponse(\"\\n  There are currently no items in your list. \\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            return this.formatResponse(\"\\n There are currently \" + numOfTasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \" items in your list:\\n\" + tasks.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves message from Duke when a task has been marked as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param task Task that was requested to be done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Done Message from Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showTaskDoneMessage(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assert task.isDone() : \"Task should be marked as done.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String response \u003d \"\\n  \" + \"Well Done! The task:\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + \"\\n  \" + task + \"\\n  has been marked as done.\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        lastMessage \u003d response;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(response);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves exit message from Duke when user exits Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Exit message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showByeMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(BYE_MESSAGE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves response from Duke when a task is deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param removedTask Task that has been removed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param deleteIndex Index of task deleted."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param numOfTask Number of tasks remaining in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response when a delete command has been inputted by the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showDeleteMessage(Task removedTask, int deleteIndex, int numOfTask) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String response \u003d \"\\n  Noted. Task \" + deleteIndex + \" has been removed:\\n  \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + removedTask + \"\\n  There are currently \" + numOfTask"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + \" task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        lastMessage \u003d response;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(response);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Fetches Duke\u0027s response to \u0027find\u0027 command."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param key Search parameter."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @throws DukeException Duke\u0027s error message when details of input are incorrect."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String getFindResponse(String key, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (key.isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(this.formatResponse(\"\\n  My apologies, \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \"search parameter seems to be empty.\\n  \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \"Please check and try again\\n. \"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        // Retrieve Task objects with description matching user\u0027s description."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        List\u003cTask\u003e results \u003d taskList.find(key);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        if (results.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "            throw new DukeException(this.formatResponse(\"\\n  My apologies, \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                    + \"there are no tasks matching \u0027\" + key + \"\u0027 :(\\n\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String resultTasks \u003d new TaskList(results).toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(\"\\n The matching items in your list are:\\n\" + resultTasks);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Ui object displays error message if any error arises when loading from save file"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * from hard disk."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves Duke\u0027s response when a new Task has been added by the user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param numOfTask Number of tasks currently in the list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @param task New Task being added."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showTaskAddMessage(int numOfTask, String task) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String response \u003d \"\\n  \" + TASK_ADD_STRING + task + \"\\n  There are currently \""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + numOfTask + \" task(s) in the list.\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        this.lastMessage \u003d response;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(response);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * Retrieves Duke\u0027s response when the undo command is invoked."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String showUndoMessage() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return this.formatResponse(\"\\n Your previous command:\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "                + this.lastMessage + \"\\n has been undone.\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    public String getLastMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        return lastMessage;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 153
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"500.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003cfx:root maxHeight\u003d\"600.0\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 20
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        taskList.addTask(new Task( Duke.Tasks.todo, \"read book\" ));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assertEquals(1, taskList.getSize());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    void isEmpty() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assertTrue(taskList.isEmpty());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 17
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    void writeToFile(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        Task test \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        String testStr \u003d \"T / 0 / read book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "        assertEquals(testStr, test.writeToFile());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 13
    }
  },
  {
    "path": "text-ui-test/Expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "zsoh97": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zsoh97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zsoh97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zsoh97": 21
    }
  }
]
