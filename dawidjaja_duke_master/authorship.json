[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "task fatJar(type: Jar) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  manifest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    attributes \u0027Implementation-Title\u0027: \u0027Gradle Jar File Example\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \u0027Implementation-Version\u0027: version,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \u0027Main-Class\u0027: \u0027Launcher\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  baseName \u003d project.name + \u0027-all\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  from {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  with jar"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  jcenter()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  compile \u0027org.junit.jupiter:junit-jupiter:5.6.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  testCompile \u0027org.junit.jupiter:junit-jupiter:5.6.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  testImplementation \u0027org.junit.jupiter:junit-jupiter:5.6.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "  mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    baseName \u003d \"duke\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    version \u003d \"0.2\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    classifier \u003d null"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    appendix \u003d null"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 47,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Duke is a chatbot that can help you organize your tasks, deadlines, and events."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "List of feature:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 1. todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`todo` : add a task to your list. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `todo [name] [priority]`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Remarks:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[priority]` is optional. Its default value is 10."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Lower value has higher priority."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `todo read books`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `todo do homework 1`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 2. event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`event` : add an event to your list. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `event [name] /by [date] [priority]`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Remarks:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[date]` is in `YYYY-MM-DD` format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[priority]` is optional. Its default value is 10. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Lower value has higher priority."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`event read books /by 2020-03-25`\\"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`event explore the world /by 2060-12-31`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 3. deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`deadline` : add an deadline to your list. "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `deadline [name] /by [date] [priority]`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Remarks:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[date]` is in `YYYY-MM-DD` format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[priority]` is optional. Its default value is 10. "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Lower value has higher priority."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`deadline read books /by 2020-03-25`\\"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`deadline explore the world /by 2060-12-31`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 4. list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`list` : list all your tasks, deadlines and events."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example response:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. [E][✘] party (by: May 23 2020)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    2. [T][✓] read book"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 5. done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`done` : Do one of your task and be done with it. "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `done [index]`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Remarks:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[index]` is 1-indexing (starts with 1)."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. [E][✘] party (by: May 23 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    2. [T][✓] read book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    [E][✓] party (by: May 23 2020)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. [E][✘] party (by: May 23 2020)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    2. [T][✓] read book"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 6. delete"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`delete` : Delete your existing task from the list. "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format : `delete [index]`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Remarks:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "- `[index]` is 1-indexing (starts with 1)."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. [E][✘] party (by: May 23 2020)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    2. [T][✓] read book"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    [E][✓] party (by: May 23 2020)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. [T][✓] read book"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 7. bye"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`bye`: Exit from duke"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "### 8. help"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`help`: get list of instruction examples you can use. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    Here\u0027s a list of command examples you can use:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    1. todo read book 2"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    2. deadline finish book /by 2020-02-30 5"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    3. event book meeting /at 2020-03-02 1"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    4. list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    5. done 2"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    6. delete 2"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    7. bye"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 135,
      "-": 17
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 1,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Deadline class extends the Task class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected LocalDate datetime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Constructs a Deadline instance, given the description,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * connector, datetime and isDone status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param description The Description of the Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param connector The word connecting between description and datetime."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param datetime The datetime of the Deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param isDone The done status of the Deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param priority The priority of the Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Deadline(String description, String connector, String datetime, boolean isDone, int priority) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(description, isDone, priority);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.connector \u003d connector;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.datetime \u003d LocalDate.parse(datetime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Deadline(String description, String connector, String datetime, int priority) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "       this(description, connector, datetime, false, priority);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Deadline(String description, String connector, String datetime) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, connector, datetime, false, 10);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Custom string to be saved in database."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Database formatted string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"D|\" + isDone + \"|\" + description + \"|\" + connector + \"|\" + datetime + \"|\" + priority;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Overrides the default toString method make"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * a custom string."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Printed format for Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[D][\" + getStatusIcon() + \"] \" + description + \" (\" + connector + \": \" + this.getDatetime() + \")\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Returns the datetime of the deadline."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * The return format would be:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * MMM d yyyy"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * ex:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * FEB 11 2020"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return datetime eof the deadline."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 77
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * \u003cp\u003eThe Duke class is the main class of the bot,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * where the application starts.\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private String fileLoc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Creates a Duke instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param stage The stage for Duke to load."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void start(Stage stage) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        fileLoc \u003d \"./src/main/data/duke.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        if (!isFileExist(fileLoc)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            createFile(fileLoc);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Parser parser \u003d new Parser(fileLoc);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Handler handler \u003d new Handler(fileLoc);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Ui ui \u003d new Ui(stage, parser, handler);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    boolean isFileExist(String fileLoc) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        File file \u003d new File(fileLoc);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return file.exists();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    void createFile(String fileLoc) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        File file \u003d new File(fileLoc);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 60,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7
    }
  },
  {
    "path": "src/main/java/DukeResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * DukeResponse"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Encapsulate both response and status in one class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class DukeResponse {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private int status;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Create the response object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param response The response text."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param status The status of the response."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DukeResponse(String response, int status) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public int getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 39
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Event class extends the Task class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected LocalDate datetime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Constructs a Event instance, given the description,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * connector, datetime and isDone status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param description The Description of the Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param connector The word connecting between description and datetime."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param datetime The datetime of the Event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param isDone The done status of the Event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param priority The priority of the Event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Event(String description, String connector, String datetime, boolean isDone, int priority) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(description, isDone, priority);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.connector \u003d connector;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.datetime \u003d LocalDate.parse(datetime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Event(String description, String connector, String datetime, int priority) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, connector, datetime, false, priority);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Event(String description, String connector, String datetime) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, connector, datetime, false, 10);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Custom string to be saved in database."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Database formatted string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"E|\" + isDone + \"|\" + description + \"|\" + connector + \"|\" + datetime + \"|\" + priority;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Overrides the default toString method make"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * a custom string."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Printed format for Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[E][\" + getStatusIcon() + \"] \" + description + \" (\" + connector + \": \" + this.getDatetime() + \")\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Returns the datetime of the deadline."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * The return format would be:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * MMM d yyyy"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * ex:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * FEB 11 2020"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return datetime eof the deadline."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 76
    }
  },
  {
    "path": "src/main/java/Handler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Handler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * The Ui class handles the response"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * for the duke chat platform."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Handler {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    String fileLoc;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Initialize the handler class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param fileLoc The location of the database file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Handler(String fileLoc) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.fileLoc \u003d fileLoc;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Handles the user input and get the response."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param userText The text inputted by the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param listing The ArrayList contains the current Tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return The response for the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DukeResponse getResponse(String userText, ArrayList\u003cTask\u003e listing) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        int needExit \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        boolean isTodo \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        boolean isDeadline \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        boolean isEvent \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String respText;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (userText.equals(\"help\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                 respText \u003d String.join(\"\\n\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"Here\u0027s a list of command examples you can use:\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"1. todo read book 2\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"2. deadline finish book /by 2020-02-30 5\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"3. event book meeting /at 2020-03-02 1\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"4. list\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"5. done 2\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"6. delete 2\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    \"7. bye\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (userText.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //          exit the program"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                needExit \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (userText.equals(\"list\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //            query the list of task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                for (int i \u003d 0; i \u003c listing.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    respText +\u003d (i + 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    respText +\u003d \". \" + listing.get(i) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (isSubstringEqual(userText, \"done\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //            done doing task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                int taskNum \u003d Integer.parseInt(userText.substring(4).trim()) - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText +\u003d listing.get(taskNum).done();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if ((isTodo \u003d isSubstringEqual(userText, \"todo\")) ||"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                (isDeadline \u003d isSubstringEqual(userText, \"deadline\")) ||"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                (isEvent \u003d isSubstringEqual(userText, \"event\"))) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //          add task to do"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                Task tmp \u003d new Task(userText);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                if (isTodo) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String userTask \u003d userText.substring(5).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String[] userParams \u003d userTask.split(\" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        if (userParams.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            tmp \u003d new Task(userParams[0]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        } else if (userParams.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            int priority \u003d Integer.parseInt(userTask.split(\" \")[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            tmp \u003d new Task(userParams[0], priority);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        if (userTask.equals(\"\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            throw new Exception();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + tmp.getClass().getSimpleName() + \" is not well formatted.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String[] parts \u003d userText.split(\"/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String description \u003d parts[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String connector \u003d parts[1].split(\" \")[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String datetime \u003d parts[1].split(\" \")[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String[] innerPart \u003d parts[1].split(\" \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        if (isDeadline) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            if (innerPart.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                                tmp \u003d new Deadline(description, connector, datetime);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            } else if (innerPart.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                                tmp \u003d new Deadline(description, connector, datetime, Integer.parseInt(innerPart[2]));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        } else if (isEvent) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            if (innerPart.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                                tmp \u003d new Event(description, connector, datetime);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            } else if (innerPart.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                                tmp \u003d new Event(description, connector, datetime, Integer.parseInt(innerPart[2]));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + tmp.getClass().getSimpleName() + \" is not well formatted.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                listing.add(tmp);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText +\u003d tmp + \"\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText +\u003d \"Now you have \" + listing.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (isSubstringEqual(userText, \"delete\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                int taskNum \u003d Integer.parseInt(userText.substring(6).trim()) - 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText +\u003d listing.get(taskNum) + \"\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                listing.remove(taskNum);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText +\u003d \"Now you have \" + listing.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            respText \u003d e.getMessage();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            respText \u003d e.getMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            //dialogContainer.getChildren().add(DialogBox.getDukeDialog(getDialogLabel(e.getMessage()), new ImageView(duke)));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                listing.sort(new TaskComparator());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(fileLoc);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                for (Task i : listing) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    fileWriter.write(i.getFileString() + \"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                respText \u003d e.getMessage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return new DukeResponse(respText, needExit);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Checks if the original prefix substring is equals"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * to the checkString."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param oriString The original String."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param checkString The String to compare."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return True if they are equals, False otherwise"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private boolean isSubstringEqual(String oriString, String checkString) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (oriString.substring(0, Math.min(oriString.length(), checkString.length())).equals(checkString));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 180
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Parser"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * The Parser class is the parser to load the database file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private String fileLoc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Construct the parser instance."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param fileLoc The location of the database file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Parser(String fileLoc) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.fileLoc \u003d fileLoc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Load and parse the database from file into an ArrayList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param fileLoc The location of the database file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return An ArrayList loaded from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public ArrayList\u003cTask\u003e getDatabase(String fileLoc) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        ArrayList\u003cTask\u003e listing \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Path path \u003d Paths.get(fileLoc);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        File file \u003d new File(fileLoc);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                String st;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    listing.add(parseList(st));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return listing;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Load and parse the database from object\u0027s fileLoc into an ArrayList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return An ArrayList loaded from the object\u0027s fileLoc."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public ArrayList\u003cTask\u003e getDatabase() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.getDatabase(fileLoc);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Returns Task object from string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * String example: D|true|read book|by|2019-02-10"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param s string for object parameters."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Task of string."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Task parseList(String s) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String[] params \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        if (params[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            assert(params.length \u003d\u003d 6);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Deadline(params[2], params[3], params[4], !params[1].equals(\"false\"), Integer.parseInt(params[5]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } else if (params[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            assert(params.length \u003d\u003d 6);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Event(params[2], params[3], params[4], !params[1].equals(\"false\"), Integer.parseInt(params[5]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            assert(params.length \u003d\u003d 4);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Task(params[2], !params[1].equals(\"false\"), Integer.parseInt(params[3]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Task class to store the Tasks for duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected int priority;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Create Task object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param description The description of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param isDone The status whether of the Task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param priority The priority the Task in."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param priority The priority of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Task(String description, boolean isDone, int priority) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, false, 10);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Task(String description, int priority) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, false, priority);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Overrides the default toString method make"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * a custom string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Printed format for Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[T][\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Provides the status icon."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Custom string to be saved in database."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Database formatted string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"T|\" + isDone + \"|\" + description + \"|\" + priority;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Makes the status of the object is done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return the string format of the object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Returns the priority of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return Task Priority."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public int getPriority() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 86
    }
  },
  {
    "path": "src/main/java/TaskComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class TaskComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public int compare(Task a, Task b) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return a.getPriority() - b.getPriority();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * CS2103 AY19/20 Semester 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Individual Project"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * Duke Project"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * 11 February 2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * The Ui class handles the creation of the User Interface"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * for the duke chat platform."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " * @author Daniel Alfred Widjaja"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ArrayList\u003cTask\u003e listing;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Handler handler;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Image user;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Image duke;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Initiation for Ui class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param stage The stage to load the UI in."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param parser The parser to load the database."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param handler The class to handle the duke response."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Ui(Stage stage, Parser parser, Handler handler) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.handler \u003d handler;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.listing \u003d parser.getDatabase();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Create the User Interface layout."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        listing \u003d parser.getDatabase();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        //step 2"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String introText \u003d String.join(\"\\n\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"What can I do for you?\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"Here\u0027s a list of command examples you can use:\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"1. todo read book 2\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"2. deadline finish book /by 2020-02-30 5\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"3. event book meeting /at 2020-03-02 1\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"4. list\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"5. done 2\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"6. delete 2\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            \"7. bye\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(getDialogLabel(introText), new ImageView(duke)));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        //step 3"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (handleUserInput() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (handleUserInput() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Handles user input and write the response in the layout"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return the response status,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * 0 if UI doesn\u0027t need to exit,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * 1 if UI need to exit."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private int handleUserInput() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.getChildren().add( new DialogBox(userText, new ImageView(user)));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String userTxt \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        DukeResponse resp \u003d handler.getResponse(userTxt, listing);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(getDialogLabel(resp.getResponse()), new ImageView(duke)));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return resp.getStatus();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 173
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String desc \u003d \"name_test\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Task sample \u003d new Task(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(sample.getFileString(), \"T|false|\" + desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void doTaskTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String desc \u003d \"name_test\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Task sample \u003d new Task(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(sample.done(), \"[T][\\u2713] \" + desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Launcher.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "java -classpath ../bin Launcher \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 34
    }
  }
]
