[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "src/main/data/duke\\.txt"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 2,
      "-": 14
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7,
      "-": 17
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-4.4.1-bin.zip"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 2,
      "-": 3
    }
  },
  {
    "path": "gradlew",
    "fileType": "gradlew",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "##  Gradle start up script for UN*X"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# Attempt to set APP_HOME"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# Resolve links: $0 may be a link"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "PRG\u003d\"$0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "# Need this for relative symlinks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "while [ -h \"$PRG\" ] ; do"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    ls\u003d`ls -ld \"$PRG\"`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    link\u003d`expr \"$ls\" : \u0027.*-\u003e \\(.*\\)$\u0027`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    if expr \"$link\" : \u0027/.*\u0027 \u003e /dev/null; then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        PRG\u003d\"$link\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        PRG\u003d`dirname \"$PRG\"`\"/$link\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "SAVED\u003d\"`pwd`\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"`dirname \\\"$PRG\\\"`/\" \u003e/dev/null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "APP_HOME\u003d\"`pwd -P`\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"$SAVED\" \u003e/dev/null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "APP_NAME\u003d\"Gradle\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "APP_BASE_NAME\u003d`basename \"$0\"`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "DEFAULT_JVM_OPTS\u003d\"\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# Use the maximum available, or set MAX_FD !\u003d -1 to use that value."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "MAX_FD\u003d\"maximum\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "warn () {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "die () {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "# OS specific support (must be \u0027true\u0027 or \u0027false\u0027)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "cygwin\u003dfalse"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "msys\u003dfalse"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "darwin\u003dfalse"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "nonstop\u003dfalse"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "case \"`uname`\" in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  CYGWIN* )"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    cygwin\u003dtrue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  Darwin* )"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    darwin\u003dtrue"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  MINGW* )"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    msys\u003dtrue"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  NONSTOP* )"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    nonstop\u003dtrue"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "esac"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "CLASSPATH\u003d$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "# Determine the Java command to use to start the JVM."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -n \"$JAVA_HOME\" ] ; then"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        # IBM\u0027s JDK on AIX uses strange locations for the executables"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/jre/sh/java\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/bin/java\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ ! -x \"$JAVACMD\" ] ; then"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d\"java\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    which java \u003e/dev/null 2\u003e\u00261 || die \"ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "# Increase the maximum file descriptors if we can."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$cygwin\" \u003d \"false\" -a \"$darwin\" \u003d \"false\" -a \"$nonstop\" \u003d \"false\" ] ; then"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    MAX_FD_LIMIT\u003d`ulimit -H -n`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ $? -eq 0 ] ; then"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ \"$MAX_FD\" \u003d \"maximum\" -o \"$MAX_FD\" \u003d \"max\" ] ; then"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            MAX_FD\u003d\"$MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ulimit -n $MAX_FD"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ $? -ne 0 ] ; then"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            warn \"Could not set maximum file descriptor limit: $MAX_FD\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "# For Darwin, add options to specify how the application appears in the dock"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "if $darwin; then"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    GRADLE_OPTS\u003d\"$GRADLE_OPTS \\\"-Xdock:name\u003d$APP_NAME\\\" \\\"-Xdock:icon\u003d$APP_HOME/media/gradle.icns\\\"\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "# For Cygwin, switch paths to Windows format before running java"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "if $cygwin ; then"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    APP_HOME\u003d`cygpath --path --mixed \"$APP_HOME\"`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    CLASSPATH\u003d`cygpath --path --mixed \"$CLASSPATH\"`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d`cygpath --unix \"$JAVACMD\"`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    # We build the pattern for arguments to be converted via cygpath"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    ROOTDIRSRAW\u003d`find -L / -maxdepth 1 -mindepth 1 -type d 2\u003e/dev/null`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    SEP\u003d\"\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    for dir in $ROOTDIRSRAW ; do"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        ROOTDIRS\u003d\"$ROOTDIRS$SEP$dir\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        SEP\u003d\"|\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    OURCYGPATTERN\u003d\"(^($ROOTDIRS))\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    # Add a user-defined pattern to the cygpath arguments"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ \"$GRADLE_CYGPATTERN\" !\u003d \"\" ] ; then"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        OURCYGPATTERN\u003d\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    # Now convert the arguments - kludge to limit ourselves to /bin/sh"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    i\u003d0"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    for arg in \"$@\" ; do"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        CHECK\u003d`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        CHECK2\u003d`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ $CHECK -ne 0 ] \u0026\u0026 [ $CHECK2 -eq 0 ] ; then                    ### Added a condition"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            eval `echo args$i`\u003d`cygpath --path --ignore --mixed \"$arg\"`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        else"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            eval `echo args$i`\u003d\"\\\"$arg\\\"\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        i\u003d$((i+1))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    case $i in"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        (0) set -- ;;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        (1) set -- \"$args0\" ;;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        (2) set -- \"$args0\" \"$args1\" ;;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    esac"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "# Escape application args"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "save () {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    for i do printf %s\\\\n \"$i\" | sed \"s/\u0027/\u0027\\\\\\\\\u0027\u0027/g;1s/^/\u0027/;\\$s/\\$/\u0027 \\\\\\\\/\" ; done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \" \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "APP_ARGS\u003d$(save \"$@\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "# Collect all arguments for the java command, following the shell quoting and substitution rules"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname\u003d$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$(uname)\" \u003d \"Darwin\" ] \u0026\u0026 [ \"$HOME\" \u003d \"$PWD\" ]; then"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  cd \"$(dirname \"$0\")\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "exec \"$JAVACMD\" \"$@\""
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 1,
      "-": 171
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 1,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected LocalDate datetime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Deadline(String description, String connector, String datetime, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.connector \u003d connector;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.datetime \u003d LocalDate.parse(datetime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Deadline(String description, String connector, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, connector, datetime, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"D|\" + isDone + \"|\" + description + \"|\" + connector + \"|\" + datetime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[D][\" + getStatusIcon() + \"] \" + description + \" (\" + connector + \": \" + this.getDatetime() + \")\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.application.Application; import javafx.scene.Scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private ArrayList\u003cTask\u003e listing;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private String fileLoc;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    //private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/src/main/resources/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "//    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/main/resources/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        //step 2"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        listing \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        fileLoc \u003d \"./src/main/data/duke.txt\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Path path \u003d Paths.get(fileLoc);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            Files.createFile(path);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        File file \u003d new File(fileLoc);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                String st;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    listing.add(parseList(st));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(\"Hello! I\u0027m Duke\\nWhat can I do for you?\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        //step 3"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (handleUserInput() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (handleUserInput() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Task parseList(String s) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String[] params \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        if (params[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Deadline(params[2], params[3], params[4], !params[1].equals(\"false\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } else if (params[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Event(params[2], params[3], params[4], !params[1].equals(\"false\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            return new Task(params[2], !params[1].equals(\"false\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private int handleUserInput() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String curText \u003d userInput.getText();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        int needExit \u003d 0;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        boolean isTodo \u003d false, isDeadline \u003d false, isEvent \u003d false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(curText));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            if (curText.equals(\"bye\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //          exit the program"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                needExit \u003d 1;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (curText.equals(\"list\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //            query the list of task"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                for (int i \u003d 0; i \u003c listing.size(); i++) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    curText +\u003d (i + 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    curText +\u003d \". \" + listing.get(i) + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (isSubstringEqual(curText, \"done\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //            done doing task"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                int taskNum \u003d Integer.parseInt(curText.substring(4).trim()) - 1;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText +\u003d listing.get(taskNum).done();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if ((isTodo \u003d isSubstringEqual(curText, \"todo\")) ||"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    (isDeadline \u003d isSubstringEqual(curText, \"deadline\")) ||"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    (isEvent \u003d isSubstringEqual(curText, \"event\"))) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                //          add task to do"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                Task tmp \u003d new Task(curText);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                if (isTodo) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        curText \u003d curText.substring(5).trim();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        tmp \u003d new Task(curText);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        if (curText.equals(\"\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            throw new Exception();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + tmp.getClass().getSimpleName() + \" is not well formatted.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String[] parts \u003d curText.split(\"/\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String description \u003d parts[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String connector \u003d parts[1].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        String datetime \u003d parts[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        if (isDeadline) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            tmp \u003d new Deadline(description, connector, datetime);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        } else if (isEvent) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                            tmp \u003d new Event(description, connector, datetime);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a \" + tmp.getClass().getSimpleName() + \" is not well formatted.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                listing.add(tmp);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText +\u003d tmp + \"\\n\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText +\u003d \"Now you have \" + listing.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else if (isSubstringEqual(curText, \"delete\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                int taskNum \u003d Integer.parseInt(curText.substring(6).trim()) - 1;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText +\u003d listing.get(taskNum) + \"\\n\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                listing.remove(taskNum);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                curText +\u003d \"Now you have \" + listing.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(curText));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(e.getMessage()));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(e.getMessage()));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(fileLoc);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                for (Task i : listing) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                    fileWriter.write(i.getFileString() + \"\\n\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "                dialogContainer.getChildren().add(getDialogLabel(e.getMessage()));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return needExit;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private boolean isSubstringEqual(String oriString, String checkString){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (oriString.substring(0, Math.min(oriString.length(), checkString.length())).equals(checkString));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 257,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected LocalDate datetime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Event(String description, String connector, String datetime, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.connector \u003d connector;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.datetime \u003d LocalDate.parse(datetime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Event(String description, String connector, String datetime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, connector, datetime, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"E|\" + isDone + \"|\" + description + \"|\" + connector + \"|\" + datetime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[E][\" + getStatusIcon() + \"] \" + description + \" (\" + connector + \": \" + this.getDatetime() + \")\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 32
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (\"[T][\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return \"T|\" + isDone + \"|\" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public String done() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 31
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void createTaskTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String desc \u003d \"name_test\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Task sample \u003d new Task(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(sample.getFileString(), \"T|false|\" + desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    public void doTaskTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        String desc \u003d \"name_test\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        Task sample \u003d new Task(desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "        assertEquals(sample.done(), \"[T][\\u2713] \" + desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Launcher.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "java -classpath ../bin Launcher \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dawidjaja"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dawidjaja": 34
    }
  }
]
