[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 32,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "T | 1 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "T | 1 | buy bread"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "E | 0 | project meeting | Mar 5 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "D | 0 | return book | May 3 2020"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "D | 1 | watch webcast | Mar 5 2020"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 6
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Deadline constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param by When the task must be done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 36
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Main class for running the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private String welcomeMessage \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"Hello! What can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initializes the Duke program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Any read/write operations errors resulting from storage.load() will be thrown."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Duke() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Storage storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        parser \u003d new Parser(tasks, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Processes user input and return a response."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            response \u003d parser.parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 42,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Customized exception to interact with user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * DukeException constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param message What to inform the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieve the exception message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Exception message to be shown to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param at When the task occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 36
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initializes and starts the application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param stage The window for the application to run on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            stage.setTitle(\"Duke Program\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 34
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Interpret and process user inputs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Saves tasks, storage and ui class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks The TaskList class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage The Storage class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Parser(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Processes the user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param userInput The commands issued to duke by the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the response generated from the corresponding commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String input \u003d userInput.trim().split(\" \", 2)[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        switch (input.toUpperCase()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"LIST\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new ListCommand().execute(storage, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"DONE\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new DoneCommand(userInput, tasks.size()).execute(storage, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"DELETE\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new DeleteCommand(userInput, tasks.size()).execute(storage, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"TODO\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new TodoCommand(userInput).execute(storage, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"DEADLINE\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new DeadlineCommand(userInput).execute(storage, tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"EVENT\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new EventCommand(userInput).execute(storage, tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"FIND\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new FindCommand(userInput).execute(storage, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"SORT\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d new SortCommand().execute(storage, tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 69
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Creates, loads and stores the program data of duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initialize the file with the filepath specified by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param filepath The location where the program data will be saved or loaded from."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        file \u003d new File(new File(filepath).getAbsolutePath());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Loads program data from the filepath specified by the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * A new file will be created if no existing data is found."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return An ArrayList containing existing data, if any."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Errors related to read/write operations will be thrown."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    String[] task \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    String taskType \u003d task[0].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    boolean isDone \u003d task[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task todo \u003d new Todo(task[2].trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task deadline \u003d new Deadline(task[2].trim(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                                LocalDate.parse(task[3].trim(), DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            deadline.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task event \u003d new Event(task[2].trim(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                                LocalDate.parse(task[3].trim(), DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            event.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Error creating or loading file.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Writes data to the file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param data Data to be written."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param append Indicates whether data should be appended to the end of file or overwrites it."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Errors related to write operations will be thrown."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void writeToFile(String data, boolean append) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, append);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fw.write(data);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Error writing to file.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overloaded method which modifies the file content according to the user\u0027s request."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param command Specify the operation to be done on the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber Which task to perform the operation on."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Errors related to read/write operations will be thrown."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void writeToFile(String command, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (i \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    if (command.equals(\"DONE\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        line \u003d line.substring(0, 4) + \"1\" + line.substring(5);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else if (command.equals(\"DELETE\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                lines.add(line + \"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            for (String s : lines) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                bw.write(s);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Error writing to file.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overloaded method which writes the given task list to file, overriding any old data."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks Task list to be written."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Errors related to write operations will be thrown."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String className \u003d t.getClass().getSimpleName();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            int isTaskDone \u003d t.isTaskDone() ? 1 : 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (className.equalsIgnoreCase(\"TODO\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                data +\u003d \"T | \" + isTaskDone + \" | \" + t.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } else if (className.equalsIgnoreCase(\"DEADLINE\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                data +\u003d \"D | \" + isTaskDone + \" | \" + d.getDescription() + \" | \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        + d.getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } else if (className.equalsIgnoreCase(\"EVENT\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                data +\u003d \"E | \" + isTaskDone + \" | \" + e.getDescription() + \" | \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        + e.getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        writeToFile(data, false);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 156
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represent a task to be done by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Described by a string and boolean to indicate whether its done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the task. Tasks are not done by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description What the task is about."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieves the tick or X symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * A tick if it is done and a X if it is not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns as a string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return (isDone ? \"[✓] \" : \"[✘] \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Throws exception if task is already done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Task is already done!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return this.description.compareTo(other.description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Concatenate the status icon with the description."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 62
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Manages the tasks of the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * TaskList constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks ArrayList of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Returns a task specified by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber The task number."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Returns the number of tasks currently in the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Remove a task from the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber Specifies which task to remove."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the task removed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task remove(int taskNumber) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieves a list of tasks that matches with the keyword entered by user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param keyword The keyword for the tasks to be matched against."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the list of tasks with found matches."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Sorts the task list in alphabetically order."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Sorted task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public ArrayList\u003cTask\u003e sort() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Collections.sort(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 81
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Todo constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Class is declared abstract for subclasses to implement the execute method."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Execute the corresponding command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the commands to read/write data from the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the commands to make operations on the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Every command should return an response to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Read/write errors are thrown as exceptions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public abstract String execute(Storage storage, TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a deadline command issued by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the deadline command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the description and deadline of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when user\u0027s input is incomplete or in incorrect format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public DeadlineCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String[] taskDetails;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            taskDetails \u003d inputs[1].split(\" /by \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (taskDetails[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            description \u003d taskDetails[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            by \u003d LocalDate.parse(taskDetails[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a date using \u0027 /by \u0027 with the format yyyy-mm-dd..\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a valid date with the format yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to write data."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to insert the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to be displayed to the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error writing file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Task deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assert (size + 1) \u003d\u003d tasks.size() : \"Deadline command error\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(\"D | 0 | \" + description + \" | \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\", true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n    \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + deadline + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 65
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a delete command issued by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the delete command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the task number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param size Number of tasks currently in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when the task number is out of range or the input is not a valid integer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public DeleteCommand(String input, int size) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputs[1].trim()) - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (taskNumber \u003e\u003d size) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a task number within range.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to read/write data."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to modify the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to be displayed to the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error reading/writing file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Task deletedTask \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assert (size - 1) \u003d\u003d tasks.size() : \"Delete command error\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(\"DELETE\", taskNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n    \" + deletedTask"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 50
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a done command issued by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the done command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the task number."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param size Number of tasks currently in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when the task number is out of range or the input is not a valid integer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public DoneCommand(String input, int size) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputs[1].trim()) - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (taskNumber \u003e\u003d size) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a task number within range.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to read/write data."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to modify the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to be displayed to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error reading/writing file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assert tasks.get(taskNumber).isTaskDone() : \"Done command error.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(\"DONE\", taskNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n    \" + tasks.get(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 47
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents an event command issued by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the event command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the description and date of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when user\u0027s input is incomplete or in incorrect format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public EventCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String[] taskDetails;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            taskDetails \u003d inputs[1].split(\" /at \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (taskDetails[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            description \u003d taskDetails[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            at \u003d LocalDate.parse(taskDetails[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a date using \u0027 /at \u0027 with the format yyyy-mm-dd..\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please provide a valid date with the format yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to write data."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to insert the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to be displayed to the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error writing file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Task event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assert (size + 1) \u003d\u003d tasks.size() : \"Event command error\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(\"E | 0 | \" + description + \" | \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\", true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n    \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + event + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 65
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a find command issued by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the find command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the search keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when user did not specify a keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public FindCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            keyword \u003d inputs[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The keyword for find cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class is not used."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to retrieve the tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response containing all the matching tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Not thrown."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        if (result.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d \"No match found.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            for (int i \u003d 0; i \u003c result.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                msg +\u003d i + 1 + \".\" + result.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a list command issued by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class is not used."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to retrieve the tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response containing all the tasks currently in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Not thrown."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String msg \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg +\u003d i + 1 + \".\" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 27
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a sort command issued by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to write data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to get the sorted list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response containing the sorted task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error writing file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e sortedTasks \u003d tasks.sort();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String msg \u003d \"The tasks have been sorted alphabetically.\\nHere is the new list:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (int i \u003d 0; i \u003c sortedTasks.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            msg +\u003d i + 1 + \".\" + sortedTasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(sortedTasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 31
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represents a todo command issued by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Todo todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the todo command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param input User\u0027s input to specify the description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when user did not specify a description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public TodoCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            this.description \u003d inputs[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage Storage class for the command to write data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks TaskList class for the command to insert the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Response to be displayed to the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @throws DukeException Thrown when there is an error writing file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String execute(Storage storage, TaskList tasks) throws DukeException  {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assert (size + 1) \u003d\u003d tasks.size() : \"Todo command error\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        storage.writeToFile(\"T | 0 | \" + description + \"\\n\", true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n    \" + todo"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 47
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Creates a user dialog box."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param text Message to be used with the dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param img Image to be used with the dialog box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return The dialog box object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Creates a duke dialog box."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param text Message to be used with the dialog box."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param img Image to be used with the dialog box."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return The dialog box object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 75
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initializes the main window and displays the welcome message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * If an error occurs while initializing duke, an exception message will be displayed instead."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            duke \u003d new Duke();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    DialogBox.getDukeDialog(e.getMessage(), dukeImage));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void getDescriptionTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-03-20\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"return book\", deadline.getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: Mar 20 2020)\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-03-20\")).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 21
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"[T][✘] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin /Users/cranston/OneDrive/\"Sem 4\"/CS2103/\"Individual Project\"/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 35
    }
  }
]
