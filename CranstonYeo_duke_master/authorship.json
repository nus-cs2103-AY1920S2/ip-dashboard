[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 22,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "E | 1 | project meeting | Mar 3 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "D | 1 | return book | Mar 20 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "E | 0 | movie | Mar 12 2020"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Deadline constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param by When the task must be done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 32
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Main class for running the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initializes the Duke program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param filePath Location of the output file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Storage storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        parser \u003d new Parser(tasks, storage, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Runs the Duke program and starts to receive inputs from user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String input \u003d ui.receiveInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        while (parser.parse(input)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            input \u003d ui.receiveInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ui.fareWellMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 35,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Customized exception to interact with user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * DukeException constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param message What to inform the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieve the exception message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Exception message to be shown to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param at When the task occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 32
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Interpret and process user inputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Saves tasks, storage and ui class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks The TaskList class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param storage The Storage class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param ui The Ui class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Parser(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Processes the user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param userInput The commands issued to duke by the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns false when user wants to terminate the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public boolean parse(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String data;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String[] inputs \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        switch (inputs[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            tasks.list();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(inputs[1].trim()) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (inputs[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        ui.exceptionMessage(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(\"Nice! I\u0027ve marked this task as done:\\n    \" + tasks.get(taskNumber));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    Task deletedTask \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(\"Noted. I\u0027ve removed this task: \\n    \" + deletedTask"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                storage.writeToFile(inputs[0], taskNumber);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.exceptionMessage(new DukeException(\"☹ OOPS!!! Please provide a task number within range.\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                Task todo \u003d new Todo(inputs[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                data \u003d \"T | 0 | \" + inputs[1] + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                storage.writeToFile(data);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.userMessage(\"Got it. I\u0027ve added this task:\\n    \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        + todo + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.exceptionMessage(new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                String[] taskDetails \u003d inputs[1].split(\"/by \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (taskDetails[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(taskDetails[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    Task deadline \u003d new Deadline(taskDetails[0].trim(), date);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    data \u003d \"D | 0 | \" + taskDetails[0].trim() + \" | \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    storage.writeToFile(data);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(\"Got it. I\u0027ve added this task:\\n    \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            + deadline + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.exceptionMessage(new DukeException("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            \"☹ OOPS!!! Please provide a valid date with the format yyyy-mm-dd.\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.exceptionMessage(new DukeException("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            \"☹ OOPS!!! Please provide a date using \u0027/by \u0027 with the format yyyy-mm-dd.\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.exceptionMessage(new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                String[] taskDetails \u003d inputs[1].split(\"/at \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (taskDetails[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(taskDetails[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    Task event \u003d new Event(taskDetails[0].trim(), date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    data \u003d \"E | 0 | \" + taskDetails[0].trim() + \" | \""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    storage.writeToFile(data);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(\"Got it. I\u0027ve added this task:\\n    \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            + event + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.exceptionMessage(new DukeException("
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            \"☹ OOPS!!! Please provide a valid date with the format yyyy-mm-dd.\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.exceptionMessage(new DukeException("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            \"☹ OOPS!!! Please provide a date using \u0027/at \u0027 with the format yyyy-mm-dd..\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.exceptionMessage(new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ArrayList\u003cTask\u003e result \u003d tasks.find(inputs[1]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (result.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(\"No match found.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.userMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                for (int i \u003d 0; i \u003c result.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    ui.userMessage(i + 1 + \".\" + result.get(i));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                ui.exceptionMessage(new DukeException(\"☹ OOPS!!! The keyword for find cannot be empty.\"));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            ui.exceptionMessage(new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 154
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Creates, loads and stores the program data of duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Initialize the file with the filepath specified by user and saves the ui class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param filepath The location where the program data will be saved or loaded from."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param ui The Storage class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Storage(String filepath, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        file \u003d new File(new File(filepath).getAbsolutePath());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Loads program data from the filepath specified by the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * A new file will be created if no existing data is found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return An ArrayList containing existing data, if any."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    String[] task \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    String taskType \u003d task[0].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    boolean isDone \u003d task[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task todo \u003d new Todo(task[2].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task deadline \u003d new Deadline(task[2].trim(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                                LocalDate.parse(task[3].trim(), DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            deadline.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        Task event \u003d new Event(task[2].trim(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                                LocalDate.parse(task[3].trim(), DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        if (isDone) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                            event.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            ui.exceptionMessage(new DukeException(\"☹ OOPS!!! Error creating or loading file.\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Writes data to the end of the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param data Data to be written."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void writeToFile(String data) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fw.write(data);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            ui.exceptionMessage(new DukeException(\"☹ OOPS!!! Error writing to file.\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overloaded method which modifies the file content according to the user\u0027s request."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param command Specify the operation to be done on the file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber Which task to perform the operation on."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void writeToFile(String command, int taskNumber) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                if (i \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        line \u003d line.substring(0, 4) + \"1\" + line.substring(5);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                lines.add(line + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            for (String s : lines) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                bw.write(s);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            ui.exceptionMessage(new DukeException(\"☹ OOPS!!! Error writing to file.\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 129
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Represent a task to be done by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Described by a string and boolean to indicate whether its done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Constructs the task. Tasks are not done by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description What the task is about."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieves the tick or X symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * A tick if it is done and a X if it is not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns as a string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return (isDone ? \"[✓] \" : \"[✘] \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Throws exception if task is already done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Task is already done!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Concatenate the status icon with the description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 54
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Manages the tasks of the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * TaskList constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param tasks ArrayList of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * List out all the tasks currently in the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            System.out.println(i + 1 + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Returns a task specified by the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber The task number."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Returns the number of tasks currently in the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Remove a task from the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param taskNumber Specifies which task to remove."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the task removed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Task remove(int taskNumber) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Retrieves a list of tasks that matches with the keyword entered by user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param keyword The keyword for the tasks to be matched against."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the list of tasks with found matches."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 80
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * One of the tasks that could be created by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Todo constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param description Describes the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Overwritten toString to fit format requirements."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " * Receive inputs from the user and interact with him or her."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Ui constructor which initializes the scanner."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Welcome message to be displayed to the user upon startup of the Duke program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Request inputs from the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @return Returns the input of the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public String receiveInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Displays exception messages to user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param e Exception to be displayed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void exceptionMessage(DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Displays user messages to user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * @param msg Message to be displayed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void userMessage(String msg) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Closes the scanner."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     * Message to be displayed to the user before the program terminates."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void fareWellMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 70
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void getDescriptionTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-03-20\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"return book\", deadline.getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: Mar 20 2020)\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-03-20\")).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 21
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "        assertEquals(\"[T][✘] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin /Users/cranston/OneDrive/\"Sem 4\"/CS2103/\"Individual Project\"/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CranstonYeo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "CranstonYeo": 35
    }
  }
]
