[
  {
    "path": "Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "T /n 1 /n read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "D /n 1 /n return book /n 2020-02-03"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "E /n 0 /n project meeting /n 2020-03-20 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "T /n 0 /n join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "T /n 0 /n borrow book"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 5
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 24,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eDeadline class\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * Class to create deadline task for duke"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class DeadLine extends task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private LocalDate ld;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Class Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param end"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public DeadLine (String name, String end) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.date \u003d end;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.ld \u003d LocalDate.parse(end);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method to generate string to save to text file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"D /n 1 /n \" + this.getName() + \" /n \" + this.date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"D /n 0 /n \" + this.getName() + \" /n \" + this.date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Handles Snooze function for deadlines"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param newDate"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void snooze(String newDate) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.ld \u003d LocalDate.parse(newDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.date \u003d newDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Return false cause this is toDo;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public boolean isToDo() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Generic to print function"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + ld.getDayOfMonth() + \" \" + ld.getMonth() + \" \" + ld.getYear() + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 63
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private int flag \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private ArrayList\u003ctask\u003e mylist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private static String printlist(ArrayList\u003ctask\u003e ls) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"\\n\" + (i + 1) + \".\" + ls.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String removetask (ArrayList\u003ctask\u003e ls, int ind) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        task temp \u003d ls.remove(ind - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        output \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        output \u003d output + \"\\n\" + temp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        output \u003d output + \"\\nNow you have \" + ls.size() + \" tasks on the list.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void start(Stage stage) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String dukeStart() throws IOException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Duke\\nWhat can i do for you?\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        mylist \u003d storage.readTxtFile();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (mylist.size() !\u003d 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            hello \u003d hello + \"\\nYou have \" + mylist.size() + \" tasks from the previous session\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return hello;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        );"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleDone(int doneIndex) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            task temp \u003d mylist.get(doneIndex - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            temp.markDone();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String output \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"\\n\" + mylist.get(doneIndex - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! You seem to have entered a wrong index.\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleToDo(String toDoRaw) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            ToDo temp \u003d new ToDo(toDoRaw.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + temp + \"\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"Now you have \" + (mylist.size() + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            mylist.add(temp);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! You\u0027re missing some descriptions for your todo.\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! You\u0027re missing some descriptions for your todo.\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleDeadline(String deadlineRaw) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String wodl \u003d deadlineRaw.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String[] myarr \u003d wodl.split(\" /by \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            DeadLine temp \u003d new DeadLine(myarr[0], myarr[1]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + temp + \"\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"Now you have \" + (mylist.size() + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            mylist.add(temp);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! You\u0027re missing some descriptions for your deadline.\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleEvent(String eventRaw) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String woe \u003d eventRaw.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String[] myarr \u003d woe.split(\" /at \");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            Event temp \u003d new Event(myarr[0], myarr[1]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + temp + \"\\n\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"Now you have \" + (mylist.size() + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            mylist.add(temp);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! You\u0027re missing some descriptions for your event.\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleDelete(int deleteIndex) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return removetask(mylist, deleteIndex);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch(IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"☹ OOPS!!! That index doesn\u0027t seems to be missing\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleFind(String findRaw) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        ArrayList\u003cInteger\u003e searchResults \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String keyword \u003d findRaw.replaceFirst(\"find \", \"\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        for (int i \u003d 0; i \u003c mylist.size(); i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            if (mylist.get(i).getName().contains(keyword)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                searchResults.add(i);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else {}"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (searchResults.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d \"Sorry, I can\u0027t seem to find anything related to \" + keyword;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d \"Here are the matching tasks in your list\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            for (int i \u003d 0; i \u003c searchResults.size(); i++) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                output \u003d output + \"\\n\" + (i + 1) + \".\" + mylist.get(searchResults.get(i));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String handleSnooze(int snoozeIndex, String snoozeRaw) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            task toSnooze \u003d mylist.get(snoozeIndex - 1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            if (toSnooze.isToDo()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                output \u003d output + \"☹ OOPS!!! You can\u0027t snooze a toDo Task.\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                toSnooze.snooze(snoozeRaw);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                output \u003d output + \"YAY! Your event has been snoozed to \" + snoozeRaw + \"\\n\" + toSnooze;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                storage.updateTxtFile(mylist);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            output \u003d output + \"☹ OOPS!!! You\u0027re missing some descriptions for your Snooze.\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        while(flag \u003d\u003d 0) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            String[] inarr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            flag \u003d 1;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return printlist(mylist);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleDone(Integer.parseInt(inarr[1]));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleToDo(input);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleDeadline(input);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleEvent(input);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleDelete(Integer.parseInt(inarr[1]));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleFind(input);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else if (inarr[0].equals(\"snooze\")) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return handleSnooze(Integer.parseInt(inarr[1]), inarr[2]);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 289,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eDuke Exception Class\u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * simple class to represent duke exceptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method calls standard exception constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param error"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eEvent class\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * Class to create event task for duke"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class Event extends task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String from;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private LocalDate ld;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Class Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public Event (String name, String date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String[] temp \u003d date.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.ld \u003d LocalDate.parse(temp[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.from \u003d temp[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method to generate string to save to text file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"E /n 1 /n \" + this.getName() + \" /n \" + this.date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"E /n 0 /n \" + this.getName() + \" /n \" + this.date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method handles Snooze for Event class"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param newDate"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void snooze(String newDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String[] temp \u003d newDate.split(\"/\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.ld \u003d LocalDate.parse(temp[0]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.date \u003d temp[0] + \" \" + temp[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.from \u003d temp[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Return false cause this is toDo;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public boolean isToDo() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Generic to print function"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + ld.getDayOfMonth() + \" \" + ld.getMonth() + \" \" + ld.getYear() + \" \" + from + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 68
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void setDuke(Duke d) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                DialogBox.getDukeDialog(d.dukeStart(), dukeImage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 55
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eStorage Class\u003c/h1\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * handles interaction with text file for duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Class Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.file \u003d new File(\"Duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method updates text file with current list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param ls"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void updateTxtFile(ArrayList\u003ctask\u003e ls) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(this.file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        pw.write(\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        PrintWriter toWrite \u003d new PrintWriter(this.file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String finalToWrite \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            finalToWrite \u003d finalToWrite + ls.get(i).toSave() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        toWrite.write(finalToWrite);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        toWrite.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method reads text file from filepath and return arraylist of tasks if present"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * if not, returns empty arraylist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return Arraylist"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public ArrayList\u003ctask\u003e readTxtFile() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        boolean check \u003d this.file.exists();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.file.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        Scanner fsc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        ArrayList\u003ctask\u003e mylist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (check \u003d\u003d false) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            while (fsc.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                String currline \u003d fsc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                String[] temparr \u003d currline.split(\" /n \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                if (temparr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    ToDo td \u003d new ToDo(temparr[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    assert (temparr[1].equals(\"1\") || temparr[1].equals(\"0\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    if (temparr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                        td.markDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    mylist.add(td);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                } else if (temparr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    DeadLine d \u003d new DeadLine(temparr[2], temparr[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    assert (temparr[1].equals(\"1\") || temparr[1].equals(\"0\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    if (temparr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                        d.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    mylist.add(d);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                } else if (temparr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    Event e \u003d new Event(temparr[2], temparr[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    assert (temparr[1].equals(\"1\") || temparr[1].equals(\"0\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    if (temparr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                        e.markDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                    mylist.add(e);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            System.out.println(\"You currently have \" + mylist.size() + \" items from the previous session\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return mylist;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 103
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eToDo Class\u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * Class for ToDo task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class ToDo extends task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Class Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method to generate string to save to text file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"T /n 1 /n \" + this.getName();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return \"T /n 0 /n \" + this.getName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void snooze(String newDate) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Return true cause this is toDo;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public boolean isToDo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Generic to print function"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 49
    }
  },
  {
    "path": "src/main/java/task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * \u003ch1\u003eTask Class\u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " * Super Class for Deadline, Event and ToDo classes"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "public class task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    private String Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Class Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.Name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.status \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method returns task Name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return this.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method checks if Task is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return Boolean"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        if (this.status.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method sets Task as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        this.status \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method template for Deadline, Event and ToDo"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method template for Deadline, Event and ToDo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @param newDate"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public void snooze(String newDate) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Method to check if current instance is toDo"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public boolean isToDo () {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * Generic toString method"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        return \"[\" + this.status + \"] \" + this.Name;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 80
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CENTER_ELLIPSIS\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003cAnchorPane maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" hvalue\u003d\"1.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"559.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mpang45456"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mpang45456"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "mpang45456": 21
    }
  }
]
