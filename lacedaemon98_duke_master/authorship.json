[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "1. [T][v] hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "2. [T][x] hi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "3. [E][v] hello | at: Dec 10 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "4. [T][x] hello"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly created deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public Deadline(String name, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly read deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public Deadline(String name, LocalDate time, boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Specify print format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @return print format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            return (\"[D][v] \" + name + \" | by: \"+time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return (\"[D][x] \" + name+ \" | by: \"+time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 44
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/nobita.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/doraemon.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        // You will need to import javafx.scene.layout.Region for this."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        //Add functionality to handle user input."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        // You will need to import javafx.scene.control.Label."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DialogBox.getUserDialog(input, user),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DialogBox.getDukeDialog(response, duke)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static ArrayList\u003cTask\u003e commandList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        storage.startReading();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        ui.opening();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        parser.parse();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        ui.ending();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 163
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly created event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public Event(String name, LocalDate time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly read event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public Event(String name, LocalDate time, boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Specify print format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @return print format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            return (\"[E][v] \" + name + \" | at: \"+time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return (\"[E][x] \" + name+ \" | at: \"+time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 42
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nobita.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/doraemon.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Process user input and call classes to handle them accordingly"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void parse() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String word \u003d input.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        while (!word.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            if (word.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                TaskList.printList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String[] words \u003d word.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                if (words[0].equalsIgnoreCase(\"done\") \u0026\u0026 words[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    int doneTarget \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    if (doneTarget \u003e 0 \u0026\u0026 doneTarget \u003c\u003d Duke.commandList.size()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        TaskList.doneTask(Duke.commandList.get(doneTarget - 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        storage.writeList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ui.printErrorNotFound();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else if (words[0].equalsIgnoreCase(\"delete\") \u0026\u0026 words[1].matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    int deleteTarget \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    if (deleteTarget \u003e 0 \u0026\u0026 deleteTarget \u003c\u003d Duke.commandList.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        TaskList.deleteTask(Duke.commandList.get(deleteTarget - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        storage.writeList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ui.printErrorNotFound();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else if (words[0].equalsIgnoreCase(\"todo\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    if (word.contains(\"todo \") \u0026\u0026 !word.substring(5).isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        String substr \u003d word.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ToDo task \u003d new ToDo(substr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        TaskList.addTask(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        storage.writeList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ui.printErrorNoTaskName();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else if (words[0].equalsIgnoreCase(\"deadline\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    String substr \u003d word.substring(9);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    if (substr.contains(\" /\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        String[] deadlineSplit \u003d substr.split(\" /\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(deadlineSplit[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            Deadline task \u003d new Deadline(deadlineSplit[0], date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            TaskList.addTask(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            ui.printErrorWrongDateFormat();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        storage.writeList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ui.printErrorNoTime();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else if (words[0].equalsIgnoreCase(\"event\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    String substr \u003d word.substring(6);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    if (substr.contains(\" /\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        String[] eventSplit \u003d substr.split(\" /\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            LocalDate date \u003d LocalDate.parse(eventSplit[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            Event task \u003d new Event(eventSplit[0], date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            TaskList.addTask(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            ui.printErrorWrongDateFormat();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        storage.writeList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        ui.printErrorNoTime();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else if (words[0].equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    ArrayList\u003cTask\u003e taskFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    for (Task task : Duke.commandList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        if (task.name.contains(words[1])) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                            taskFound.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskFound.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        int a \u003d i + 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                        System.out.print(a + \". \" + taskFound.get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    ui.printErrorUnderstanding();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            word \u003d input.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 108
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Start reading the data when first launch"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void startReading() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            printFileContents(\"data/duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Read file data and process its content"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            String sentence \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            String type \u003d sentence.substring(4, 5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            boolean done \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            if (sentence.substring(7, 8).equals(\"x\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                done \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String substr \u003d sentence.substring(10);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                ToDo task \u003d new ToDo(substr, done);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                Duke.commandList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String substr \u003d sentence.substring(10);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String[] deadlineSplit \u003d substr.split(\" \\\\| by: \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(deadlineSplit[1], formatter);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                Deadline task \u003d new Deadline(deadlineSplit[0], date, done);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                Duke.commandList.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String substr \u003d sentence.substring(10);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                String[] eventSplit \u003d substr.split(\" \\\\| at: \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(eventSplit[1], formatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                Event task \u003d new Event(eventSplit[0], date, done);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                Duke.commandList.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Update the content of the list in to the txt file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected static void writeList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String file2 \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String towrite \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            if (Duke.commandList.size() \u003e 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                for (int i \u003d 0; i \u003c Duke.commandList.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    int a \u003d i + 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    towrite+\u003da + \". \" + Duke.commandList.get(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                    writeToFile(file2, towrite);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 90
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Task constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Set a task as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 28
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * print the list of current tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        if (Duke.commandList.size() \u003e 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            for (int i \u003d 0; i \u003c Duke.commandList.size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                int a \u003d i + 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                System.out.print(a + \". \" + Duke.commandList.get(i));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, I can\u0027t find any task in your list\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Mark a task as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void doneTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.print(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Remove a task from the current list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void deleteTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Duke.commandList.remove(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.print(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"Now you have \"+ Duke.commandList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Add a task into the list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Duke.commandList.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.print(\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.print(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.print(\"Now you have \" + Duke.commandList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 52
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly created todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Constructor of newly read todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public ToDo(String name, boolean done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Specify print format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * @return print format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            return (\"[T][v] \" + name+\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        return (\"[T][x] \" + name+\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 38
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print the opening menu"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void opening() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        TaskList.printList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print the closing statements"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void ending() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print the straight lines"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print error if command not recognised"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printErrorUnderstanding() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print error if time not specified"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printErrorNoTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but you need to specify the time\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print error if task not found"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printErrorNotFound() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, I can\u0027t find that task\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print error if date entered in wrong format"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printErrorWrongDateFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, wrong date format\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     * Print error if task name not specified"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    protected void printErrorNoTaskName() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 75
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void testTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        ToDo task \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        TaskList.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        assertEquals(\"Got it. I\u0027ve added this task: \\n\"   + \"[T][✗] test\\n\"  + \"Now you have 1 tasks in the list.\\n\" , os.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    public void testUi() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        ui.printErrorUnderstanding();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + System.getProperty(\"line.separator\") , os.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 39
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "2.[D][✗] return book (by: by Sunday)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "3.[E][✗] ject meeting (at: at Mon 2-4pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "2.[D][✗] return book (by: by Sunday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "3.[E][✗] ject meeting (at: at Mon 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "2.[D][✗] return book (by: by Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "3.[E][✗] ject meeting (at: at Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lacedaemon98"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lacedaemon98": 21
    }
  }
]
