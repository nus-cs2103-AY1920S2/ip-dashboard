[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "kschiew": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    mainClassName \u003d \u0027com.duke.bot.Launcher\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    archiveVersion \u003d \"0.3\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kschiew": 36,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Duke is a personalised chat bot designed to help you keep track of your day-to-day task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "![The GUI of duke](./Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "**_[Link to the repo](https://github.com/kschiew/duke)_**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Quit and Save"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Quit the Duke program. The task list will be updated before saving."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `bye`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Bye. Hope to see you again soon! :)`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Show task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Print the entire task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `list`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Here is your task list:`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`1. task 1`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`2. task 2`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`3. task 3`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Add a Todo Task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Add a task that does not have a due date to the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`todo collect laundry`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Added: [T} [Not Done] collect laundry`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Now you have 1 task(s) on your list.`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Add a Deadline Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Add a task that has a due date to the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `deadline [task] /by [YYYY-MM-DD]`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`deadline collect laundry /by 2020-01-02`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Added: [D} [Not Done] collect laundry by 02-Jan-2020`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Now you have 1 task(s) on your list.`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Add a Event Task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Add an event that happens at a certain date to the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `event [task] /at [YYYY-MM-DD]`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`event collect laundry /at 2020-01-02`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Added: [E} [Not Done] collect laundry at 02-Jan-2020`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Now you have 1 task(s) on your list.`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Mark a certain task in task list as a finished task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `done [index of task]`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Good job! I\u0027ve marked this task as done`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`1. [T] [Done] collect laundry`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kschiew"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kschiew"
        },
        "content": "Deletes a certain task in task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#### `delete [index of task]`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kschiew"
        },
        "content": "`Deleted: [T] [Done] collect laundry`"
      }
    ],
    "authorContributionMap": {
      "kschiew": 90,
      "-": 16
    }
  },
  {
    "path": "src/main/java/com/duke/bot/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents tasks that has a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private LocalDate due;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private DeadlineTask(String taskName, LocalDate due) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        super(taskName, false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a DeadlineTask."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param taskName The name of the deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param due the due date of the deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A deadlineTask."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static DeadlineTask createDeadlineTask(String taskName, LocalDate due) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new DeadlineTask(taskName, due);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assert getTaskIcon().equals(\"D\") : \"Deadline task icon should be D\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return super.toString().concat(String.format("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                \" by %s\", due.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"))));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the status icon of a deadline task, which is \u0027D\u0027."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 42
    }
  },
  {
    "path": "src/main/java/com/duke/bot/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 61
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.fxml.JavaFXBuilderFactory;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the Duke bot that manages the tasks of the users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private DukeUi ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a Duke Bot object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.tasks \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        storage \u003d Storage.createSrorageFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.ui \u003d new DukeUi(System.in, System.out);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Greet the user with a welcome message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        System.out.println(\"flag 1\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        // Step 1"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Label dukeText \u003d new Label(ui.greet());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String dukeText \u003d ui.greet();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeText, dukeImage));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Step 2"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.setTitle(\"duke.Duke\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Step 3"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DialogBox.getUserDialog(userText, (userImage)),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, (dukeImage))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        );"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Label label \u003d new Label(text);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        label.setWrapText(true);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return label;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assert output.isEmpty() : \"output should be empty initially\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String commandWord \u003d sc.next();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String restOfStr \u003d sc.hasNext() ? sc.nextLine() : \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            output \u003d Parser.parse(commandWord, new DukeUi(restOfStr), storage, tasks);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param ui the UI that duke will be running on"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public Duke(DukeUi ui) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.tasks \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        storage \u003d Storage.createSrorageFile();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Takes the user\u0027s input and decides the action to be taken by Duke bot."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void echo() throws DukeException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String userCommand \u003d ui.getNext();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assert !userCommand.equals(\"\") : \"user command cannot be empty\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String output \u003d Parser.parse(userCommand, ui, storage, tasks);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        ui.print(output);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        if (!userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            echo();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * The main method to simulate and run Duke Bot."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param args The arguments written by the user in the command line."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Duke duke  \u003d new Duke(new DukeUi());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        duke.ui.greet();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //System.out.println(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            duke.echo();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            duke.ui.print(e.getMessage());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 202,
      "-": 3
    }
  },
  {
    "path": "src/main/java/com/duke/bot/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the exceptions that occur due to invalid commands being parsed to Duke Bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 10
    }
  },
  {
    "path": "src/main/java/com/duke/bot/DukeUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the UI that handles the interaction between users and Duke Bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class DukeUi {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon! :)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static final String GREET_MESSAGE \u003d \"Hello! I\u0027m duke.Duke\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                + \"By default, your list of tasks will be saved to \\\"tasks.txt\\\".\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                + \"What can I do for you?\\n\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Constructs a DukeUi object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param in Source of user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param out Destination of output stream."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public DukeUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public DukeUi(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.in \u003d new Scanner(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.out \u003d System.out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public DukeUi() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.out \u003d System.out;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Prints a message that greets the user when DukeBot starts."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return \"Hello! I\u0027m duke.Duke\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        + \"By default, your list of tasks will be saved to \\\"tasks.txt\\\".\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        + \"What can I do for you?\\n\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Prints a message that says goodbye to the user when the user closes Duke Bot."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void printByeMsg() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        out.print(BYE_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Prints a string onto the output."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param output The String being printed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void print(String output) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        out.println(output);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Prints an empty line onto the output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void printEmptyLine() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Resets the properties of the input to default settings."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void resetScanner() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        in.reset();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void setToken(Pattern pattern) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        in.useDelimiter(pattern);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void setToken(String pattern) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        in.useDelimiter(pattern);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void printError(String message) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        System.err.println(message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Gets the next output in the input stream."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The next string in the input stream."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getNext() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return in.next();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Gets the next integer in the input stream."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The next integer in the input stream."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public int getNextInt() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return in.nextInt();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Gets the next string in the input stream, delimited by a newline character."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The next line in the input stream."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 119
    }
  },
  {
    "path": "src/main/java/com/duke/bot/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents tasks that occur at a specific date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private LocalDate due;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private EventTask(String taskName, LocalDate due) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        super(taskName, false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates an Event Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param taskName The name of the Event Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param due The date of happening of the Event Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return an Event Task object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static EventTask createEventTask(String taskName, LocalDate due) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new EventTask(taskName, due);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a message containing the name and due date of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A string that contains the name and due date of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return super.toString().concat(String.format(\" at %s\", due.format("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"))));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the task icon of the Event Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A string \u0027E\u0027."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 48
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 14
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 34
    }
  },
  {
    "path": "src/main/java/com/duke/bot/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String dukeText \u003d DukeUi.GREET_MESSAGE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeText, dukeImage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String dukeText \u003d duke.getResponse(userInput.getText());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DialogBox.getUserDialog(userText, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 56
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the parser that reads and decipher meanings from user commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Adds a task into the task list and prints a success message afterwards."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param task Task being added to the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param tasks The task lists storing all the tasks of the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A string that indicates the success of adding the task into the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static String printSuccessMsg(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String output \u003d \"Added: \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        output \u003d output.concat(String.format(\"Now you have %d task(s) on your list.\\n\\n\", tasks.getSize()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //echo(new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Reads and deciphers the meaning of the user command and react accordingly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param userCommand The Command issued by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param ui The UI of Duke Bot."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param storage The hard disk storage of the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param tasks The task list of the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A message corresponding to the command being executed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @throws DukeException When the command issued is invalid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static String parse(String userCommand, DukeUi ui, Storage storage, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        switch(userCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return tasks.printList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                int targetIdx \u003d ui.getNextInt() - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                if (targetIdx \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Oops, index out of bounds!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                tasks.getTask(targetIdx).markDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String output \u003d \"Good job! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                output \u003d output.concat(String.format(\"%d. %s\\n\\n\", targetIdx + 1, tasks.getTask(targetIdx).toString()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\p{javaWhitespace}+\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String userInput;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    userInput \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Uh-oh! Description of todo cannot be empty!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                TodoTask todoTask \u003d TodoTask.createTodoTask(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                tasks.addTask(todoTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\p{javaWhitespace}+\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return printSuccessMsg(todoTask, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\s*/by\\\\s*|\\\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String action;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String dateInput ;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                LocalDate byDate;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    action \u003d ui.getNext();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    dateInput \u003d ui.getNext();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    byDate \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Oops, invalid format! Try the following format: \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                            + \"deadline {task name} /by YYYY-MM-DD\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                DeadlineTask deadlineTask \u003d DeadlineTask.createDeadlineTask(action, byDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                tasks.addTask(deadlineTask);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\p{javaWhitespace}+\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return printSuccessMsg(deadlineTask, tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\s*/at\\\\s*|\\\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String atData;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                LocalDate atDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    action \u003d ui.getNext();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    dateInput \u003d ui.getNext();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    atDate \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Oops, invalid format! Try the following format: \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                            + \"event {task name} /at YYYY-MM-DD\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                EventTask eventTask \u003d EventTask.createEventTask(action, atDate);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                tasks.addTask(eventTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.setToken(\"\\\\p{javaWhitespace}+\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return printSuccessMsg(eventTask, tasks);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                ui.resetScanner();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                String keyword \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                output \u003d \"\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.getSize(); ++i) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    if (task.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                        output \u003d output.concat((i + 1) + \". \" + task.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                if (output.equals(\"\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Oops, we can\u0027t find the item you\u0027re looking for! \""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                            + \"Perhaps check your spelling?\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return DukeUi.BYE_MESSAGE;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                int delIdx \u003d ui.getNextInt() - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                if (delIdx \u003e\u003d tasks.getSize() || delIdx \u003c 0) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                    throw new DukeException(\"Oops! Target object is out of bounds!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                Task delTask \u003d tasks.getTask(delIdx);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                tasks.deleteTask(delIdx);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.saveToFile(tasks.printList());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return String.format(\"Deleted: %s\\n\\n\", delTask.toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            case \"archive\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                storage.archive();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                return \"Task list archived.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                        \"Oops! Invalid commmand word, perhaps you would want to try on of the following: \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                                + \"1. todo 2.deadline 3.event 4.list 5.done 6.bye\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 159
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the permanent storage of the list of tasks managed by Duke Bot into the hard drive."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private static final String DESTINATION_PATH \u003d \"/tasks.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private static final String ARCHIVE_PATH \u003d \"/archive.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private Storage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a Storage File."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static Storage createSrorageFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Saves the input into a .txt file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param input The message to be saved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void saveToFile(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            File file \u003d new File(DESTINATION_PATH);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fw.write(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Arhives the current task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @throws DukeException When the archive process is unsuccessful."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void archive() throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            File archiveFile \u003d new File(ARCHIVE_PATH);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            File oldFile \u003d new File(DESTINATION_PATH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            boolean success \u003d oldFile.renameTo(archiveFile);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            FileWriter fw \u003d new FileWriter(oldFile);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            if (!success) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                throw new DukeException(\"Archive file already exists!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the path in which the output is saved."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The path of the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getDestinationPath() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return DESTINATION_PATH;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the path of the archive file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The path of the archive file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getArchivePath() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return ARCHIVE_PATH;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 79
    }
  },
  {
    "path": "src/main/java/com/duke/bot/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the tasks that can be managed by Duke Bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    //protected TaskType taskType \u003d TaskType.OTHER;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    protected Task(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Factory method for creating a Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param taskName The name of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return a task object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static Task createTask(String taskName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new Task(taskName, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the name of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The task name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the icon indicating if the task is a completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return a symbol."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the icon that represents the type of task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A character \u0027O\u0027."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return \"O\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the completeness of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The boolean value that represents if the task is completed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Prints the completeness, task type and the name of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return the String containing the the information of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return String.format(\"[%s] [%s]%s\", getTaskIcon(), getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 79
    }
  },
  {
    "path": "src/main/java/com/duke/bot/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents the data structure that stores the tasks for Duke Bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        this(0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TaskList(int n) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(n);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Factory method for creating a TaskList object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A TaskList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static TaskList createTaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the number of tasks stored in the Task List."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The number of tasks stored in the Task List."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Adds a task into the Task List."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param task The task being added into the Task List."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the task that is located at a specific index in the Task List."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param index the index of the targeted task being retrieved from the Task List."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return The task located at the specified index in the Task List."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @throws IndexOutOfBoundsException If the index is smaller than 0 or larger than"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *     or equal to the number of tasks in the Task List."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Deletes a task located at the a certain index number of the Task List."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param delIdx The index number of the task being deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @throws IndexOutOfBoundsException If the index in out of range of the Task List."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void deleteTask(int delIdx) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        if (delIdx \u003e\u003d tasks.size() || delIdx \u003c\u003d -1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Oops! Target object is out of bounds!\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            + String.format(\"Task size: %d\\n\", tasks.size())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            + String.format(\"final Index size: %d\\n\", delIdx));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        tasks.remove(delIdx);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns a text containing all the tasks in the Task List in order."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A string containing all the tasks in the Task List in order."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        output +\u003d (\"Here is your list of tasks:\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            output \u003d output.concat(String.format(\"%d. %s\\n\", i + 1, task.toString()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 89
    }
  },
  {
    "path": "src/main/java/com/duke/bot/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": " * Represents tasks that neither has a deadline nor event date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    private TodoTask(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        super(taskName, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Creates a TodoTask."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @param taskName name of the TodoTask."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return TodoTask object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public static TodoTask createTodoTask(String taskName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return new TodoTask(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * Returns the icon for TodoTask."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     * @return A letter \u0027T\u0027."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 31
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kschiew": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"com.duke.bot.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kschiew": 19
    }
  },
  {
    "path": "src/test/java/com/duke/bot/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void getSizeTest_noElements() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        TaskList dummyTaskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(dummyTaskList.getSize(), 0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void getSizeTest_oneElement() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        TaskList dummyTaskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dummyTaskList.addTask(Task.createTask(\"eat\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(dummyTaskList.getSize(), 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void addTaskTest_addDeadLineTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        TaskList dummyTaskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        DeadlineTask dummyDeadlineTask \u003d DeadlineTask.createDeadlineTask("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                \"eat\", LocalDate.of(1999,2, 23));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dummyTaskList.addTask(dummyDeadlineTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(dummyTaskList.getSize(), 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(dummyTaskList.getTask(0), dummyDeadlineTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void getTaskTest_noException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        TaskList dummyTaskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        DeadlineTask dummyDeadlineTask \u003d DeadlineTask.createDeadlineTask("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                \"eat\", LocalDate.of(1999,2, 23));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dummyTaskList.addTask(dummyDeadlineTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(dummyTaskList.getTask(0), dummyDeadlineTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void getTaskTest_OutOfBoundException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        TaskList dummyTaskList \u003d TaskList.createTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        DeadlineTask dummyDeadlineTask \u003d DeadlineTask.createDeadlineTask("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kschiew"
        },
        "content": "                \"eat\", LocalDate.of(1999,2, 23));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        dummyTaskList.addTask(dummyDeadlineTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            dummyTaskList.getTask(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kschiew"
        },
        "content": "            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 59
    }
  },
  {
    "path": "src/test/java/com/duke/bot/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "package com.duke.bot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void getTaskNameTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Task task \u003d Task.createTask(\"Task name 1\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertEquals(task.getTaskName(), \"Task name 1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    public void markDoneTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        Task task \u003d Task.createTask(\"Task 1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kschiew": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "todo eat fish"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "deadline eat fish /by tonight"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "event eat fish /at my house"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kschiew": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kschiew"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kschiew"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kschiew"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kschiew"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kschiew"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kschiew"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kschiew"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kschiew"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kschiew"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kschiew"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kschiew"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kschiew"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kschiew"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kschiew"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kschiew"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kschiew"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kschiew"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kschiew"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kschiew"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kschiew"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kschiew"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kschiew"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kschiew"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kschiew": 34
    }
  }
]
