[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 29,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### Friendlier Syntax"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Create shortcuts for commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Fetch the command list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### Tagging"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Tag tasks using the command tag."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Alias` - Create shortcut for commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[alias] [command]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "alias b bye"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Alias added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Bye` - Exits programme."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Programme closes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "bye"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Programme closes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Clear` - Deletes all tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "clear"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "List cleared."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Deadline` - Creates task with a deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[description] [date] [tags]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "deadline iP /2020-02-19"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[D] IP (by Feb 19 2020)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Delete` - deletes task with task number"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[task number]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Noted. I\u0027ve removed this task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Done` - marks task with task number as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[task number]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Noted. I\u0027ve marked this task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Event` - Creates task that is an event."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[description] [date] [tags]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "event CS2103T tutorial /2020-02-20"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[E] CS2103T tutorial (at Feb 20 2020)    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "      "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Find` - Returns list of tasks with keyword in name."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[keyword]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "keyword cs2103t"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[E] CS2103T tutorial (at Feb 20 2020)               "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "           "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Tag` - Returns list of tasks containing tag."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[tag]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "tag cs2103T"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "[E] CS2103T tutorial (at Feb 20 2020)            "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "          "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "### `Todo` - Creates task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " [description] [tags]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " todo read notes"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " [T] read notes "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "           "
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 95,
      "-": 18
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 65
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            duke.start();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.UI;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        scrollPane.setFitToHeight(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                DialogBox.getDukeDialog(UI.START, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        duke.end();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        dialogContainer.getChildren().clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void help() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                DialogBox.getDukeDialog(UI.HELP, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String response \u003d getResponse(input, duke);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (response.equals(UI.BYE)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private String getResponse(String input, Duke duke) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return duke.getController().readInput(input, duke.getTaskList(), duke.getFriendlierSyntax());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 88
    }
  },
  {
    "path": "src/main/java/command/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import factory.DeadlineFactory;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import factory.EventFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import factory.TodoFactory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Parses user input and instruct corresponding classes to perform specified tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Controller {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private DeadlineFactory deadlineFactory;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private EventFactory eventFactory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private TodoFactory todoFactory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Constructor for the controller object which instantiates factory objects to create various tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Controller(Duke duke) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        deadlineFactory \u003d new DeadlineFactory();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        eventFactory \u003d new EventFactory();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        todoFactory \u003d new TodoFactory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Parses user input and determine specified instructions to execute."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input received from user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return output to be displayed to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String readInput(String input, TaskList taskList, FriendlierSyntax friendlierSyntax) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            parser.validateInput(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            String command \u003d parser.getCommand(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            if (parser.hasDescription(input)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                description \u003d parser.getDescription(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.BYE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"alias\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    String[] alias \u003d description.split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    friendlierSyntax.addAlias(alias[0], alias[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.ALIAS;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"hello\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.HELLO;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                        return UI.EMPTY_LIST;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.LIST + taskList.printList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    int deletedTaskNumber \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    Task deletedTask \u003d taskList.getTask(deletedTaskNumber);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.deleteTask(deletedTaskNumber);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.REMOVE + deletedTask;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"clear\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.clearAll();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.CLEAR;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    int doneTaskNumber \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    Task taskDone \u003d taskList.getTask(doneTaskNumber);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.markAsDone(doneTaskNumber);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.DONE + taskDone;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    String keyword \u003d description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.LIST + taskList.findTaskContainingKeyword(keyword);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"tag\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    String tag \u003d description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.LIST + taskList.findTaskContainingTag(tag);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    String[] parse \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    Todo newTodo \u003d todoFactory.create(description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.ADD + \"\\t\\t\" + newTodo.toString() + taskList.printTotalTasks();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    Deadline newDeadline \u003d deadlineFactory.create(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.ADD + \"\\t\\t\" + newDeadline.toString() + taskList.printTotalTasks();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    Event newEvent \u003d eventFactory.create(description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.ADD + \"\\t\\t\" + newEvent.toString() + taskList.printTotalTasks();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return UI.HELP;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 103
    }
  },
  {
    "path": "src/main/java/command/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * The project is a product named Duke, a Personal Assistant Chatbot"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * that helps a person to keep track of various things."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private FriendlierSyntax friendlierSyntax;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Controller controller;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Starts the chat bot by first retrieving saved file from hard disk then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * obtaining input from the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        storage.readFromFile(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        controller \u003d new Controller(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Saves the task list into the storage file when user terminates the programme."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        storage.saveFile(taskList, friendlierSyntax);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the controller."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the controller."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Controller getController() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return controller;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public FriendlierSyntax getFriendlierSyntax() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return friendlierSyntax;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void setFriendlierSyntax(FriendlierSyntax friendlierSyntax) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.friendlierSyntax \u003d friendlierSyntax;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 66
    }
  },
  {
    "path": "src/main/java/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 12
    }
  },
  {
    "path": "src/main/java/command/FriendlierSyntax.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class FriendlierSyntax {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public HashMap\u003cString, String\u003e friendlierSyntax \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Instantiates the list of friendlier syntax which includes shortcuts for each command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public FriendlierSyntax() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"a\", \"alias\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"alias\", \"alias\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"b\", \"bye\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"bye\", \"bye\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"l\", \"list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"list\", \"list\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"dlt\", \"delete\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"delete\", \"delete\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"c\", \"clear\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"clear\", \"clear\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"dn\", \"done\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"f\", \"find\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"find\", \"find\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"t\", \"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"todo\", \"todo\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"ddln\", \"deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"deadline\", \"deadline\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"e\", \"event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"event\", \"event\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(\"tag\", \"tag\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void setFriendlierSyntax(HashMap\u003cString, String\u003e friendlierSyntax) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.friendlierSyntax \u003d friendlierSyntax;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Checks the hashmap for the command that the alias corresponds to."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param alias alias input by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the command which the alias corresponds to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String findCommand(String alias) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (friendlierSyntax.get(alias) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return friendlierSyntax.get(alias);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            System.out.println(\"not found\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Adds alias and corresponding command into mappings."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param alias   alias for command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param command command selected."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void addAlias(String alias, String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax.put(alias, command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the list of friendlier syntax mappings."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public HashMap\u003cString, String\u003e getFriendlierSyntax() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return this.friendlierSyntax;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 71
    }
  },
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private FriendlierSyntax friendlierSyntax;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Parser(Duke duke) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        friendlierSyntax \u003d duke.getFriendlierSyntax();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the first command input by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input specified by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the first command input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String getCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return friendlierSyntax.findCommand(input.split(\" \")[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Splits the user input to return the description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input specified by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return description for command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String getDescription(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Checks if command contains description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input specified by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return true if the input has a description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public boolean hasDescription(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return input.split(\" \").length \u003e 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Validates user input by verifying that all arguments are present for each command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input specified by user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void validateInput(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String[] parsedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String command \u003d getCommand(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        switch (friendlierSyntax.findCommand(command)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"alias\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the alias and command\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"hello\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the task number.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the task number.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the keyword.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"tag\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the tag.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"\\tPawdon me, I think you furgot to include the description.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the description of the deadline.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else if (parsedInput[1].split(\"/\").length \u003c 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you fur-got to include the date of the deadline\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                if (parsedInput.length \u003c 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the description of the event.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else if (!parsedInput[1].contains(\"/\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    throw new DukeException(\"Pawdon me, I think you furgot to include the date of the event.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Checks if user input any tags through number of arguments."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input specified by user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return true if user input tags and false otherwise."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public boolean checkForTags(String input) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return input.split(\" \").length \u003e 2;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 129
    }
  },
  {
    "path": "src/main/java/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Handles the loading and saving of task lists to the hard disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Gson gson;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private String userDirectory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Initialises a storage object with gson and user directory."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        gson \u003d new Gson();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        userDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Searches for an existing file with a previous task list and alias store."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * If no such file found, create a new task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void readFromFile(Duke duke) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FileReader task \u003d new FileReader(userDirectory + \"/data.json\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(userDirectory + \"/alias.json\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            duke.setTaskList(gson.fromJson(task, TaskList.class));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            duke.setFriendlierSyntax(gson.fromJson(fileReader, FriendlierSyntax.class));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            duke.setFriendlierSyntax(new FriendlierSyntax());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            duke.setTaskList(new TaskList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Writes task list and alias into hard drive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void saveFile(TaskList taskList, FriendlierSyntax alias) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(userDirectory + \"/data.json\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            FileWriter aliasFile \u003d new FileWriter(userDirectory + \"/alias.json\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            gson.toJson(taskList, fileWriter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            gson.toJson(alias, aliasFile);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            aliasFile.flush();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            aliasFile.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            System.err.println(io);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 59
    }
  },
  {
    "path": "src/main/java/command/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Stores magic strings as constants to be returned as output."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String LOGO \u003d \" ___           _\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"|  _  \\\\ _    _| |  _  __\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"| |  |  | |  | | |/ /   _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"| |_|  | |_| |   \u003c    __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"|____/ \\\\__,|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String ADD \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String ALIAS \u003d \"Alias added.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String CLEAR \u003d \"List cleared.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\\t\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"List is empty.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String HELLO \u003d \"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String NO_TAGS \u003d \"No tasks with this tag found :o\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String REMOVE \u003d \"Noted. I\u0027ve removed this task:\\n\\t\\t\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String START \u003d \"Hello from\\n\" + LOGO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public static final String HELP \u003d \"alias: creates shortcut\\n\\t[alias] [command]\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"bye: exits the programme\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"clear: clears list\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"deadline: creates task with a deadline \\n\\t[description] [date] [tags]\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"delete: deletes task with task number\\n\\t[task number\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"done: marks task with task number as done\\n\\t[task number]\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"event: creates task that is an event \\n\\t[description] [date] [tags]\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"find: returns list of tasks with keyword in name\\n\\t[keyword]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"tag: returns list of tasks containing tag\\n\\t [tag]\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            + \"todo: creates task \\n\\t[description] [tags]\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 35
    }
  },
  {
    "path": "src/main/java/factory/DeadlineFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package factory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Generates deadline objects based on user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class DeadlineFactory implements Factory\u003cDeadline\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public DeadlineFactory() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a deadline object from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input given by user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return deadline object with the specified parameters"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Deadline create(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String[] by \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (parser.checkForTags(input)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            String[] tags \u003d by[1].split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Deadline(by[0], LocalDate.parse(tags[0]), tags[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Deadline(by[0], LocalDate.parse(by[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 34
    }
  },
  {
    "path": "src/main/java/factory/EventFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package factory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Generates event objects based on user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class EventFactory implements Factory\u003cEvent\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public EventFactory() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a event object from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input given by user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return event object with the specified parameters"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Event create(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String[] at \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (parser.checkForTags(input)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            String[] tags \u003d at[1].split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Event(at[0], LocalDate.parse(tags[0]), tags[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Event(at[0], LocalDate.parse(at[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 34
    }
  },
  {
    "path": "src/main/java/factory/Factory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package factory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Interface for factory classes used to create different tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * @param \u003cT\u003e Different types of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public interface Factory\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    T create(String userInput);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 11
    }
  },
  {
    "path": "src/main/java/factory/TodoFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package factory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Generates todo objects based on user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class TodoFactory implements Factory\u003cTodo\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public TodoFactory() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a todo object from user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param input input given by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return todo object with the specified parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Todo create(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String[] parsed \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (parser.checkForTags(input)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Todo(parsed[0], parsed[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return new Todo(parsed[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 33
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Task that need to be done before a specific date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    protected LocalDate dateBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a task with a deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param description task with a deadline to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param dateBy      date the task needs to be completed by."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Deadline(String description, LocalDate dateBy) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Deadline(String description, LocalDate dateBy, String tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the string of the task with a deadline indicating [D] for deadline followed by the description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * then do by date in MMM d yyyy."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of the deadline task indicating [D] for deadline followed by the description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * then do by date in MMM d yyyy."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        assert dateBy !\u003d null : \"Date should be stored for deadlines\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 41
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Task that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    protected LocalDate dateAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a task that is an event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param description task that is an event to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param dateAt      date the event is at."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Event(String description, LocalDate dateAt) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.dateAt \u003d dateAt;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Event(String description, LocalDate dateAt, String tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.dateAt \u003d dateAt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the string of the task that is an event indicating [E] for event followed by the description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * then date of the event in MMM d yyyy."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of the task that is an event indicating [E] for event followed by the description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * then date of the event in MMM d yyyy."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 40
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Specifies main attributes and methods for tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    protected ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a task object with a description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Task(String description, String tags) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        this.tags.addAll(Arrays.asList(tags.split(\" \")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns a tick for tasks marked as done and a cross for tasks not done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return tick for tasks marked as done and a cross for tasks not done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public boolean checkTags(String tag) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return tags.contains(tag);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Changes the status of the task to done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 65
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import command.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * TaskList stores a list of tasks and contains operations to add, retrieve"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * and delete tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Initializes the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Retrieves this task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return this task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Adds task to this task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param taskToAdd task to add to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        list.add(taskToAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Deletes task with the specified task number from this task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param taskNumber task to be deleted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return deleted task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (taskNumber \u003e list.size()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        list.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Clears all tasks from this task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Marks task with specified task number as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param taskNumber task to be marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void markAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (taskNumber \u003e list.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        list.get(taskNumber - 1).setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns specified task number."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param taskNumber of the task requested."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return task with the corresponding task number."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return list.get(taskNumber - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns total number of tasks in this task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return total number of tasks in this task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Checks if this task list is empty."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return true if task list is empty and false otherwise."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return list.isEmpty();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns information on the number of tasks in the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of the total number of tasks in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String printTotalTasks() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (getTotalTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return \"\\n\\tNow you have no tasks in the list.\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else if (getTotalTasks() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return String.format(\"\\n\\tNow you have %d task in the list.\", getTotalTasks());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return String.format(\"\\n\\tNow you have %d tasks in the list.\", getTotalTasks());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Prints all tasks in this task list containing the keyword in a numbered order."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of all tasks containing the keyword in this task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String findTaskContainingKeyword(String keyword) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String printedList \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                printedList \u003d printedList + \"\\n\\t\\t\" + taskNumber + \". \\t\" + task;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return printedList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String findTaskContainingTag(String tag) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String printedList \u003d \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        boolean noTasksWithTag \u003d true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            if (task.checkTags(tag)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                printedList \u003d printedList + \"\\n\\t\\t\" + taskNumber + \". \\t\" + task;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        if (noTasksWithTag) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return UI.NO_TAGS;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            return printedList;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Prints all tasks in this task list in a numbered order."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of all tasks in this task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        String printedList \u003d \"\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            printedList \u003d printedList + \"\\n\\t\\t\" + taskNumber + \". \\t\" + task;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return printedList;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 164
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " * Task without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Creates a task without any date/time attached to it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @param description task to be completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public Todo(String description, String tags) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        super(description, tags);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * Returns the string of the task containing the description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     * @return the string of the task containing the description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.layout.Priority?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cTextFlow\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003cHBox.hgrow\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cPriority fx:value\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/HBox.hgrow\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003cTextFlow\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cHBox.hgrow\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003cPriority fx:value\u003d\"ALWAYS\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003c/HBox.hgrow\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cInsets/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 33
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cMenuBar id\u003d\"menu-item\" blendMode\u003d\"OVERLAY\" prefHeight\u003d\"29.0\" prefWidth\u003d\"400.0\" AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                 AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" onAction\u003d\"#exit\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Clear history\" onAction\u003d\"#clear\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Command list\" onAction\u003d\"#help\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: grey;\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cFont name\u003d\"System Font\" size\u003d\"13.0\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"28.0\" prefHeight\u003d\"529.0\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    prefWidth\u003d\"400.0\" snapToPixel\u003d\"false\" style\u003d\"-fx-background-color: black;\" vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    AnchorPane.topAnchor\u003d\"28.0\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"523.0\" prefWidth\u003d\"388.0\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                      style\u003d\"-fx-background-color: black;\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 61
    }
  },
  {
    "path": "src/test/java/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"JUnit\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        assertEquals(\"[D][✘] JUnit (by: Jan 29 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 20
    }
  },
  {
    "path": "src/test/java/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        Event event \u003d new Event(\"2103 lecture\", LocalDate.parse(\"2020-01-31\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "        assertEquals(\"[E][✘] 2103 lecture (by: Jan 31 2020)\", event.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t\t[T][✘] read notes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNow you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t\t[D][✘] 2103 project  (by: thursday 2359)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t\t[E][✘] 2103 lecture  (at: friday 2pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t1. [T][✘] read notes"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t2. [D][✘] 2103 project  (by: thursday 2359)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t3. [E][✘] 2103 lecture  (at: friday 2pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t\t[E][✓] 2103 lecture  (at: friday 2pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t1. [T][✘] read notes"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t2. [D][✘] 2103 project  (by: thursday 2359)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t3. [E][✓] 2103 lecture  (at: friday 2pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t\t[E][✓] 2103 lecture  (at: friday 2pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t1. [T][✘] read notes"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t2. [D][✘] 2103 project  (by: thursday 2359)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "todo read notes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "deadline 2103 project /thursday 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "event 2103 lecture /friday 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CharmaineKoh"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "CharmaineKoh": 34
    }
  }
]
