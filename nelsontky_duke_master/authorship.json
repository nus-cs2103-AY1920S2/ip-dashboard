[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "1 todo join sports club"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 deadline return book /by 2019-10-30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 5
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, INVALID, FIND"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nelsontky": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Deadline(String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(deadline.split(\"/by\")[0]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.date \u003d LocalDate.parse(deadline.split(\"/by\")[1].strip());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Main driver of the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param args Commandline arguments, not used"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            Ui.run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 11,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Event(String event) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(event.split(\"/at\")[0]);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.time \u003d event.split(\"/at\")[1];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private boolean isStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param input     User input of a command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param isStorage Is constructor called from Storage class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Parser(String input, boolean isStorage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isStorage \u003d isStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        if (!isStorage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.done \u003d \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.done \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.command \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Getter for command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return String of the command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Gets the command in enum form."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return The command in enum form"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Command getCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        switch (this.command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates a task according to input and whether we are parsing commands from storage."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return The task created"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IndexOutOfBoundsException Thrown when input is invalid"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task createTask() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String typeRemoved \u003d this.isStorage"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? this.input.strip().split(\" \", 3)[2]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : this.input.strip().split(\" \", 2)[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Task task \u003d this.getCommand() \u003d\u003d Command.TODO"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? new ToDo(typeRemoved)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : this.getCommand() \u003d\u003d Command.DEADLINE"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? new Deadline(typeRemoved)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : new Event(typeRemoved);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        if (this.done.equals(\"1\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            task.doTask();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Get relevant index of delete and done commands."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return Index specified in input"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return Integer.parseInt(this.input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Get search term from find command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return Search term"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String getSearchTerm() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.input.split(\" \")[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 103
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Adds all tasks found in storage to input tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param tasks TaskList to add read tasks to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws FileNotFoundException Thrown when file is not found"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void readFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Parser parse \u003d new Parser(line, true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Task task \u003d parse.createTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            new File(\"data\").mkdir(); // Create directory"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            deleteContent(); // Create file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            readFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Writes task to storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param task Task to store in storage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void addTask(String task) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.write(\"0\" + \" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Delete task from storage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param index Index of task to remove from storage"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void deleteTask(int index) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            lines.add(s.nextLine());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        lines.remove(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        deleteContent();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Perform task in storage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param index Index of the task to perform"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void doTask(int index) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            lines.add(s.nextLine());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        lines.set(index, \"1\" + lines.get(index).substring(1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        deleteContent();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static void deleteContent() throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 103
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return String.format(\"[%s] %s\", this.isDone ? \"✓\" : \"✗\", this.name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 18
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void doTask(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks.get(index).doTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 29
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Starts the user interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void run() throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Storage.readFile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printIndented(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printIndented(\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(input, false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        while (parse.getCommand() !\u003d Command.BYE) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            switch (parse.getCommand()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(String.format(\"%d.%s\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                index \u003d parse.getIndex();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                tasks.doTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\" \" + tasks.get(index));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Storage.doTask(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                index \u003d parse.getIndex();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\" \" + tasks.remove(index));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Storage.deleteTask(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    String searchTerm \u003d parse.getSearchTerm();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    int number \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        if (tasks.get(i).toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                            printIndented(String.format(\"%d.%s\", number++, tasks.get(i)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(\"☹ OOPS!!! The search term of a \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                            + parse.getCommandString() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    Task task \u003d parse.createTask();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(\" \" + task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(String.format(\"Now you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    Storage.addTask(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printIndented(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                            + parse.getCommandString() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    printHorizontalLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printIndented(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                printHorizontalLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            parse \u003d new Parser(input, false);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printIndented(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static void printIndented(String text) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println(\"     \" + text);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static void printHorizontalLine() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 124
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(\"[D][✗] return book (by: Oct 15 2019)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                (new Deadline(\"return book /by 2019-10-15\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 11
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void getCommand_notStorage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(\"deadline return book /by 2019-10-15\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(Command.DEADLINE, parse.getCommand());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void getCommand_isStorage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(\"1 deadline return book /by 2019-10-15\", true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(Command.DEADLINE, parse.getCommand());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 17
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(\"[T][✗] borrow book\", (new ToDo(\"borrow book\")).toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "W"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 35
    }
  }
]
