[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "nelsontky": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "test {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 40,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "1 todo join sports club"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 deadline return book /by 2019-10-30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "0 event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 5
    }
  },
  {
    "path": "src/main/java/approxsearch/Search.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package approxsearch;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Search {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static final double MIN_RATIO \u003d 0.7;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Search(TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public TaskList search(String searchTerm) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        tasks.getTasksStream()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                .sorted((t1, t2) -\u003e Double.compare("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        SimilarityRatio.getHighestSimilarityRatio(searchTerm, t2.toString()),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        SimilarityRatio.getHighestSimilarityRatio(searchTerm, t1.toString())"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ))"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                .filter(t -\u003e SimilarityRatio.getHighestSimilarityRatio(searchTerm, t.toString())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        \u003e MIN_RATIO"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                )"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                .forEach(t -\u003e results.add(t));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 28
    }
  },
  {
    "path": "src/main/java/approxsearch/SimilarityRatio.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package approxsearch;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "class SimilarityRatio {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    // Reference: https://en.wikipedia.org/wiki/Levenshtein_distance#Iterative_with_full_matrix"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static int levenshteinDist(String a, String b, int i, int j, int[][] memo) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        if (memo[i][j] !\u003d -1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            // return from memo straight"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } else if (Math.min(i, j) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            memo[i][j] \u003d Math.max(i, j);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            memo[i][j] \u003d Math.min("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    levenshteinDist(a, b, i - 1, j, memo) + 1,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    Math.min("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                            levenshteinDist(a, b, i, j - 1, memo) + 1,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                            levenshteinDist(a, b, i - 1, j - 1, memo) +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                                    (a.charAt(i - 1) \u003d\u003d b.charAt(j - 1) ? 0 : 1)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return memo[i][j];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static double getSimilarityRatio(String a, String b) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        int i \u003d a.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        int j \u003d b.length();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        int[][] memo \u003d new int[i + 1][j + 1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (int m \u003d 0; m \u003c\u003d i; m++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            for (int n \u003d 0; n \u003c\u003d j; n++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                memo[m][n] \u003d -1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return ((double) (i + j) - levenshteinDist(a.toLowerCase(), b.toLowerCase(), i, j, memo)) /"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                (i + j);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static Stream\u003cString\u003e getPhraseStream(int phraseLength, String sentence) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ArrayList\u003cString\u003e phrases \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String[] words \u003d sentence.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        int lastIndex \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d words.length - phraseLength; i +\u003d phraseLength) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            String phrase \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            for (int j \u003d 0; j \u003c phraseLength; j++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                phrase +\u003d \" \" + words[i + j];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                lastIndex \u003d i + j + 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            phrases.add(phrase.trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String lastPhrase \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (int i \u003d lastIndex; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            lastPhrase +\u003d \" \" + words[i];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        phrases.add(lastPhrase.trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return phrases.stream();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Get highest Levenshtein similarity ratio for a given word compared to a sentence."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Reference: https://www.datacamp.com/community/tutorials/fuzzy-string-python"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param a        string that may be in sentence."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param sentence sentence to compare to."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return Levenshtein similarity ratio."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    static double getHighestSimilarityRatio(String a, String sentence) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return getPhraseStream(a.split(\" \").length, sentence)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                .map((word -\u003e getSimilarityRatio(a, word)))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                .reduce(-1.0, (acc, curr) -\u003e Math.max(acc, curr));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println(getHighestSimilarityRatio("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"Even though the example above is a valid way\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"event hought the example above s a valid way\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println(getHighestSimilarityRatio("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"flexibilty\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"All more flexibility in search\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        System.out.println(getHighestSimilarityRatio("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"all\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \"All more flexibility in search\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 92
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, INVALID, FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nelsontky": 6
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Deadline(String deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(deadline.split(\"/by\")[0]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.date \u003d LocalDate.parse(deadline.split(\"/by\")[1].strip());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 19
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import approxsearch.Search;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        // ..."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Duke(TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.setTitle(\"duke.Duke\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param text String containing text to add."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String response \u003d this.getResponse(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                DialogBox.getUserDialog(input, user),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                DialogBox.getDukeDialog(response, duke)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        );"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "//        return \"duke.Duke heard: \" + input;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(input, false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        switch (parse.getCommand()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            result +\u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                result +\u003d (String.format(\"%d.%s\\n\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            index \u003d parse.getIndex();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            tasks.doTask(index);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            result +\u003d \"Nice! I\u0027ve marked this task as done: \\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            result +\u003d (\" \" + tasks.get(index) + \"\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Storage.doTask(index);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            index \u003d parse.getIndex();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            result +\u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            result +\u003d \" \" + tasks.remove(index) + \"\\n\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Storage.deleteTask(index);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                String searchTerm \u003d parse.getSearchTerm();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Search search \u003d new Search(tasks);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                result +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                TaskList searchResults \u003d search.search(searchTerm);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                int number \u003d 1;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                for (int i \u003d 0; i \u003c searchResults.size(); i++) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    result +\u003d String.format(\"%d.%s\\n\", number++, searchResults.get(i));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return (\"☹ OOPS!!! The search term of a \""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        + parse.getCommandString() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Task task \u003d parse.createTask();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                result +\u003d (\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                result +\u003d (\" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                result +\u003d (String.format(\"Now you have %d tasks in the list.\\n\", tasks.size()));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    Storage.addTask(input);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                return (\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                        + parse.getCommandString() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return \"Press the close button.\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 238,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Event(String event) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(event.split(\"/at\")[0]);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.time \u003d event.split(\"/at\")[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 15
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            Storage.readFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            duke \u003d new Duke(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 52
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private boolean isStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates a duke.Parser object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param input     User input of a command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param isStorage Is constructor called from duke.Storage class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Parser(String input, boolean isStorage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isStorage \u003d isStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        if (!isStorage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.done \u003d \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.done \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            assert this.done.equals(\"1\") || this.done.equals(\"0\") : \"Flag for done is invalid in data file!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            this.command \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Getter for command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return String of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Gets the command in enum form."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return The command in enum form."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Command getCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        switch (this.command) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Creates a task according to input and whether we are parsing commands from storage."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return The task created."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IndexOutOfBoundsException Thrown when input is invalid."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task createTask() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        String typeRemoved \u003d this.isStorage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? this.input.strip().split(\" \", 3)[2]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : this.input.strip().split(\" \", 2)[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Task task \u003d this.getCommand() \u003d\u003d Command.TODO"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? new ToDo(typeRemoved)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : this.getCommand() \u003d\u003d Command.DEADLINE"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                ? new Deadline(typeRemoved)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                : new Event(typeRemoved);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        if (this.done.equals(\"1\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            task.doTask();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Get relevant index of delete and done commands."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return Index specified in input."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return Integer.parseInt(this.input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Get search term from find command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @return Search term."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String getSearchTerm() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.input.split(\" \")[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 108
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Adds all tasks found in storage to input tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param tasks duke.TaskList to add read tasks to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws FileNotFoundException Thrown when file is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void readFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Parser parse \u003d new Parser(line, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                Task task \u003d parse.createTask();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            new File(\"data\").mkdir(); // Create directory"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            deleteContent(); // Create file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            readFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Writes task to storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param task duke.Task to store in storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void addTask(String task) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.write(\"0\" + \" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Delete task from storage."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param index Index of task to remove from storage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void deleteTask(int index) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            lines.add(s.nextLine());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        lines.remove(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        deleteContent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * Perform task in storage."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @param index Index of the task to perform."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     * @throws IOException Thrown when I/O error occurs."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public static void doTask(int index) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            lines.add(s.nextLine());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        lines.set(index, \"1\" + lines.get(index).substring(1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        deleteContent();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            fw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private static void deleteContent() throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 105
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return String.format(\"[%s] %s\", this.isDone ? \"✓\" : \"✗\", this.name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 20
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void doTask(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks.get(index).doTask();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public Stream\u003cTask\u003e getTasksStream() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return tasks.stream();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 36
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 12
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(\"[D][✗] return book (by: Oct 15 2019)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "                (new Deadline(\"return book /by 2019-10-15\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void getCommand_notStorage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(\"deadline return book /by 2019-10-15\", false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(Command.DEADLINE, parse.getCommand());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void getCommand_isStorage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        Parser parse \u003d new Parser(\"1 deadline return book /by 2019-10-15\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(Command.DEADLINE, parse.getCommand());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 19
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "        assertEquals(\"[T][✗] borrow book\", (new ToDo(\"borrow book\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nelsontky"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nelsontky"
        },
        "content": "W"
      }
    ],
    "authorContributionMap": {
      "nelsontky": 35
    }
  }
]
