[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "This is a simple user guide to Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "A personal chat-bot to manage your todo-list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### list - Views your current list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### todo - Adds a task that is to be done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### deadline - Adds a task that is to be done by a certain date and time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### event - Adds a task that to be done in a certain date and time."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### done - Marks task as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### delete - Deletes a task from the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### viewstats - Views the stats of your past tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "### bye - Exits the app."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "####Example of usage: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "deadline return book /by 2000-01-01 2350"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[T][✘]read book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[D][✘]return book(by: Jan 1 2000 23:50)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[T][✓]read book"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[T][✓]read book"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[D][✘]return book(by: Jan 1 2000 23:50)"
      }
    ],
    "authorContributionMap": {
      "e0316059": 42,
      "-": 39
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "e0316059": 84
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "simport java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a deadline object characterized by an instrution and a date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Deadline with the given instruction and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param instruction Task content."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param time Time when the task starts."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Deadline (String instruction, LocalDateTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        super(instruction);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the time of a deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the time of this deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets a string representation of a deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the string representation of this deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 38
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private ImageView iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private DialogBox(Label dialog, ImageView iv) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.dialog \u003d dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.iv \u003d iv;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            FXMLLoader l \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            l.setController(this);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            l.setRoot(this);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            l.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 52
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a Duke robot that deal with multiple tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The Storage used."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The list of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The user interface."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The Parser used."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Duke with the given filePath."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Duke (String filePath) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.parser \u003d new Parser(ui, tasks, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        parser.run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Runs Duke with the given filePath."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\h1430\\\\Documents\\\\CS2103T\\\\duke\\\\src\\\\main\\\\java\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * A GUI for Duke."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param stage"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            FXMLLoader l \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            AnchorPane ap \u003d (AnchorPane) l.load();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 82,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents exceptions that may happen while running Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new DukeException with the given type."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public DukeException (String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the type of a DukeException."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the type of this exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents an event object characterized by an instrution and a date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Event with the given instruction and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param instruction Task content."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param time Deadline for the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Event (String instruction, LocalDateTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        super(instruction);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the time of an event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the time of this event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets a string representation of an event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the string representation of this event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 10
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import static duke.common.Messages.WELCOME_MSG;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        String response \u003d DukeStub.getResponse(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DialogBox.getUserDialog(input, user),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DialogBox.getDukeDialog(response, duke)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public static String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return String.format(\"ok, %s\", input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a Parser. The Parser class deals with making sense of the user command and running the command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The list of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The storage object used."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Parser with the given ui, tasklist and storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Parser (Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Greets and runs the user command line by line."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String usercommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                handleInstruction(usercommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                ui.showCommandError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } catch (AssertionError e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                ui.showAssertionError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Deals with the user command (instruction)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @throws DukeException when the instruction has an invalid task type,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     *                       or the task type is specified but content is empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void handleInstruction(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            ui.exit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            tasks.printList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            int index \u003d Integer.parseInt(instruction.split(\" \")[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            assert index \u003c 0 : \"invalid index\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            tasks.doneTask(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            storage.record(tasks.getTasks());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            int index \u003d Integer.parseInt(instruction.split(\" \")[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            assert index \u003c 0 : \"invalid index\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            storage.record(tasks.getTasks());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String keyword \u003d instruction.replace(\"find \", \"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            tasks.find(keyword);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String task \u003d instruction.replace(\"todo\", \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.addTask(new ToDo(task));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                storage.record(tasks.getTasks());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                throw new DukeException(\"EmptyToDo\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String task \u003d instruction.split(\"/\")[0].replace(\"deadline\", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                String time \u003d instruction.split(\"/\")[1].replace(\"by \", \"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.addTask(new Deadline(task, LocalDateTime.parse(time, formatter)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                storage.record(tasks.getTasks());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                throw new DukeException(\"EmptyDeadline\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String task \u003d instruction.split(\"/\")[0].replace(\"event\", \"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (!task.equals(\"\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                String time \u003d instruction.split(\"/\")[1].replace(\"at \", \"\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.addTask(new Event(task, LocalDateTime.parse(time, formatter)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                storage.record(tasks.getTasks());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                throw new DukeException(\"EmptyEvent\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else if (instruction.equals(\"viewstats\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            ui.printStats(tasks.getStats());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            throw new DukeException(\"invalid\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 110
    }
  },
  {
    "path": "src/main/java/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents the task statistics."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private int numberOfTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private int numberOfEvents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private int numberOfDeadlines;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private int numberOfTodos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private int numberOfCompletedTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a Statistics object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Intially all statistics are set as zero."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Statistics() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.numberOfEvents \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.numberOfDeadlines \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.numberOfTodos \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.numberOfCompletedTasks \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Records a new event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void eventIncrement() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfEvents++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Records a new deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void deadlineIncrement() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfDeadlines++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Records a new todo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void todoIncrement() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfTodos++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Records a new completed task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        numberOfCompletedTasks++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Get the total number of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return numberofTasks Self\u003dexplained."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Get the total number of events."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return numberofTasks Self\u003dexplained."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public int getNumberOfEvents() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return numberOfEvents;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Get the total number of todos."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return numberofTodos Self\u003dexplained."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public int getNumberOfTodos() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return numberOfTodos;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Get the total number of deadlines."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return numberofDeadlines Self\u003dexplained."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public int getNumberOfDeadlines() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return numberOfDeadlines;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Get the total number of completed tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return numberofCompletedTasks Self\u003dexplained."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public int getNumberOfCompletedTasks() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return numberOfCompletedTasks;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a Storage. The Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The filePath where tasks are loaded and saved."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The user interface."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Storage with the given filepath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param filePath The filepath where to load from and write to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Loads tasks from the file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @throws FileNotFoundException when the filePath is invalid."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            String[] data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                ToDo todo \u003d new ToDo(data[2]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                    todo.setDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                Deadline deadline \u003d new Deadline(data[2], LocalDateTime.parse(data[3], formatter));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                    deadline.setDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                Event event \u003d new Event(data[2], LocalDateTime.parse(data[3], formatter));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                    event.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Saves tasks to the file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @throws IOException."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++)  {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                String text \u003d \"T | \" + (task.getStatus() ? \"1\" : \"0\") + \" | \" + task.getInstruction();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                fileWriter.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                String text \u003d \"D | \" + (task.getStatus() ? \"1\" : \"0\") + \" | \" + task.getInstruction() + \" | \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                        + ((Deadline) task).getTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                fileWriter.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                String text \u003d \"E | \" + (task.getStatus() ? \"1\" : \"0\") + \" | \" + task.getInstruction() + \" | \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                        + ((Event) task).getTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                fileWriter.write(text + System.lineSeparator());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Tries to record the changes tasks to the file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void record(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            writeToFile(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            ui.showIOException(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 103
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a task object characterized by an instrution."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The instrution of this task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    protected String instruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Indicates whether this task is done or not."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Task with the given instruction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Initially the task is not done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param instruction The user command to initiate a task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Task (String instruction) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the instruction of a task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the instruction of this task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String getInstruction() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.instruction;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the status of a task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return true if this task is done, false if this task is not done yet."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets a string representation of a task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the string representation of this tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            return \"[\\u2713]\" + instruction;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            return \"[\\u2718]\" + instruction;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents the task list that stores all current tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The list of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * The task statistics."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    private Statistics stats;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new TaskList with the given arraylist that contains tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.stats \u003d new Statistics();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates an empty TaskList (with maximum capacity 100)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return list of this TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Statistics getStats() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return this.stats;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Adds a task to this tasklist."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void addTask (Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (task instanceof Event) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            stats.eventIncrement();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            stats.deadlineIncrement();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            stats.todoIncrement();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.add(task, tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Marks a task in this list as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param n Index of the task that is done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void doneTask (int n) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        tasks.get(n-1).setDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        stats.completeTask();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.done(n, tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Deletes a task in this list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param n Index of the task to be deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void deleteTask (int n) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.delete(n, tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        tasks.remove(n-1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.count(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Finds tasks that matches the given keyword."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @Param keyword The given keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void find (String keyword) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (task.getInstruction().contains(keyword)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                results.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        ui.findKeyword(results);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (tasks.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 111
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents a todo object characterized by an instrution."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new ToDo with the given instruction."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param instruction Task content."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public ToDo (String instruction) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        super(instruction);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Gets a string representation of a todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @return the string representation of this todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": " * Represents the user interface. This Ui class outputs messages and interacts with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Creates a new Ui."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Greets to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\\n What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Farewell to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Adds a task for the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void add (Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task.toString()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Marks a task as done for the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void done (int n, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + tasks.get(n-1).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Deletes a task for the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void delete (int n, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + tasks.get(n-1).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Finds tasks that matches the given keyword for the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @Param results The list of matching tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void findKeyword (ArrayList\u003cTask\u003e results) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            if (results.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                System.out.println((i + 1) + \". \" + results.get(i).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Counts the number of task in the current list for the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void count (ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Shows command error for the user while catching duke exceptions."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void showCommandError (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (e.getType().equals(\"EmptyToDo\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (e.getType().equals(\"EmptyDeadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (e.getType().equals(\"EmptyEvent\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        if (e.getType().equals(\"invalid\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0316059"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Shows loading error for the user while files are not found."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Shows error for the user while catching IOExceptions."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void showIOException (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Oops! \" + e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Shows assertion error while catching invalid index."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void showAssertionError() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"Oops! The index is invalid.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * Prints statistics for the user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     * @param stats The task statistics."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0316059"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void printStats (Statistics stats) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        int numberOfTasks \u003d stats.getNumberOfTasks();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        int numberOfEvents \u003d stats.getNumberOfEvents();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        int numberOfDeadlines \u003d stats.getNumberOfDeadlines();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        int numberOfTodos \u003d stats.getNumberOfTodos();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        int numberOfCompletedTasks \u003d stats.getNumberOfCompletedTasks();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        double progress \u003d (double) numberOfCompletedTasks / (double) numberOfTasks;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        System.out.println(\"You have \" + numberOfTasks + \" tasks in total, including \" + numberOfEvents + \" events, \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + numberOfDeadlines + \" deadlines, and \" + numberOfTodos \" todos.\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + \"You have completed \" + numberOfCompletedTasks + \" tasks. \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0316059"
        },
        "content": "                + (progress * 100) + \"% progress has been made!\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 129
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "D | 0 | return book | Jun 6 2020 1100"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "E | 0 | project meeting | Aug 6 2020 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "e0316059": 4
    }
  },
  {
    "path": "src/main/java/text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[E][✘] meeting (at: 1200)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "3. [E][✘] meeting (at: 1200)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[E][✓] meeting (at: 1200)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "e0316059": 18
    }
  },
  {
    "path": "src/main/java/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[E][✘] meeting (at: 1200)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "3. [E][✘] meeting (at: 1200)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "[E][✓] meeting (at: 1200)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "e0316059": 18
    }
  },
  {
    "path": "src/main/java/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "event meeting /at 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "blah"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "e0316059": 7
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "e0316059": 21
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void testEventToString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Event event \u003d new Event(\"return book\", LocalDateTime.parse(\"2000-01-01 2359\", formatter));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        assertEquals(\"[E][\\u2718] return book (at: Jan 1 2000 23:59)\", event.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void testSetDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Event event \u003d new Event(\"return book\", LocalDateTime.parse(\"2000-01-01 2359\", formatter));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        assertEquals(false, event.getStatus());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        event.setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        assertEquals(true, event.getStatus());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 27
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0316059"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0316059"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0316059"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0316059"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Task task \u003d new Task(\"return book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        assertEquals(\"[\\u2718] return book\", task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    public void testGetInstrution() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        Task task \u003d new Task(\"return book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0316059"
        },
        "content": "        assertEquals(\"return book\", task.getInstruction());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0316059"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0316059"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0316059": 18
    }
  }
]
