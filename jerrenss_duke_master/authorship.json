[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    // mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 39,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# MySponge User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "## Product Overview"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**MySponge** is a versatile task tracking tool which serves to facilitate management of personal commitments. **MySponge** features are efficient, minimalistic and easy-to-use, appealing to anyone who wishes to better manage their tasks at hand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "## Product Interface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003cimg src\u003d\"Ui.png\" width\u003d\"400\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "## Features Present"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 1 - `Create Tasks`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to create tasks, which will be stored in **MySponge\u0027s** database. There are 3 main categories of task that can be created, namely _ToDo_, _Deadline_ and _Event_."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 2 - `Read Tasks`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to obtain and view all the current tasks in **MySponge\u0027s** database. Users will be able to observe the type of tasks present, their tags and completion progress."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 3 - `Update Tasks`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to update the progress of every task, from incomplete to completed, represented by a _cross_ and _check_ respectively."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 4 - `Delete Tasks`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to remove specific tasks from **MySponge\u0027s** database if deemed neccessary."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 5 - `Tag Tasks`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to add a specific tag to a task, which acts as an efficient label which can be searched upon. Eg. #NUS"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### Feature 6 - `Find Tasks`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Users are able to search and display tasks using keywords. Tasks with keywords present will be displayed to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `todo` "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword creates a new todo task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`todo (name of task)`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_Task of type todo will be created and added to **MySponge\u0027s** database_."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `deadline`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword creates a new deadline task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`deadline (name of task) /by (YYYY-MM-dd HHmm)` Note: Date and Time must be expressed in proper format specified."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_Task of type deadline will be created and added to **MySponge\u0027s** database._"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `event`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword creates a new event task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`event (name of task) /at (details)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_Task of type event will be created and added to **MySponge\u0027s** database._"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword generates the list of tasks currently being tracked in **MySponge**."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_A list of tasks will be displayed to the user._"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `done`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword alters a specific task\u0027s progress, from incomplete to completed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`done (integer value)`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_The task represented with the corresponding integer value index will be deemed complete, the cross beside the task details will be replaced with a check instead._"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `delete`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword removes a specific task\u0027s from **MySponge**."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`delete (integer value)`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_The task represented with the corresponding integer value index will be removed from database._"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `tag`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword places a tag on a specific task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`tag (integer value) #(tag name)`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_The task represented with the corresponding integer value index will have a newly created tag visible._"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `find`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword returns a list of tasks containing the keyword specified by the User."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`find (keyword)`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_All tasks contaning the keyword specified will be displayed._"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Purpose:**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "This keyword closes the application window."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "_Application window will be closed._"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 132,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected LocalDateTime dL;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Deadline Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param dL"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public Deadline(String description, LocalDateTime dL) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.dL \u003d dL;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Deadline\u0027s overriden toString method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return String representation of Deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String dateTimeFormat \u003d dL.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        if (tag.equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[D] [\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + dateTimeFormat + \")\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[D] [\" + this.getStatusIcon() + \"] \" + \"[\" + this.tag + \"] \" + this.description + \" (by: \" + dateTimeFormat + \") \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 32
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Duke Constructor."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "//        String filePath \u003d \"/Users/gerrenseow/Documents/Gerren/MODULES/Y2S2/CS2103T/Individual_Project/duke/src/main/java/data/data.txt\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String filePath \u003d \"data.txt\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane,1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                DialogBox.getUserDialog(userText, (user)),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, (duke))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        );"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String commandReceived(String command) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output \u003d parser.commandHandler2(command, tasks.tasks, storage.filepath);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (output.equals(\"Bye! See You Soon!\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output \u003d e.getMessage();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     *  Duke\u0027s run method."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     *  Calls its Ui attribute, and activates the onStart function"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        ui.onStart(tasks, storage.filepath);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 182,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * DukeException constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Event Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Event\u0027s overriden toString method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return String representation of Event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        if (tag.equals(\"\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[E] [\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + this.time + \")\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[E] [\" + this.getStatusIcon() + \"] \" + \"[\" + this.tag + \"] \" + this.description + \" (at: \" + this.time + \") \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 28
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        TimeUnit.MILLISECONDS.sleep(500);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/patrick.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/spongebob.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String logo \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        logo +\u003d (\"Hello! I\u0027m BOB the SPONGE.\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        logo +\u003d (\"-----------------------------------\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        logo +\u003d (\"Please enter your commands below:\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                DialogBox.getDukeDialog(logo, dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String reply \u003d duke.commandReceived(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                DialogBox.getDukeDialog(reply, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 57
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Parser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Parser\u0027s startParsing method. which consists of a while-loop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * that takes in user input as commands"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void startParsing(ArrayList\u003cTask\u003e tasks, String filepath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (command.trim().toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                commandHandler2(command, tasks, filepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Parser\u0027s commandHandler method, which handles every single command"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * from user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String commandHandler2(String command, ArrayList\u003cTask\u003e store, String filepath) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String[] check \u003d command.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        switch (check[0].toLowerCase()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                output +\u003d (\"\" + (i + 1) + \". \" + store.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int intOfInterest;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                intOfInterest \u003d Integer.parseInt(check[1]) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please use an Integer together with the done command\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (intOfInterest \u003e\u003d store.size() || intOfInterest \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The Integer you used is invalid. Index of Array is out of bounds.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.get(Integer.parseInt(check[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (store.get(Integer.parseInt(check[1]) - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String tasking \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 1; i \u003c check.length; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                tasking +\u003d check[i];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                tasking +\u003d \" \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            tasking \u003d tasking.trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            ToDo todo \u003d new ToDo(tasking);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.add(todo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"  \" + todo + \"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String[] newCheck \u003d Arrays.copyOfRange(check, 1, check.length);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int by \u003d Arrays.asList(newCheck).indexOf(\"/by\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (by \u003d\u003d -1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please remember to insert an \u0027/by\u0027 in the deadline description.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String taskingD \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 0; i \u003c by; i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                taskingD +\u003d newCheck[i];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                taskingD +\u003d \" \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            taskingD \u003d taskingD.trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "          "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String dL \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d by + 1; i \u003c newCheck.length; i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                dL +\u003d newCheck[i];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                dL +\u003d \" \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            dL \u003d dL.trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (!dL.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please enter deadline in the format yyyy-MM-dd HHmm. Thank you.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            LocalDateTime d1 \u003d LocalDateTime.parse(dL, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskingD, d1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.add(deadline);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"  \" + deadline + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String[] newCheck2 \u003d Arrays.copyOfRange(check, 1, check.length);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int at \u003d Arrays.asList(newCheck2).indexOf(\"/at\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (at \u003d\u003d -1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please remember to insert an \u0027/at\u0027 in the event description.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String taskingE \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 0; i \u003c at; i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                taskingE +\u003d newCheck2[i];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                taskingE +\u003d \" \";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            taskingE \u003d taskingE.trim();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d at + 1; i \u003c newCheck2.length; i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                time +\u003d newCheck2[i];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                time +\u003d \" \";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            time \u003d time.trim();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            Event event \u003d new Event(taskingE, time);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.add(event);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"  \" + event + \"\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int intOfInterestD;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                intOfInterestD \u003d Integer.parseInt(check[1]) - 1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please use an Integer together with the delete command\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (intOfInterestD \u003e\u003d store.size() || intOfInterestD \u003c 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The Integer you used is invalid. Index of Array is out of bounds.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            Task temp \u003d store.get(intOfInterestD);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.remove(intOfInterestD);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"  \" + temp + \"\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String toFind \u003d \"\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 1; i \u003c check.length; i++) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                toFind +\u003d check[i];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                toFind +\u003d \" \";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            toFind \u003d toFind.trim();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                Task tempTask \u003d store.get(i);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                if (tempTask.description.contains(toFind) || tempTask.tag.contains(toFind)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    output +\u003d (\"\" + counter + \". \" + tempTask + \"\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"tag\":"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            assert check.length \u003e 1: \"Invalid Expression\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (check.length \u003c 3) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a tag should be in the form as such: tag 2 #Fun\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            int intOfInterestTag;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                intOfInterestTag \u003d Integer.parseInt(check[1]) - 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! Please use tag command in specific format. Eg. Tag 2 #Fun\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            if (intOfInterestTag \u003e\u003d store.size() || intOfInterestTag \u003c 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                throw new DukeException(\"OOPS! The Integer you used is invalid. Index of Array is out of bounds.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (\"Nice! I\u0027ve added a tag for this task:\\n\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            store.get(Integer.parseInt(check[1]) - 1).setTag(check[2]);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output +\u003d (store.get(Integer.parseInt(check[1]) - 1));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            saveTasks(store, filepath);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            output \u003d \"Bye! See You Soon!\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            throw new DukeException(\"OOPS! I\u0027m sorry but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Parser\u0027s saveTasks method, which saves any update in list to"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * harddrive, in a txt.file"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public static void saveTasks(ArrayList\u003cTask\u003e store, String filepath) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        BufferedWriter writer;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String saveAll \u003d \"\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            for (Task t : store) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                String letter;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    Deadline temp \u003d (Deadline) t;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    letter \u003d \"D\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d letter + \" | \" + temp.toSave() + \" | \" + temp.tag + \" | \" + temp.description + \" | \" + temp.dL;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d \"\\n\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    Event temp \u003d (Event) t;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    letter \u003d \"E\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d letter + \" | \" + temp.toSave() + \" | \" + temp.tag + \" | \" + temp.description + \" | \" + temp.time;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d \"\\n\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                } else if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    ToDo temp \u003d (ToDo) t;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    letter \u003d \"T\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d letter + \" | \" + temp.toSave() + \" | \" + temp.tag + \" | \" + temp.description;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    saveAll +\u003d \"\\n\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            writer.write(saveAll);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jerrenss": 267
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Storage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Storage Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Storage\u0027s load method, which loads all data from txt.file into an ArrayList of Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return ArrayList\u003cTask\u003e which will be stored as an attribute of a TaskList object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //Read from File"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            String currLine \u003d br.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            while (currLine !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                String[] parts \u003d currLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                String[] newParts \u003d new String[parts.length];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                for (int i \u003d 0; i \u003c parts.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    newParts[i] \u003d parts[i].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                if (newParts[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    ToDo temp \u003d new ToDo(newParts[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    temp.setTag(newParts[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    if (newParts[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                        temp.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    store.add(temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                } else if (newParts[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    LocalDateTime d1 \u003d LocalDateTime.parse(newParts[4]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    Deadline temp \u003d new Deadline(newParts[3],d1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    temp.setTag(newParts[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    if (newParts[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                        temp.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    store.add(temp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                } else if (newParts[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    Event temp \u003d new Event(newParts[3], newParts[4]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    temp.setTag(newParts[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    if (newParts[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                        temp.isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                    store.add(temp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                currLine \u003d br.readLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            throw new DukeException(\"IO Exception\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 69
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Task Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Task\u0027s getStatusIcon method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return tick or cross dependent on isDone boolean attribute"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Task\u0027s markAsDone method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void setTag(String tag) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Task\u0027s overriden toString method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return String representation of Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * TaskList\u0027s default constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * TaskList\u0027s constructor when there is data loaded from txt.file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * ToDo Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * ToDo\u0027s overriden toString method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @return String representation of ToDO"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        if (tag.equals(\"\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[T] [\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            return (\"[T] [\" + this.getStatusIcon() + \"] \" + \" [\" + this.tag + \"] \" + this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " * Class representation of Ui."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Ui\u0027s on start method, which prints the Introduction header and,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * creates a Parser object, running its startParsing function."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void onStart(TaskList tasks, String filepath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        System.out.println(\"----------------------\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        System.out.println(\"Please enter your commands below:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        parser.startParsing(tasks.tasks, filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     * Ui\u0027s showLoadingError method, which will be colled when filepath of txt.file is invalid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        System.out.println(\"ERROR. Previous data cannot be found. A new, empty task list is created.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jerrenss": 35
    }
  },
  {
    "path": "src/main/java/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "T | Y |  | Hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "T | Y |  | task3"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "E | N | #swag | hh | hh"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 3
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        ToDo td \u003d new ToDo(\"Task1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String expectedStringFormat \u003d \"[T] [\\u2718] Task1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        assertEquals(td.toString(), expectedStringFormat);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        LocalDateTime d1 \u003d LocalDateTime.parse(\"2019-01-28 2359\" , DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Deadline d \u003d new Deadline(\"CS2103T assignment\", d1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String expectedStringFormat \u003d \"[D] [\\u2718] CS2103T assignment (by: Jan 28 2019 11:59PM)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        assertEquals(d.toString(), expectedStringFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    public void test3() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        Event e \u003d new Event(\"CNY\", \"25th Aug 2019\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        String expectedStringFormat \u003d \"[E] [\\u2718] CNY (at: 25th Aug 2019)\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "        assertEquals(e.toString(), expectedStringFormat);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 31
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "  [T] [✘] borrow book tonight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "1. [T] [✘] borrow book tonight"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "todo borrow book tonight"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerrenss"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerrenss"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jerrenss": 34
    }
  }
]
