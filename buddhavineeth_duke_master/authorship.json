[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "group \u0027vineeth_buddha.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15,
      "-": 18
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "#Sat Feb 01 18:50:01 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the main logic flow of the Duke Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object stores all list data into disk."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eTaskList\u003c/code\u003e object stores list of user tasks in RAM."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eUi\u003c/code\u003e object handles input and output interaction with user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * A loop that continuously seeks commands from user and executes them."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * If bye command is received, the loop terminates."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printWelcomeMessageAndGetName();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        boolean isActive \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        while (isActive) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                String instruction \u003d ui.getInstruction();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Command c \u003d Parser.parse(instruction);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                isActive \u003d c.execute(tasks, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        new Duke(\"data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 53
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.WhatsupCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Parser object reads user input strings and informs main Duke object of what command to execute."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * returns the command to execute, based on user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param instruction User input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return command to execute."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException if user input is invalid or does not follow specified format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static Command parse(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (instruction.equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"\\t\" + \"Please use me! Do not leave your commands empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String keyword \u003d instruction.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        // by default, result is a Bye Command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] doneTokens \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (doneTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please key in the correct format of your done command.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            int completedTaskNumber;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                completedTaskNumber \u003d Integer.parseInt(doneTokens[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (NumberFormatException ne) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please specify the number of the task that you\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \" wish to mark as completed.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new DoneCommand(completedTaskNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] delTokens \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (delTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please key in the correct format of your delete command.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            int deletedTaskNumber;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                deletedTaskNumber \u003d Integer.parseInt(delTokens[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (NumberFormatException ne) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please specify the number of the task that you\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \" wish to delete.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new DeleteCommand(deletedTaskNumber);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"whatsup\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] whatsupTokens \u003d instruction.split(\"/on \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            LocalDate queryDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryDate \u003d LocalDate.parse(whatsupTokens[1].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please write the date in this format:\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \"YYYY-MM-DD\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new WhatsupCommand(queryDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String taskName;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                taskName \u003d instruction.split(\"todo \")[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    throw new DukeException(\"\\t\" + \"Invalid Todo Format.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please do not leave todo description as empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"todo\", taskName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] eventTokens \u003d instruction.split(\"/at \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String timePeriod;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String eventName;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                timePeriod \u003d eventTokens[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                eventName \u003d eventTokens[0].split(\"event \")[1].trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                if (timePeriod.equals(\"\") || eventName.equals(\"\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    throw new DukeException(\"\\t\" + \"Invalid Event Format.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aiobe) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please do not leave the event description (partially) empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"event\", eventName, timePeriod);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] deadlineTokens \u003d instruction.split(\"/by \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String dueDate;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String deadlineName;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                dueDate \u003d deadlineTokens[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                deadlineName \u003d deadlineTokens[0].split(\"deadline \")[1].trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                if (dueDate.equals(\"\") || deadlineName.equals(\"\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    throw new DukeException(\"\\t\" + \"Invalid Deadline Format.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aiobe) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please do not leave the event description (partially) empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"deadline\", deadlineName, dueDate);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                String[] findTokens \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                String keyWord;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    keyWord \u003d findTokens[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    if (keyWord.equals(\"\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        throw new DukeException(\"\\t\" + \"Please enter a keyword when finding.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException aiobe) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    throw new DukeException(\"\\t\" + \"Please do not leave the find description empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                return new FindCommand(keyWord);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"You have used an invalid instruction. \" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    \"I am too dumb to understand you.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 143
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Responsible for storing and reading list data into/from disk respectively."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " *\u003ccode\u003efilePath\u003c/code\u003e is the location of the file with the list data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Saves list data of Duke application into disk whenever bye command is executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param list The list of tasks inputted by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            FileOutputStream savedFile \u003d new FileOutputStream(new File(filePath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            ObjectOutputStream savedData \u003d new ObjectOutputStream(savedFile);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedData.writeObject(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedData.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedFile.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Used when starting the Duke Application."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return List of Tasks stored in disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException when filePath is incorrect."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            File savedFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            // read from save file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (!savedFile.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                File directory \u003d new File(savedFile.getParent());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    boolean mkdirs \u003d directory.mkdirs();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                boolean newFile \u003d savedFile.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                FileInputStream readFile \u003d new FileInputStream(savedFile);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ObjectInputStream readData \u003d new ObjectInputStream(readFile);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Object object \u003d readData.readObject();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                result \u003d (ArrayList\u003cTask\u003e) object;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                readData.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                readFile.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"Class Name is not matching input!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no save file to load.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 73
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Responsible for user interaction in terms of input and output of system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String userName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Prints error in case file is not loaded properly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"A new save file has been initialised for you.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Prints useful message to user on why exception was generated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param e Contains the message on why exception was generated."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Prints welcome message to user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return the name of user, in String type"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String printWelcomeMessageAndGetName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"Hello there! I am Duke, your personal assistant. May I know your name?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.userName \u003d scan.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return userName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * prints final message to user before program is terminated in Duke class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printFarewellMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\" + \"Adios. It was my pleasure assisting you. Keep smiling \" + userName + \".\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * gets user input for parser."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return user input, in String type."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String getInstruction() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"How may I help you \" + userName + \"?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * outputs all tasks in taskList object to user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param taskList a list of tasks inputted by user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * outputs success of done command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param completed the task that is marked as completed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printDoneMessage(Task completed) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\" + \"Hooray! You\u0027ve finally managed to finish this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\\t\" + completed);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * outputs success of delete command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param deleted the task that is to be deleted from taskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printDeleteMessage(Task deleted) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\\t\" + deleted);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * outputs success of whatsup command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param tasks the tasks that are on the same day that is queried."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printWhatsupMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            System.out.println(\"You have nothing assigned on that day.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            System.out.println(\"\\t\" + \"The tasks you have on that day are:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * outputs success of add task command."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param newTask either a Event, Deadline or To-do task object"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printAddTaskMessage(Task newTask) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (newTask instanceof Todo) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"to do\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else if (newTask instanceof Deadline) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"deadline\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"event\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\" + \"Awesome! I\u0027ve added this \" + identifier + \" :\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        System.out.println(\"\\t\\t\" + newTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void printFindMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            System.out.println(\"\\t\" + \"There were no tasks matching what you said.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            System.out.println(\"\\t\" + \"Here you go, this is probably what you were finding:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 137
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String taskDescriptor;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String timePeriod;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public AddCommand(String descriptor, String taskName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskDescriptor \u003d descriptor;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public AddCommand(String descriptor, String eventName, String timePeriod) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskDescriptor \u003d descriptor;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskName \u003d eventName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.timePeriod \u003d timePeriod;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        switch (taskDescriptor) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Task newTodo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ui.printAddTaskMessage(newTodo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Event newEvent \u003d new Event(taskName, timePeriod);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ui.printAddTaskMessage(newEvent);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(taskName, timePeriod);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ui.printAddTaskMessage(newDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printFarewellMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 12
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents user input in a meaningful way, so that it can be executed accordingly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public abstract boolean execute(TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private int deletedTaskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DeleteCommand(int deletedTaskNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.deletedTaskNumber \u003d deletedTaskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Task deleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            deleted \u003d taskList.deleteTask(deletedTaskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no such task with the number you have specified. \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    \"Kindly check list again.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printDeleteMessage(deleted);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private int completedTaskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DoneCommand(int completedTaskNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.completedTaskNumber \u003d completedTaskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Task toComplete;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            toComplete \u003d taskList.getTask(completedTaskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no such task with the number you have specified. \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    \"Kindly check list again.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        toComplete.completeStatus();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printDoneMessage(toComplete);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 28
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Command that finds a keyword from taskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e queryTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printFindMessage(queryTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printList(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 12
    }
  },
  {
    "path": "src/main/java/duke/command/WhatsupCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class WhatsupCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public WhatsupCommand(LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e queryTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (task instanceof Deadline \u0026\u0026"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    ((Deadline) task).getDueDate().toLocalDate().equals(date)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } else if (task instanceof Event \u0026\u0026"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    ((Event) task).getTimePeriod().toLocalDate().equals(date)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ui.printWhatsupMessage(queryTasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 36
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    // to avoid warning because of inheriting from a Serializable class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private static final long serialVersionUID \u003d 1000000;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected LocalDateTime dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Deadline(String identifier, String dueDate) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy H:m\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"\\t\" + \"Please write the date and time in this format:\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \"dd-MM-yyyy h:m. For example, 05-27-1997 21:02 is the format\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \" to represent 9:02pm on 27 May 1997\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.dueDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Deadline: \" + super.toString() + \" (please complete by \" + dueDate + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected LocalDateTime timePeriod;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Event(String identifier, String timePeriod) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy H:m\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.timePeriod \u003d LocalDateTime.parse(timePeriod, formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new DukeException(\"\\t\" + \"Please write the date and time in this format:\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \"dd-MM-yyyy h:m. For example, 05-27-1997 21:02 is the format\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                        \" to represent 9:02pm on 27 May 1997\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public LocalDateTime getTimePeriod() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.timePeriod;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Event: \" + super.toString() + \" (at: \" + timePeriod + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the parent class of various types of features the user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected String identifier;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task(String identifier) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.identifier \u003d identifier;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return (isCompleted ? \"Complete\" : \"Incomplete\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean completeStatus() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.identifier;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 30
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (int currNum \u003d 1; currNum \u003c\u003d taskList.size(); currNum++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d result + \"\\t\" + currNum + \". \" + taskList.get(currNum - 1) + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Todo(String identifier) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Todo: \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 11
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for toString() method of \"Event\" class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"Event: [Incomplete] Level-9 (at: 1997-05-27T12:22)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Event(\"Level-9\", \"27-05-1997 12:22\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testGetTimePeriod() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for getTimePeriod() method of \"Event\" class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"1997-05-27T12:22\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Event(\"Level-9\", \"27-05-1997 12:22\").getTimePeriod().toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 22
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testStringConversion(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for toString() method of \"T o d o\" class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"Todo: [Incomplete] Level-9\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Todo(\"Level-9\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 14
    }
  }
]
