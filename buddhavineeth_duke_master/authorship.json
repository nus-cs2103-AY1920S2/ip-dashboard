[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### Setting up"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  * JDK 11"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "  * Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "  * Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "2. Set up the correct JDK version."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "3. Click `Import Project`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "4. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "5. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "6. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "7. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "8. Click `Finish`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "## Tutorials "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "## Feedback, Bug Reports"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "  * If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " -edu/duke/issues)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "  * We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 22,
      "-": 19
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "group \u0027vineeth_buddha.duke\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 43,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Duke Ui](Ui.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Duke is a Personal Productivity Chatbot that helps a user keep track of various todos, notes, events and deadlines."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003e As mentioned above these are the 4 types of Tasks:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "1. **Todo**: Tasks without any date attached to them."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "2. **Event**: Tasks that occur on a specific date and time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "3. **Deadline**: Tasks that should be done by a particular date and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "4. **Note**: Tasks that do not need to be completed, but rather are snippets of information meant to be stored."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Duke can perform any of the following commands:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "1. **Add** a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "2. **List** out all of User\u0027s tasks stored by Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "3. **Mark as complete** for any specific task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "4. **Find** a particular task using a keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "5. **Delete** a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "6. **Whatsup**: find out any event or deadline occurring on a given date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "7. **Exit**: terminate the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "## Running Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "1. Locate the jar file in the File Explorer or Finder."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "2. Type ‘cmd’ on the search bar and press ‘Enter’ to launch Command Prompt if on Windows or run Terminal if on MacOS."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "3. Execute the following command, assuming the jar file is named “duke-0.2-all.jar”"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003e `java -jar duke-0.2-all.jar`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 1. Add a task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "To add a task to your list, use any of the following keywords:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "1. todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "2. event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "3. deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "4. note"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### `todo ` - Add a new todo task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Adding a new todo task requires the following format:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "A description is used to provide details about the new todo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`todo Complete Duke UserGuide.`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "The above command adds a new todo task with the description \"Complete Duke UserGuide.\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Todo Output](Todo.png)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### `event ` - Add a new event task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Adding a new event task requires the following format:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`event [description] /at [dd-mm-yyyy hh:mm]`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "A description is used to provide details about the new event, "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "while a date and time is used to indicate when the event is occurring."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`event Red Wedding /at 10-12-2020 21:21`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "The above command adds a new event task with the description \"Red Wedding\" and"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "schedules it on 10th of December 2020 at 9:21pm."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Event Output](Event.png)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### `deadline ` - Add a new deadline task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Adding a new deadline task requires the following format:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`deadline [description] /by [dd-mm-yyyy hh:mm]`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "A description is used to provide details about the new deadline, "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "while a date and time is used to indicate by when the task should be completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`deadline Repay my debts /by 27-05-2020 08:21`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "The above command adds a new deadline task with the description \"Repay my debts\" and"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "schedules it to be done by 27th of May 2020 at 8:21am."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Deadline Output](Deadline.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### `note ` - Add a new note task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Adding a new note task requires the following format:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`note [description]`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "A description is used to provide the snippet of information to be captured inside the note."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`note Bran knows what I did. I need to watch out in Winterfell.`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "The above command adds a new note with the description:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\"Bran knows what I did. I need to watch out in Winterfell\"."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Note Output](Note.png)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 2. List"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "To list out all stored tasks, use the following format:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " `list`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![List Output](List.png)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 3. **Mark as complete** for any specific task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Using `list` we know what is the task number of each task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "With that number, we can mark the corresponding task as complete, using the following format:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`done [task number]`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example Usage:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "This marks the 1st item in the list as completed."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example Output:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Done output](Done.png)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 4. **Find** a particular task using a keyword."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Using `find` keyword, we can search for tasks that have a specific keyword."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Use the following format:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`find [specific keyword or phrase]`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`find Red`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example output:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Find output](Find.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 5. **Delete** a task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Using the `delete` keyword, we can delete a task if we no longer require it in the list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Use the following format:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`delete [task number of the task you intend to delete]`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example output:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Delete output](Delete.png)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 6. **Whatsup**: find out any event or deadline occurring on a given date."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Find out all events or deadlines on a specific date by using this format:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`whatsup /on [dd-mm-yyyy]`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "`whatsup /on 27-05-2020`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Example output:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "![Whatsup output](Whatsup.png)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "### 7. **Exit**: terminate the program."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "To close the program, type `bye`."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "Do note that even after the program closes, when you launch it again, it will remember your stored tasks."
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 177,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructor method that builds a DialogBox node with an Avatar icon and a String of text."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param text The String of text inside a DialogBox."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param img The Avatar icon in a DialogBox."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        displayPicture.setClip(new Circle(50, 45, 45));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Creates and returns a DialogBox for Duke User."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param text The user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param img The user icon."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A DialogBox node for User."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        db.setStyle(\"-fx-background-color:PALETURQUOISE\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Creates and returns a DialogBox for Duke."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param text The response by Duke to user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param img The Duke icon."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A DialogBox node for Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        db.setStyle(\"-fx-background-color: POWDERBLUE\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 85
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the main logic flow of the Duke Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object stores all list data into disk."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eTaskList\u003c/code\u003e object stores list of user tasks in RAM."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A \u003ccode\u003eUi\u003c/code\u003e object handles input and generates the response for user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param filePath The location of the file that stores all user list history."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Runs instruction by user and returns the corresponding response generated by its ui."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param instruction The String of user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A relevant response to the user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String run(String instruction) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Command c \u003d Parser.parse(instruction);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d c.execute(tasks, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            assert !result.equals(\"\") : \"No result was returned.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d ui.showError(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 51
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A launcher class to workaround classpath issues for GUI Purposes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Contains the main method that launches Duke Application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Sets scene for MainWindow node."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param stage The top level JavaFX Container for the GUI of the Duke Application."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/duke.MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            fxmlLoader.\u003cduke.MainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /* I do not own the rights to these photos. These photos have been taken from the following websites:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    https://en.wikipedia.org/wiki/Night_King"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    https://m.buro247.sg/images/culture/game-of-thrones-jamie-lannister-burosingapore-ca.jpg"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * The first method that runs when the Application starts, to greet User."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Sets the Duke object from higher-level nodes to MainWindow node."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param d Duke object that contains the main logic behaviour of the application."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String input \u003d getUserResponse(userInput.getText());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String response \u003d getDukeResponse(userInput.getText());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                DialogBox.getUserDialog(input, userImage), DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        // if Duke responds with goodbye message, terminate program."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (response.equals(\"Duke: \" + \"\\n\" + \"\\n\" + \"It was my pleasure assisting you. Keep smiling while you can.\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \" Winter is coming.\" + \"\\n\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns an echoed user input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param input Instruction inputted by user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String getUserResponse(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"You: \" + \"\\n\" + input;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns the response to user input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Response to user input, generated by Duke object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String getDukeResponse(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d duke.run(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Duke: \" + \"\\n\" + result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 90
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.WhatsupCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.EmptyCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidDeadlineException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidDeleteException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidDoneException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidEventException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidFindException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidNoteException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidTodoException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidWhatsupException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Parser object reads user input strings and informs main Duke object of what command to execute."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * returns the Command to execute, based on user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param instruction User input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Command to execute."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException If user input is invalid or does not follow specified format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static Command parse(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (instruction.equals(\"\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new EmptyCommandException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String keyword \u003d instruction.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] doneTokens \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            int completedTaskNumber;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (doneTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidDoneException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                completedTaskNumber \u003d Integer.parseInt(doneTokens[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (NumberFormatException ne) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidDoneException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new DoneCommand(completedTaskNumber);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] delTokens \u003d instruction.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            int deletedTaskNumber;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (delTokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidDeleteException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                deletedTaskNumber \u003d Integer.parseInt(delTokens[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (NumberFormatException ne) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidDeleteException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new DeleteCommand(deletedTaskNumber);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"whatsup\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] whatsupTokens \u003d instruction.split(\"/on \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            LocalDate queryDate;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryDate \u003d LocalDate.parse(whatsupTokens[1].trim(), formatter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidWhatsupException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new WhatsupCommand(queryDate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String taskName;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                taskName \u003d instruction.trim().split(\"todo \")[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidTodoException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"todo\", taskName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] eventTokens \u003d instruction.split(\"/at \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String timePeriod;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String eventName;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                timePeriod \u003d eventTokens[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                eventName \u003d eventTokens[0].trim().split(\"event \")[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidEventException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"event\", eventName, timePeriod);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] deadlineTokens \u003d instruction.split(\"/by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String dueDate;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String deadlineName;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                dueDate \u003d deadlineTokens[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                deadlineName \u003d deadlineTokens[0].trim().split(\"deadline \")[1];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"deadline\", deadlineName, dueDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"note\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String note;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                note \u003d instruction.trim().split(\"note \")[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                System.out.println(note);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidNoteException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new AddCommand(\"note\", note);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String[] findTokens \u003d instruction.trim().split(\" \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            String keyWord;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                keyWord \u003d findTokens[1];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                throw new InvalidFindException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return new FindCommand(keyWord);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 155
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Responsible for storing and reading list data into/from disk respectively."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " *\u003ccode\u003efilePath\u003c/code\u003e is the location of the file with the user task list data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param filePath Designated location of the file with user task list data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Saves list data of Duke application into disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param list The list of tasks inputted by user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            FileOutputStream savedFile \u003d new FileOutputStream(new File(filePath));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            ObjectOutputStream savedData \u003d new ObjectOutputStream(savedFile);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedData.writeObject(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedData.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            savedFile.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Used when starting the Duke Application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return List of tasks stored in disk."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException when filePath is incorrect."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    // referred to https://mkyong.com/java/how-to-read-and-write-java-object-to-a-file and"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    // https://mkyong.com/java/how-to-create-directory-in-java/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            // read from save file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            File savedFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (!savedFile.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                File directory \u003d new File(savedFile.getParent());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    boolean mkdirs \u003d directory.mkdir();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                boolean newFile \u003d savedFile.createNewFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                FileInputStream readFile \u003d new FileInputStream(savedFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                ObjectInputStream readData \u003d new ObjectInputStream(readFile);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                Object object \u003d readData.readObject();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                result \u003d (ArrayList\u003cTask\u003e) object;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                readData.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                readFile.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"Class Name is not matching input!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no save file to load.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 79
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Responsible for user interaction in terms of returning output to each user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns useful message to user on why exception was generated."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param e Contains the message on why exception was generated."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns useful message to user on why exception was generated."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showError(DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns a welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns welcome message to user, upon initialisation."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public static String showWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + \"Hello there! I am Duke, your personal assistant. Before I take on the Iron Throne,\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \" how may I be of service?\" + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns a goodbye message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns final message to user before program is terminated."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showFarewellMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + \"It was my pleasure assisting you. Keep smiling while you can. Winter is coming.\" + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns a String of all tasks in taskList object to user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param taskList a list of tasks inputted by user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return a String of all tasks specified in the param."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showList(TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (taskList.getList().isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return \"\\n\" + \"There are no tasks in the list yet.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + taskList.toString() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns output of successful Done command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param completed the task that is marked as completed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return An output of a completed Done command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showDoneMessage(Task completed) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + \"Hooray! You\u0027ve finally managed to finish this task:\" + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \"\\t\" + completed.toString() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns output of a successful Delete Command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param deleted the task that is to be deleted from taskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return An output of a completed Delete command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showDeleteMessage(Task deleted) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + \"Got it! I\u0027ve removed this task:\" + \"\\n\" + \"\\t\" + deleted.toString() + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns output of a Whatsup Command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param tasks the tasks that are on the same day that is queried."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return An output of a completed Whatsup command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showWhatsupMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return \"\\n\" + \"You have nothing assigned on that day.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d \"\\n\" + \"The tasks you have on that day are:\" + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result +\u003d \"\\t\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns output of a successful Add command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param newTask either a Event, Deadline or To-do task object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return An output of a successful Add command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showAddTaskMessage(Task newTask) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (newTask instanceof Todo) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"to do\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else if (newTask instanceof Deadline) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"deadline\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else if (newTask instanceof Event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"event\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            identifier \u003d \"note\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"\\n\" + \"Awesome! I\u0027ve added this \" + identifier + \" :\" + \"\\n\" + \"\\t\" + newTask.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns output of a Find Command."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param tasks The list of tasks that match a keyword queried by user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A String of tasks that match what user queried."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String showFindMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            return \"\\n\" + \"There were no tasks matching what you said.\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d \"\\n\" + \"Here you go, this is probably what you were finding:\" + \"\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result +\u003d \"\\t\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 125
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Note;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to add a new Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String taskDescriptor;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String timePeriod;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public AddCommand(String descriptor, String taskName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskDescriptor \u003d descriptor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructor used for Events and Deadlines."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param descriptor Refers to type of Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param eventName Refers to name of Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param timePeriod Refers to time and date of Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public AddCommand(String descriptor, String eventName, String timePeriod) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskDescriptor \u003d descriptor;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskName \u003d eventName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.timePeriod \u003d timePeriod;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        switch (taskDescriptor) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Task newTodo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d ui.showAddTaskMessage(newTodo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Event newEvent \u003d new Event(taskName, timePeriod);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d ui.showAddTaskMessage(newEvent);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(taskName, timePeriod);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d ui.showAddTaskMessage(newDeadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        case \"note\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            Note newNote \u003d new Note(taskName);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            taskList.addTask(newNote);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d ui.showAddTaskMessage(newNote);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 70
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to terminate application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showFarewellMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents user input in a meaningful way, so that it can be executed accordingly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to delete a new Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private int deletedTaskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DeleteCommand(int deletedTaskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.deletedTaskNumber \u003d deletedTaskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Task deleted;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            deleted \u003d taskList.deleteTask(deletedTaskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no such task with the number you have specified. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    + \"Kindly check list again.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showDeleteMessage(deleted);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to complete a Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private int completedTaskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DoneCommand(int completedTaskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.completedTaskNumber \u003d completedTaskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        Task toComplete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            toComplete \u003d taskList.getTask(completedTaskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new DukeException(\"There is no such task with the number you have specified. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    + \"Kindly check list again.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        toComplete.completeStatus();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showDoneMessage(toComplete);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents a Command that finds a keyword from taskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e queryTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showFindMessage(queryTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to get List of Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showList(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 14
    }
  },
  {
    "path": "src/main/java/duke/command/WhatsupCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the Command used to find tasks that occur on a specified date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class WhatsupCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public WhatsupCommand(LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        ArrayList\u003cTask\u003e queryTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            if (task instanceof Deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    \u0026\u0026 ((Deadline) task).getDueDate().toLocalDate().equals(date)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            } else if (task instanceof Event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                    \u0026\u0026 ((Event) task).getTimePeriod().toLocalDate().equals(date)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                queryTasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return ui.showWhatsupMessage(queryTasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Parent class of all the exceptions specific to the Duke Application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    // to avoid warning because of inheriting from a Serializable class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private static final long serialVersionUID \u003d 1000000;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param message The reason for generation of exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user input is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public EmptyCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(\"\\n\" + \"Please do not leave your commands empty!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(\"\\n\" + \"Please use me properly dude! Do not ask me to do something I am not trained in. \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \"Winter is coming.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid Deadline command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidDeadlineException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For deadline commands, follow this format: deadline {deadline name} \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \"/by dd-mm-yyyy hh:mm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when an invalid format is given for Delete command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidDeleteException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidDeleteException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For delete commands, follow this format: delete {intended task number}\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when an invalid format is given for Done command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidDoneException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidDoneException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For done commands, follow this format: done {intended task number}\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid Event command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidEventException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For event commands, follow this format: event {event name} \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \"/at dd-mm-yyyy hh:mm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid Find command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidFindException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidFindException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For find commands, follow this format: find \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + \"{(complete or partial) task or note name}\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * A parent class of all the exceptions due to user providing invalid formatted commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidFormatException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(\"\\n\" + \"Your command is not following the right format mate. Winter is coming.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidNoteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid Note command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidNoteException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidNoteException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For note commands, follow this format: note {intended note}\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid to do command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidTodoException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidTodoException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For todo commands, follow this format: todo {intended task}\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidWhatsupException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Thrown when user inputs invalid whatsup command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class InvalidWhatsupException extends InvalidFormatException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public InvalidWhatsupException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return super.toString() + \"\\n\\n\" + \"For whatsup commands, follow this format: whatsup /on dd-mm-yyyy\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents a Task that has a specific end date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected LocalDateTime dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructs Deadline objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param identifier Name of Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param dueDate Time and Date of Deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException Thrown when wrong format is used."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Deadline(String identifier, String dueDate) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy H:m\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.dueDate \u003d LocalDateTime.parse(dueDate, formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Gets the due date of a deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return LocalDateTime object of the deadline\u0027s due date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.dueDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy H:m\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Deadline: \" + super.toString() + \" (please complete by \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                + formatter.format(dueDate) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.InvalidEventException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents a task that occurs on a certain date and time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected LocalDateTime timePeriod;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Constructs Event objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param identifier Name of Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param timePeriod Time and Date of Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @throws DukeException Thrown when wrong format is used."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Event(String identifier, String timePeriod) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy H:m\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            this.timePeriod \u003d LocalDateTime.parse(timePeriod, formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            throw new InvalidEventException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Gets Date and Time of event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A LocalDateTime object of an event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public LocalDateTime getTimePeriod() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.timePeriod;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy H:m\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Event: \" + super.toString() + \" (at: \" + formatter.format(timePeriod) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Note.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents information about small snippets of information user wants to record."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Note extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Note(String note) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(note);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Returns note snippet."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return the relevant notes in the Note object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String getNote() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.identifier;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Note: \" + this.identifier;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents the parent class of various types of tasks that the user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected String identifier;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task(String identifier) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.identifier \u003d identifier;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Gets the status of a Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns the status of completion of a task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return (isCompleted ? \"Done\" : \"Pending\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Sets the status to complete."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns true to signal completed status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public boolean completeStatus() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.identifier;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 38
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents a Collection of all Tasks created by User."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Gets a specific task based on inputted task number."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param taskNumber The index of a task in the TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns the corresponding task object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Adds a new task to TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param task The task to be added to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return A TaskList object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public TaskList addTask(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * Removes an existing task from TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @param taskNumber The index of the task to be removed in the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     * @return Returns the deleted task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return this.taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        for (int currNum \u003d 1; currNum \u003c\u003d taskList.size(); currNum++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            result \u003d result + \"\\t\" + currNum + \". \" + taskList.get(currNum - 1) + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " * Represents a Task that has no deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public Todo(String identifier) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        super(identifier);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        return \"Todo: \" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 14
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#080303f8\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 16
    }
  },
  {
    "path": "src/main/resources/view/duke.MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"list\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"#8c0e0e\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"398.0\" style\u003d\"-fx-background-color: lightblue;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 19
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for toString() method of \"Event\" class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"Event: [Pending] Level-9 (at: May 27 1997 12:22)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Event(\"Level-9\", \"27-05-1997 12:22\").toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testGetTimePeriod() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for getTimePeriod() method of \"Event\" class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"1997-05-27T12:22\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Event(\"Level-9\", \"27-05-1997 12:22\").getTimePeriod().toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 22
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        //a unit test for toString() method of \"T o d o\" class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "        assertEquals(\"Todo: [Pending] Level-9\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "                new Todo(\"Level-9\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "buddhavineeth"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "buddhavineeth": 14
    }
  }
]
