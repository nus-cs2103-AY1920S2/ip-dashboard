[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "dependencies{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    testCompile(\"org.junit.jupiter:junit-jupiter-api:5.0.1\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    compile \u0027org.apiguardian:apiguardian-api:1.0.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 28,
      "-": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object contains description of a task e.g., \u003ccode\u003eAssignment 1\u003c/code\u003e, the deadline date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * e.g., \u003ccode\u003e2020-02-01\u003c/code\u003e and the deadline time e.g., \u003ccode\u003e1000\u003c/code\u003e of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String deadlineDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String deadlineTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * A Deadline object has a description of the Deadline task as well as the date and time at which the task is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command description of the Deadline task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineDate date when the Deadline task is due"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineTime time when the Deadline task is due"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Deadline(String command, String deadlineDate, String deadlineTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Date deadlineTimeParsed \u003d sdf.parse(deadlineTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            SimpleDateFormat sdftoFormat \u003d new SimpleDateFormat(\"hhmm aa\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            this.deadline \u003d LocalDate.parse(deadlineDate).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    + sdftoFormat.format(deadlineTimeParsed);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the deadline date and time of a Deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return deadline date and the deadline time."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String getDeadlineDateAndTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return deadlineDate + \" \" + deadlineTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether a task is marked done in int form instead of symbol form, to be displayed in the file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * saved in hard disk."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return 1 if task is marked done, or 0 if the task is marked undone."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public int getDoneInt() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about a task, stating that it is D(Deadline) task, whether it is marked done, the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task and the deadline date and time, for the updating of the file saved in hard disk."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"D - \" + getDoneInt() + \" - \" + getCommand() + \" - \" + getDeadlineDateAndTime();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[D][\" + getDoneSymbol() + \"] \" + getCommand() + \"(by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 73
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * The Duke program implements an application that is able to keep track of a task list. A user can populate the list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * with tasks inputted through the standard output, mainly Todo tasks, Deadline tasks and Event tasks, or delete tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * from the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBot.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // just an empty constructor"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Creates a Ui object to deal with user interaction , a Storage object to deal with loading or saving tasks and a"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * new TaskList object, loaded with the file storing the task list, if the file exists."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param filePath location where file which contains task list is found or created"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printLoadingError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws IOException if there is error handling data in the file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Parser parser \u003d new Parser(tasks.getList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                parser.parse(command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                ui.printError(exception);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        // update task list before exiting"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(storage.getFile()));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            writer.write(task.updateFile() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui.printExitLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        new Duke(\"./src/main/data/duke.txt\").run();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 176,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public DukeException(int i) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        switch (index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 0: // todo task needs a description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 1: // deadline task needs a description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 2: // deadline task needs a deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please include the deadline of this task!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 3: // event task needs a description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description for event cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 4: // event task needs a date and time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please include the date and time of this event!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 5: // for any unrecognised commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! I am not sure what you are talking about:(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 6: // for not specifying which task is done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please let me know which task you are done with!:)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 7: // for not specifying which task to delete"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please let me know which task you want to delete!:)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case 8: // file loading error"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Error!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 33
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object contains description of the task e.g., \u003ccode\u003emeeting\u003c/code\u003e and timing that the task will"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * occur e.g., \u003ccode\u003eSunday 10am\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Event(String command, String timing) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether a task is marked done in int form instead of symbol form, to be displayed in the file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * saved in hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return 1 if task is marked done, or 0 if the task is marked undone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public int getDoneInt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about a task, stating that it is E(Event) task, whether it is marked done, the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task and the timing at which the event will happen, for the updating of the file saved in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"E - \" + getDoneInt() + \" - \" + getCommand() + \" - \" + timing;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[E][\" + getDoneSymbol() + \"] \" + getCommand() + \"(at: \" + timing + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 40
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 10
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 3
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBot.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Parser object deals with making sense of the user commands and can find, add or delete tasks from the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * \u003ccode\u003etask list\u003c/code\u003e it stores."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public enum TypeOfError {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        TODO_NO_DESC, DEADLINE_NO_DESC, DEADLINE_NO_DEADLINE, EVENT_NO_DESC, EVENT_NO_DATE_AND_TIME, OTHERS,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        UNK_TASK_DONE, UNK_TASK_TO_DELETE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Parser(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Makes sense of the user commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command user commands inputted by user through standard output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if information of a task provided is insufficient or if command is an unknown command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.UNK_TASK_DONE.ordinal());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Task currTask \u003d taskList.get(Integer.parseInt(strArr[1]) - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            currTask.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printTaskMarkedDone(currTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.TODO_NO_DESC.ordinal());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Todo newTask \u003d new Todo(strArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printTodoTask(newTask, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.DEADLINE_NO_DESC.ordinal());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] cmdArr \u003d strArr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (cmdArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.DEADLINE_NO_DEADLINE.ordinal());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            command \u003d cmdArr[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String deadline \u003d cmdArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] deadlineArr \u003d deadline.split(\" \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Deadline newTask \u003d new Deadline(command, deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printDeadlineTask(newTask, taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.EVENT_NO_DESC.ordinal());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] cmdArr \u003d strArr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (cmdArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.EVENT_NO_DATE_AND_TIME.ordinal());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            command \u003d cmdArr[0];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String timing \u003d cmdArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Event newTask \u003d new Event(command, timing);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printEventTask(newTask, taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printList(taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(TypeOfError.UNK_TASK_TO_DELETE.ordinal());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Task currTask \u003d taskList.get(Integer.parseInt(strArr[1]) - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            taskList.remove(currTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printRemainingList(currTask, taskList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printTasksFound(taskList, strArr[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(TypeOfError.OTHERS.ordinal());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Storage object contains a \u003ccode\u003efilePath\u003c/code\u003e, the location that can be used to find the file storing the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * list or create a new file at."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns task list stored in file on hard disk or throw an exception and create a new file to store task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return task list saved in hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if file is not found and cannot be loaded."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws IOException if there is error reading data from a file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                String[] strArr \u003d line.split(\" - \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                switch (strArr[0]) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    Todo newTodoTask \u003d new Todo(strArr[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    taskList.add(newTodoTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                        newTodoTask.setDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    String[] deadlineArr \u003d strArr[3].split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    Deadline newDeadlineTask \u003d new Deadline(strArr[2], deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    taskList.add(newDeadlineTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                        newDeadlineTask.setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    Event newEventTask \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    taskList.add(newEventTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                        newEventTask.setDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            boolean isFileCreated \u003d file.createNewFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(8);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 71
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import static java.lang.Boolean.TRUE;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Task object can be a Todo task, a Deadline task or a Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Task(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        isDone \u003d TRUE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether a task has been marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return whether a task is marked as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the symbol to show whether a task has been marked as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return ✓ if task is done, or ✗ if task is not done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String getDoneSymbol() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the description of a task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return description of a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String getCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String updateFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Task list created!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object contains a description of the task e.g., \u003ccode\u003eborrow book\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Todo(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether the task is marked done in int form instead of symbol form, to be displayed in the file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * saved in hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return 1 if task is marked done, or 0 if the task is marked undone."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public int getDoneInt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about the task, stating that it is T(Todo) task, whether it is marked done and the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task, for the updating of the file saved in hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"T - \" + getDoneInt() + \" - \" + getCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[T][\" + getDoneSymbol() + \"] \" + getCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Ui object deals with interaction with the user, by printing the appropriate response to the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints welcome message when Duke is started."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Hi! I am Duke! What would you like to tell me today?:)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints message that task list is not found."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Task list not found! Creating one now...\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out respective exception."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param exception DukeException resulted from user\u0027s command input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printError(Exception exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(exception.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints goodbye message when user says bye."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printExitLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay then! Goodbye!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out task completed by user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task Task marked as \u0027Done\u0027 by user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printTaskMarkedDone(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay noted! You have completed the below task:\\n\" + task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Todo task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Todo task inputted by user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printTodoTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay! I have taken note of the following:\\n\" + task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Deadline task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Deadline task inputted by user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printDeadlineTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay! I have taken note of the following:\\n\" + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Event task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Event task inputted by user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printEventTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay! I have taken note of the following:\\n\" + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out all tasks in task list that contains the keyword the user has inputted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param keyword keyword to find."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printTasksFound(ArrayList\u003cTask\u003e taskList, String keyword) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"I have found these matching items from your task list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (task.getCommand().contains(keyword)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out the whole task list thus far."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"The below is what you have told me so far. Have you completed them?\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out remaining tasks in task list after task mentioned is deleted from the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskDeleted task to be deleted from task list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printRemainingList(Task taskDeleted, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay noted! I have deleted the below task:\\n\" + taskDeleted);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 116
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 15
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: GREY;\" text\u003d\"SEND\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cFont name\u003d\"DengXian Bold\" size\u003d\"12.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/Button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "              style\u003d\"-fx-background-color: LIGHTSTEELBLUE;\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 25
    }
  },
  {
    "path": "src/main/text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list not found! Creating one now..."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list created!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Hi! I am Duke! What would you like to tell me today?:)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay noted! You have completed the below task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 36
    }
  },
  {
    "path": "src/main/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list not found! Creating one now..."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list created!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Hi! I am Duke! What would you like to tell me today?:)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay noted! You have completed the below task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 36
    }
  },
  {
    "path": "src/main/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "deadline return book /by 2020-02-01 1100"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "deadline revise for test /by 2020-02-02 0000"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "event meeting /at Sunday 10am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 10
    }
  },
  {
    "path": "src/main/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "dir /s /B ..\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 22
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Todo newTask \u003d new Todo(\"sleep\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        newTask.setDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(1, newTask.getDoneInt());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Event newTask \u003d new Event(\"meeting\", \"Sunday 1pm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        newTask.setDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(\"E - 1 - meeting - Sunday 1pm\", newTask.updateFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Deadline newTask \u003d new Deadline(\"Assignment 1\", \"2019-01-01\", \"1000\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(\"2019-01-01 1000\", newTask.getDeadlineDateAndTime());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 27
    }
  }
]
