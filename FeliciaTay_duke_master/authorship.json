[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "dependencies{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    testCompile(\"org.junit.jupiter:junit-jupiter-api:5.0.1\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    compile \u0027org.apiguardian:apiguardian-api:1.0.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 28,
      "-": 21
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "## Description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "DukeBot is a personal chat bot to help a user keep track of tasks to be done by storing them in a task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Start-up.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Add task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* There are 3 kinds of tasks that a user can add to the task list: Todo, Deadline and Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### List task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can list out all tasks in the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can mark a task as completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can look for a particular task by inputting a keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can remove a task from the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Update description of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can update the description of a Todo task, the deadline date and time of a Deadline task or the timing details"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "of an event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### Exit from application"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* The user can close the application by inputting `bye` and the application will store the tasks in the task list to a "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`duke.txt` file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `todo` - Adds a Todo task to the task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will add a Todo task with the command inputted by the user, and update the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`todo exercise`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][❌] exercise"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Todo.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `deadline` - Adds a Deadline task to the task list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will add a Deadline task with the command as well as the date and time at which the task is "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "due which are inputted by the user, and update the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`deadline Assignment 1 /by 2020-02-01 1200`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][❌] Assignment 1 (by: Feb 01 2020 1200 PM)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Deadline.png)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `event` - Adds a Event task to the task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will add a Event task with the command as well as the timing details of the event which are"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "inputted by the user, and update the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`event meeting /at Sunday 2pm`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][❌] meeting (at: Sunday 2pm)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Event.png)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `list` - Lists all tasks in the task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will list all tasks in the task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Have you completed them?"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][❌] exercise"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][❌] Assignment 1 (by: Feb 01 2020 1200 PM)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][❌] meeting (at: Sunday 2pm)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/List.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will mark a task as completed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay noted! You have completed the below task:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✓] Assignment 1 (by: Feb 01 2020 1200 PM)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Done.png)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `find` - Looks for a particular task"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will tell the user which tasks present in the task list fit the keyword that the user has "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "inputted."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome if keyword is **not found** in tasks present in task list:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The keyword cannot be found in any of the tasks in your task list!"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/NotFound.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome if keyword is **found** in tasks present in task list:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "I have found these matching items from your task list:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][❌] borrow book"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][❌] return book (by: Feb 10 2020 1200 AM)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Found.png)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `delete` - Deletes a task from the task list"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will delete the task at the specified index of the task list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have deleted the below task:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][❌] exercise"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Delete.png)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `update` - Updates the information of a task"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* For a Todo task, inputting the exact description of the task previously entered followed by the new description "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "updates the task information."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`update borrow book /borrow children\u0027s book for YRO`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Updating done! Key \u0027list\u0027 again to check:)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateTodo1.png)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateTodo2.png)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* For a Deadline task, inputting the exact description of the task previously entered followed by a new deadline and "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "time updates the task information. Both the date and time has to be inputted, even if one of it did not change."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`update Assignment 1 /2020-02-20 0000`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Updating done! Key \u0027list\u0027 again to check:)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateDeadline1.png)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateDeadline2.png)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "* For a Event task, inputting the exact description of the task previously entered followed by the new timing details"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "updates the task information."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`update meeting /Monday 5pm`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Updating done! Key \u0027list\u0027 again to check:)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateEvent1.png)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/UpdateEvent2.png)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "### `manual` - Shows the different commands "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "With this command, DukeBot will show all the different commands that a user can input as well as example inputs."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "`manual`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Don\u0027t be shy to ask for help!! "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "These are the commands that I can understand, please follow them so I can reply to you accordingly!^-^"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "1. todo "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To add a Todo task to the task list, with the corresponding description of the task"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027todo exercise\u0027"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "2. deadline "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To add a Deadline task to the task list, with the description and the corresponding date and time at which the task is due"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027deadline Assignment 1 /by 2020-02-01 1200\u0027"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "3. event "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To add a Event task to the task list, with the description and the timing details of the event"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u0027e.g. event meeting /at Sunday 2pm\u0027"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "4. list "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To list out all lists available in the task list"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027list\u0027"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "5. done "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To mark a task as completed, with its index specified"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027done 1\u0027 (this will mark the first task in the list as done)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "6. find "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To find all tasks present in the task list that fit a keyword inputted"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g \u0027find book\u0027"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "7. delete "
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To delete a task from the task list, with its index specified"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027delete 1\u0027 (this will delete the first task in the task list)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "8. update "
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "- To update the description of a Todo task, the deadline date and time of a Deadline task or the timing details of a Event task, using the specific command entered previously"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "e.g. \u0027update borrow book /borrow children\u0027s book for YRO\u0027 (given that \u0027todo borrow book\u0027 was inputted previously)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "```"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "![Github Logo](./UG/Manual.png)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 260,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object contains description of a task e.g., \u003ccode\u003eAssignment 1\u003c/code\u003e, the deadline date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * e.g., \u003ccode\u003e2020-02-01\u003c/code\u003e and the deadline time e.g., \u003ccode\u003e1000\u003c/code\u003e of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected Date deadlineTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * A Deadline object has a description of the Deadline task as well as the date and time at which the task is due."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command description of the Deadline task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineDate date when the Deadline task is due"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineTime time when the Deadline task is due"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Deadline(String command, String deadlineDate, String deadlineTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineDate \u003d parseDate(deadlineDate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineTime \u003d parseTime(deadlineTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadline \u003d deadlineDate + \" \" + deadlineTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Converts String to LocalDate."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineDate deadline date in String to be converted to LocalDate."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return LocalDate deadline date converted from String."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public LocalDate parseDate(String deadlineDate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return LocalDate.parse(deadlineDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Converts String to Date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param deadlineTime deadline time in String to be converted to Date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return Date deadline time converted from String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Date parseTime(String deadlineTime) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Date deadlineTimeParsed \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            deadlineTimeParsed \u003d sdf.parse(deadlineTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assert deadlineTimeParsed !\u003d null : \"Error in parsing deadline time!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return deadlineTimeParsed;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the deadline date and time of a Deadline task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return deadline date and deadline time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String getDeadlineDateAndTime() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String date \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"hhmm aa\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String time \u003d sdf.format(this.deadlineTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about a task, stating that it is D(Deadline) task, whether it is marked done, the"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task and the deadline date and time, for the updating of the file saved in hard disk."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"D - \" + getDoneInt() + \" - \" + getCommand() + \" - \" + deadline;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Updates the date and time details for the Deadline task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param newDateAndTime date and time to be updated."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void updateDetails(String newDateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d newDateAndTime.split(\" \", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"UPDATE_DEADLINE_DATE_TIME_NEEDED\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String newDeadlineDate \u003d strArr[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String newDeadlineTime \u003d strArr[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineDate \u003d parseDate(newDeadlineDate);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.deadlineTime \u003d parseTime(newDeadlineTime);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[D][\" + getDoneSymbol() + \"] \" + getCommand() + \"(by: \" + getDeadlineDateAndTime() + \")\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 103
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md with"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // minor modifications"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        // @@author"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Circle newCircle \u003d new Circle(50,45,40);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        displayPicture.setClip(newCircle);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 69,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * The Duke program implements an application that is able to keep track of a task list. A user can populate the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * with tasks inputted through the standard output, mainly Todo tasks, Deadline tasks and Event tasks, or delete tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * from the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Creates a Ui object to deal with user interaction , a Storage object to deal with loading or saving tasks and a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * new TaskList object, loaded with the file storing the task list, if the file exists."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param filePath location where file which contains task list is found or created"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            ui.printLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            storage.updateTaskList(tasks.getList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param input command by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return String that parser returns after parsing user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assert storage !\u003d null : \"Storage not initialised properly\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assert  ui !\u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            System.out.println(parser.parse(command));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        ui.printExitLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // able to run from command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        new Duke(\"./src/main/data/duke.txt\").run();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 68,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public DukeException(String str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.error \u003d str;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"TODO_NO_DESC\": // todo task needs a description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"DEADLINE_NO_DESC\": // deadline task needs a description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"DEADLINE_NO_DEADLINE\": // deadline task needs a deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please include the deadline of this task! \\nIt needs to be specified in the following \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    + \"format: YYYY/MM/DD HHmm e.g. 2019/02/01 0900\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"EVENT_NO_DESC\": // event task needs a description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Oh no! :( The description for event cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"EVENT_NO_DATE_AND_TIME\": // event task needs a date and time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please include the date and timing details of this event!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"UNK_TASK_DONE\": // for not specifying which task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please let me know which task you are done with!:)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"UNK_TASK_TO_DELETE\": // for not specifying which task to delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please let me know which task you want to delete!:)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"UNK_TASK_TO_FIND\": // for not specifying which task to find"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"You have not specify what item you want me to look for!!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"ITEM_NOT_FOUND\": // when the keyword inputted cannot be found in any of the tasks in the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"The keyword cannot be found in any of the tasks in your task list!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"UPDATE_DEADLINE_DATE_TIME_NEEDED\": // new deadline date and time not provided"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Please provide both the date and time for this deadline task:)\" + \"\\n\" + \"Reminder: It needs to \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                    + \"be specified in the following format: YYYY/MM/DD HHmm e.g. 2019/02/01 0900\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"COMMAND_NOT_FOUND\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Task not found! Please check the list if you forgot the task you inputted!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"LOAD_ERROR\": // file loading error"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"OTHERS\": // for any unrecognised commands"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"\\u2620\" + \" Oh no! I am not sure what you are talking about!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return \"Error!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 43
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object contains description of the task e.g., \u003ccode\u003emeeting\u003c/code\u003e and timing that the task will"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * occur e.g., \u003ccode\u003eSunday 10am\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Event(String command, String timing) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about a task, stating that it is E(Event) task, whether it is marked done, the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task and the timing at which the event will happen, for the updating of the file saved in"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"E - \" + getDoneInt() + \" - \" + getCommand() + \" - \" + timing;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Updates the timing details for the Event task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param newTiming timing to be updated."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void updateDetails(String newTiming) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.timing \u003d newTiming;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[E][\" + getDoneSymbol() + \"] \" + getCommand() + \"(at: \" + timing + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 12,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Duke duke \u003d new Duke(\"./duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md with"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // minor modifications"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            // @@author"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.setTitle(\"DukeBot\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 32,
      "-": 2
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBot.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(d.getUi().printGuiWelcome(), dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author FeliciaTay--reused"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // Reused from https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md with"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    // minor modifications"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        // @@author"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            duke.getStorage().updateHd();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assert !(response.equals(input)) : \"Parser not working properly\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 66,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Parser object deals with making sense of the user commands and can find, add or delete tasks from the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * \u003ccode\u003etask list\u003c/code\u003e it stores."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Parser(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a command to mark a certain task in the task list as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command command inputted by user to mark a certain task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the task completed by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if command for task that is completed is not specified."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleDone(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"UNK_TASK_DONE\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Task currTask \u003d taskList.get(Integer.parseInt(strArr[1]) - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        currTask.setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printTaskMarkedDone(currTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a command to find a certain task by searching for a keyword."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command keyword inputted by user to look for a certain task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing tasks that contain the keyword the user has inputted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if keyword to look for is not specified."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleFind(String command) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"UNK_TASK_TO_FIND\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printTasksFound(taskList, strArr[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a \u0027Todo\u0027 event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command command inputted by user to add a Todo task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Todo task user has inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if command for Todo task is not inputted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleTodo(String command) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"TODO_NO_DESC\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String todoCommand \u003d strArr[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Todo newTask \u003d new Todo(todoCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printTodoTask(newTask, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a \u0027Deadline\u0027 event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command command inputted by user to add a Deadline task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Deadline task that the user has just inputted and the total number of tasks in the"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *     task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if command or the deadline date and time for the task is not inputted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleDeadline(String command) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"DEADLINE_NO_DESC\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] cmdArr \u003d strArr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (cmdArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"DEADLINE_NO_DEADLINE\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deadlineCommand \u003d cmdArr[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deadlineDetails \u003d cmdArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] deadlineDetailsArr \u003d deadlineDetails.split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deadlineDate \u003d deadlineDetailsArr[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deadlineTime \u003d deadlineDetailsArr[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Deadline newTask \u003d new Deadline(deadlineCommand, deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printDeadlineTask(newTask, taskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a \u0027Event\u0027 event."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command command inputted by user to add a Event task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Event task that the user has just inputted and the total number of tasks in the"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *     task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if command or the event date and time for the task is not inputted."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleEvent(String command) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"EVENT_NO_DESC\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] cmdArr \u003d strArr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (cmdArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"EVENT_NO_DATE_AND_TIME\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String eventCommand \u003d cmdArr[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String timing \u003d cmdArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Event newTask \u003d new Event(eventCommand, timing);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printEventTask(newTask, taskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a command to delete a certain task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command String with command of the task to be deleted."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the remaining tasks in task list after task mentioned is deleted from the list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if the index of the task to be deleted is not inputted."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleDelete(String command) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"UNK_TASK_TO_DELETE\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Task currTask \u003d taskList.get(Integer.parseInt(strArr[1]) - 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        tasks.deleteTask(currTask);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printRemainingList(currTask, taskList);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Parses a command to update a particular task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command String with command of the task previously inputted and the details to be updated for that task."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message that updating of the details of a task has been done."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if the command cannot be found in any of the tasks previously inputted."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String handleUpdate(String command) throws DukeException {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Task currTask \u003d null;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d command.split(\" \", 2)[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String commandToFind \u003d strArr[0];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String detailsToUpdate \u003d strArr[1];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (task.getCommand().trim().equals(commandToFind.trim())) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                currTask \u003d task;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (currTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"COMMAND_NOT_FOUND\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        currTask.updateDetails(detailsToUpdate);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return ui.printUpdatingDone();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Makes sense of the user commands."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param command user commands inputted by user."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return String for the command to be outputted by DukeBot."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String parse(String command) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (command.equals(\"manual\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return ui.printManual();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleDone(command);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleTodo(command);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleDeadline(command);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleEvent(command);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return ui.printList(taskList);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleDelete(command);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleFind(command);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else if (command.contains(\"update\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                return handleUpdate(command);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                throw new DukeException(\"OTHERS\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | DateTimeParseException exception) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return new DukeException(\"OTHERS\").toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return exception.toString();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Updates the task list with tasks noted down in the file saved in hard disk."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param line String containing the type of event (T / D / E) and the corresponding command and details."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return task list which is updated with tasks noted down in the file saved in hard disk."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public ArrayList\u003cTask\u003e loadText(String line) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String[] strArr \u003d line.split(\" - \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        switch (strArr[0]) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Todo newTodoTask \u003d new Todo(strArr[2]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks.addTask(newTodoTask);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                newTodoTask.setDone();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String[] deadlineArr \u003d strArr[3].split(\" \", 2);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Deadline newDeadlineTask \u003d new Deadline(strArr[2], deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks.addTask(newDeadlineTask);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                newDeadlineTask.setDone();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            Event newEventTask \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            tasks.addTask(newEventTask);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                newEventTask.setDone();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 233
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Storage object contains a \u003ccode\u003efilePath\u003c/code\u003e, the location that can be used to find the file storing the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * list or create a new file at."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns task list stored in file on hard disk or throw an exception and create a new file to store task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return task list saved in hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws DukeException if file is not found and cannot be loaded."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws IOException if there is error reading data from a file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                Parser hdParser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                hdParser.loadText(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            boolean fileCreated \u003d file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"LOAD_ERROR\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void updateTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Updates the file stored in hard disk with all the tasks that are still present in the task list at the point when"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * the user decides to exit the application."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @throws IOException if there is error in writing to the file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void updateHd() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            writer.write(task.updateFile() + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 65
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Task object can be a Todo task, a Deadline task or a Event task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Task(String command) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether a task has been marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return whether a task is marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the symbol to show whether a task has been marked as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return ✓ if task is done, or ✗ if task is not done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String getDoneSymbol() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u274C\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the description of a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return description of a task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected String getCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns whether the task is marked done in int form instead of symbol form, to be displayed in the file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * saved in hard disk."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return 1 if task is marked done, or 0 if the task is marked undone."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public int getDoneInt() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public abstract String updateFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public abstract void updateDetails(String details) throws DukeException;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Adds the task to the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task task to be added to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Deletes specified task from the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task task to be deleted from the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object contains a description of the task e.g., \u003ccode\u003eborrow book\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public Todo(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns information about the task, stating that it is T(Todo) task, whether it is marked done and the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * description of the task, for the updating of the file saved in hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return information about the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String updateFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"T - \" + getDoneInt() + \" - \" + getCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Updates the command details for the Todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param details command to be updated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void updateDetails(String details) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        this.command \u003d details;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"[T][\" + getDoneSymbol() + \"] \" + getCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " * A Ui object deals with interaction with the user, by printing the appropriate response to the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints welcome message when Duke is started."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Hi! I am Duke! What would you like to tell me today?:)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Returns DukeBot\u0027s welcome message at startup."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return DukeBot\u0027s welcome message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printGuiWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Hello!! \" + \"\\u263A\" + \" I am DukeBot, ready to receive your commands!!\\n\\n\" + \"You may type \u0027manual\u0027 \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"if you need help!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints message that task list is not found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printLoadingError() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Task list not found! Creating one now...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints goodbye message when user says bye."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void printExitLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        System.out.println(\"Okay then! Goodbye!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out task completed by user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task Task marked as \u0027Done\u0027 by user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the task completed by user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printTaskMarkedDone(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Okay noted! You have completed the below task: \\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Todo task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Todo task inputted by user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Todo task user has inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printTodoTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Okay! I have taken note of the following:\\n\" + task + \"\\n\" + \"Now you have \" + taskList.size()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Deadline task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Deadline task inputted by user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Deadline task that the user has just inputted and the total number of tasks in the"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *     task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printDeadlineTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Okay! I have taken note of the following:\\n\" + task + \"\\n\" + \"Now you have \" + taskList.size()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out new Event task that the user has just inputted and the total number of tasks in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param task new Event task inputted by user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the Event task that the user has just inputted and the total number of tasks in the"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *     task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printEventTask(Task task, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Okay! I have taken note of the following:\\n\" + task + \"\\n\" + \"Now you have \" + taskList.size()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out all tasks in task list that contains the keyword the user has inputted."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param keyword keyword to find."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing all tasks in the task list that contains the keyword the user has inputted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printTasksFound(ArrayList\u003cTask\u003e taskList, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String strToReturn \u003d \"I have found these matching items from your task list:\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String originalString \u003d strToReturn;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            if (task.getCommand().contains(keyword)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                strToReturn \u003d strToReturn + task + \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        if (strToReturn.equals(originalString)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            throw new DukeException(\"ITEM_NOT_FOUND\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return strToReturn;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out the whole task list thus far."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing all tasks saved in the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String strToReturn \u003d \"The below is what you have told me so far. Have you completed them?\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "            strToReturn \u003d strToReturn + task + \"\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return strToReturn;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out remaining tasks in task list after task mentioned is deleted from the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskDeleted task to be deleted from task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @param taskList task list that contains all tasks inputted by user."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing the remaining tasks in task list after task mentioned is deleted from the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printRemainingList(Task taskDeleted, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Okay noted! I have deleted the below task:\\n\" + taskDeleted + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * Prints out a confirmation message when the user has updated details about a task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message that updating of the details of a task has been done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printUpdatingDone() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return \"Updating done! Key \u0027list\u0027 again to check:)\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *Prints out information about all possible commands that the user can input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     * @return message showing all possible commands that the user can input, and example inputs."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public String printManual() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String helpMsg \u003d \"Don\u0027t be shy to ask for help!! \\nThese are the commands that I can understand, please \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"follow them so I can reply to you accordingly!^-^\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String todoTask \u003d \"1. todo \"  + \"\\n\" + \"- To add a Todo task to the task list, with the corresponding \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"description of the task\\n\" + \"e.g. \u0027todo exercise\u0027\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deadlineTask \u003d \"2. deadline \" + \"\\n\" + \"- To add a Deadline task to the task list, with the description \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"and the corresponding date and time at which the task is due\\n\" + \"e.g. \u0027deadline Assignment 1 /by \""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"2020-02-01 1200\u0027\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String eventTask \u003d \"3. event \" + \"\\n\" + \"- To add a Event task to the task list, with the description and the \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"timing details of the event\\n\" + \"\u0027e.g. event meeting /at \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"Sunday 2pm\u0027\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String listCommand \u003d \"4. list \" + \"\\n\" + \"- To list out all lists available in the task list\\n\" + \"e.g. \u0027list\u0027\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String doneCommand \u003d \"5. done \" + \"\\n\" + \"- To mark a task as completed, with its index specified\" + \"\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"e.g. \u0027done 1\u0027 (this will mark the first task in the list as done)\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String findCommand \u003d \"6. find \" + \"\\n\" + \"- To find all tasks present in the task list that fit a keyword \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"inputted\" + \"\\n\" + \"e.g \u0027find book\u0027\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String deleteCommand \u003d \"7. delete \" + \"\\n\" + \"- To delete a task from the task list, with its index specified\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"\\n\" + \"e.g. \u0027delete 1\u0027 (this will delete the first task in the task list)\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        String updateCommand \u003d \"8. update \" + \"\\n\" + \"- To update the description of a Todo task, the deadline date \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"and time of a Deadline task or the timing details of a Event task, using the specific command \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"entered previously\" + \"\\n\" + \"e.g. \u0027update borrow book /borrow children\u0027s book for YRO\u0027 \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"(given that \u0027todo borrow book\u0027 was inputted previously)\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        return helpMsg + \"\\n\\n\" + todoTask + \"\\n\\n\" + deadlineTask + \"\\n\\n\" + eventTask + \"\\n\\n\" + listCommand"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "                + \"\\n\\n\" + doneCommand + \"\\n\\n\" + findCommand + \"\\n\\n\" + deleteCommand + \"\\n\\n\" + updateCommand;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 172
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: LIGHTSTEELBLUE;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cInsets bottom\u003d\"20.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "         \u003cFont name\u003d\"DengXian Regular\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "         \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "         \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "         \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "   \u003ceffect\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "      \u003cDropShadow color\u003d\"#686565\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "   \u003c/effect\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 31
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: GREY;\" text\u003d\"SEND\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cFont name\u003d\"DengXian Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: LIGHTSLATEGREY;\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 20
    }
  },
  {
    "path": "src/main/text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list not found! Creating one now..."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list created!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Hi! I am Duke! What would you like to tell me today?:)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay noted! You have completed the below task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 36
    }
  },
  {
    "path": "src/main/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list not found! Creating one now..."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Task list created!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Hi! I am Duke! What would you like to tell me today?:)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay! I have taken note of the following:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "Okay noted! You have completed the below task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "The below is what you have told me so far. Have you completed them?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] sleep"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] return book (by: Feb 1 2020 1100 am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[D][✗] revise for test (by: Feb 2 2020 1200 am)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "[E][✗] meeting (at: Sunday 10am)"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 36
    }
  },
  {
    "path": "src/main/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "deadline return book /by 2020-02-01 1100"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "deadline revise for test /by 2020-02-02 0000"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "event meeting /at Sunday 10am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 10
    }
  },
  {
    "path": "src/main/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "dir /s /B ..\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 22
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Todo newTask \u003d new Todo(\"sleep\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        newTask.setDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(1, newTask.getDoneInt());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Event newTask \u003d new Event(\"meeting\", \"Sunday 1pm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        newTask.setDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(\"E - 1 - meeting - Sunday 1pm\", newTask.updateFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        Deadline newTask \u003d new Deadline(\"Assignment 1\", \"2019-01-01\", \"1000\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "        assertEquals(\"2019-01-01 1000\", newTask.getDeadlineDateAndTime());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FeliciaTay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FeliciaTay": 27
    }
  }
]
