[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Deadline object extends the Task object in creating a task of type deadline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Constructor for a new Deadline object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone whether the Task is marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of the Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of the Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public Deadline(boolean isDone, String taskName, String taskTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        super(\u0027D\u0027, isDone, taskName, taskTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        List\u003cString\u003e log \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        Ui.showLogo();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        TaskList tasklist \u003d Storage.load();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        System.out.println(Ui.welcomeMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        boolean hasNotExited \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        while (hasNotExited) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            String thisResult \u003d Ui.getNextCommand(scanner, tasklist);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            log.add(thisResult);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            if (thisResult.equals(\"exit\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                if (log.isEmpty() || tasklist.getList().isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    hasNotExited \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    hasNotExited \u003d Ui.askBeforeQuitting(scanner, tasklist);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                System.out.println(thisResult);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        System.out.println(Ui.exitMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Event object extends the Task object in creating a task of type event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Constructor for a new Event object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone whether the Task is marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of the Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of the Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public Event(boolean isDone, String taskName, String taskTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        super(\u0027E\u0027, isDone, taskName, taskTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 15
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Parser class handles all methods relating to parsing and processing commands from user input. It internally"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * contains a set of available commands available for the user to use."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static HashSet\u003cString\u003e commandList \u003d new HashSet\u003cString\u003e("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            List.of(\"todo\", \"event\", \"deadline\", \"list\", \"done\", \"delete\", \"find\", \"save\", \"exit\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Analyzes the user input and splits them into a String array:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * - Index 0 contains the action that the program should take."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * - Index 1 contains the message tagged to the program, if applicable."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * - Index 2 contains the date/time tagged to the program, if applicable."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param input the original user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a String array containing a segmentized version of the user input for processing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String[] parseInput(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return new String[] {input};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            String[] s \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            if (!s[1].contains(\"/at\") \u0026\u0026 !s[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                String[] temp \u003d s[1].split(\"/at|/by\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return new String[] {s[0].strip(), temp[0].strip(), temp[1].strip()};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Processes the user command, and routes the command to their respective method for execution."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representation of the user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to their respective method for processing the function, or an exit message if the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     *         command was \u0027exit\u0027, or a message indicating that the command is not found otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String processCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (commandList.contains(command[0])) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            switch (command[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return todoCommand(command, tasklist);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return eventCommand(command, tasklist);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return deadlineCommand(command, tasklist);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return listCommand(tasklist);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return doneCommand(command, tasklist);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return deleteCommand(command, tasklist);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return findCommand(command, tasklist);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"save\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return saveCommand(tasklist);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return command[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return Ui.commandNotFound;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.commandNotFound;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Creates a new Todo object if the input line is valid, and adds into the master TaskList object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to create a new Todo object, or an error if the input line is invalid."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String todoCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (command.length \u003e 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return tasklist.newTodo(false, command[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskNeedsName;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Creates a new Event object if the input line is valid, and adds into the master TaskList object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to create a new Event object, or an error if the input line is invalid."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String eventCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (command.length \u003e 2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return tasklist.newEvent(false, command[1], command[2]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return Ui.wrongDateTimeFormat;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else if (command.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskNeedsDateTime;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskNeedsName;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Creates a new Deadline object if the input line is valid, and adds into the master TaskList object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to create a new Deadline object, or an error if the input line is invalid."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String deadlineCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (command.length \u003e 2) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return tasklist.newDeadline(false, command[1], command[2]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                return Ui.wrongDateTimeFormat;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else if (command.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskNeedsDateTime;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskNeedsName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Lists the number of Tasks present in the TaskList."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the target TaskList."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a message displaying the number of tasks in the list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String listCommand(TaskList tasklist) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (tasklist.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.noTaskInList;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.displayTaskList + \"\\n\" + tasklist;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Marks a Task at a specified index (relative to the list\u0027s output) as done."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a message displaying whether this command is successful."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String doneCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            int taskID \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return tasklist.markDone(taskID);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.noTaskFound;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Deletes a Task at a specified index (relative to the list\u0027s output)."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a message displaying whether this command is successful."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String deleteCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            int taskID \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return tasklist.deleteTask(taskID);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.noTaskFound;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Creates a new temporary TaskList containing any Task with the same name as specified in the user input. If"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * no tasks in the master TaskList matches the input query, returns a message that no tasks matches the query."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param command the String array representing the parsed input."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the new TaskList containing a filtered list of tasks."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String findCommand(String[] command, TaskList tasklist) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        TaskList query \u003d new TaskList();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        for (Task thisTask : tasklist.getList()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            if (thisTask.getTaskName().toLowerCase().contains(command[1].toLowerCase())) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                query.add(thisTask);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (query.getList().isEmpty()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.noMatchingTaskInList;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.displayMatchingTaskList + \"\\n\" + query;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Saves the master TaskList, at its current state when the command was called, into a save file."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the master TaskList object to save."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a message if the changes are successfully saved."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String saveCommand(TaskList tasklist) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            Storage.save(tasklist);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.changesSaved;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return \"Oops! Unable to write to file due to \" + e + \"!\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 214
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Storage class handles all I/O in the software with two key methods, load() and save(). The load() method"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * handles loading of any existing saved data into the TaskList object, while the save() method handles saving the most"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * recent version of the TaskList object when the method is called."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static File savedData \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static File thisLoc \u003d new File(System.getProperty(\"user.dir\") + \"/data\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * This method handles loading of an existing saved data stored in the directory \u0027data\u0027, where the program is"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * located, and populate a new TaskList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * If the directory is absent, a new directory is created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * If the directory is created and the saved data is absent, a new saved file is created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a new TaskList object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static TaskList load() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            if (thisLoc.mkdir()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                System.out.println(\"No save directory found. Creating new directory at \" + thisLoc.toString() + \" ...\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            if (savedData.createNewFile()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                System.out.println(\"No save file found. Creating new file \u0027duke.txt\u0027 ...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            FileReader fr \u003d new FileReader(savedData);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            System.out.println(\"Loading file \u0027duke.txt\u0027... \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    String line \u003d br.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    String[] taskContent \u003d line.split(\" ~ \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    boolean isDone \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    if (taskContent[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    if (taskContent[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        tasklist.newTodo(isDone, taskContent[2]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        if (taskContent[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                            tasklist.newDeadline(isDone, taskContent[2], taskContent[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        } else if (taskContent[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                            tasklist.newEvent(isDone, taskContent[2], taskContent[3]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    System.out.println(\"Oops! Unable to read save file due to \" + e + \"!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            System.out.println(\"Oops! Unable to create or load save file due to \" + e + \"!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * This method saves a current TaskList object into the save file into the directory \u0027data\u0027, where the program"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * is located, assuming that the file has already been created before or during the launch of the program."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param tasklist the TaskList object to parse into the save file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static void save(TaskList tasklist) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        FileWriter fw \u003d new FileWriter(savedData);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        for (Task thisTask : tasklist.getList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            String taskStr \u003d thisTask.getTaskType() + \" ~ \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    + (thisTask.getStatus() ? \"1\" : \"0\") + \" ~ \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    + thisTask.getTaskName() + \" ~ \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                    + (thisTask.getTaskType() \u003d\u003d \u0027T\u0027 ? \"\" : thisTask.getTaskTime()) + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            bw.write(taskStr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Task object contains parameters and information which defines the Task, such as the name, time, and whether it"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * is done. This object also handles any editing to the contents of the Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    private char taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    private LocalDateTime taskTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Constructor for a new generic Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskType defines the type of this Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone whether the Task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of the Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of the Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public Task(char taskType, boolean isDone, String taskName, String taskTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.taskTime \u003d taskTime.isEmpty()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                ? LocalDateTime.MIN"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                : this.parseDate(taskTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Parses the date and time in a string passed into the constructor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of this Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a LocalDateTime object containing a string representation of a time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     *         If no time is present, a default time \"2359\" is used."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @throws DateTimeParseException if the string is not in d/M/yyyy HHmm format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public LocalDateTime parseDate(String taskTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (taskType \u003d\u003d \u0027D\u0027 \u0026\u0026 !taskTime.contains(\" \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            taskTime \u003d taskTime + \" 2359\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return LocalDateTime.parse(taskTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns if this Task is done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the status of the Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns if this Task is done, in a unicode format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the status of the Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String getStatusUnicode() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns the name of this Task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the name of the Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns the type of this Task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the type of the Task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns the end time of this Task, in a String format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the end time of the Task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String getTaskTime() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.taskTime.getDayOfMonth() + \"/\" + this.taskTime.getMonthValue() + \"/\" + this.taskTime.getYear()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + \" \" + this.taskTime.getHour()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + (this.taskTime.getMinute() \u003e 9 ? this.taskTime.getMinute() : \"0\" + this.taskTime.getMinute());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Marks this Task as done, if it has not already been marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a String message indicating if the Task has been marked done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String markDone() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return Ui.taskAlreadyDone;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return Ui.markedTaskDone + this;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * An overridden toString() function to display a custom format when this Task is called as a String."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a String representing this Task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (this.taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return \"[\" + taskType + \"] \" + \"[\" + getStatusUnicode() + \"] \" + this.taskName;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else if (this.taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return \"[\" + taskType + \"] \" + \"[\" + getStatusUnicode() + \"] \" + this.taskName + \" (by: \" + this.getTaskTime() + \")\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else if (this.taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return \"[\" + taskType + \"] \" + \"[\" + getStatusUnicode() + \"] \" + this.taskName + \" (at: \" + this.getTaskTime() + \")\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 118
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The TaskList class is a class that encapsulates a list containing various tasks, and handles methods relating"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * to creating and deleting tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * The constructor for a new TaskList object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Adds a new Task to this TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param task the new Task to be added into this list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a String message indicating if the adding is successful."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return Ui.newTaskMessage + task + Ui.taskCountMessage(this.list.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Adds a new Task of type Todo to this TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone if this Task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of this Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to the add() function."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String newTodo(boolean isDone, String taskName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        Task task \u003d new Todo(isDone, taskName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Adds a new Task of type Event to this TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone if this Task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of this Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of this Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to the add() function."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String newEvent(boolean isDone, String taskName, String taskTime) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        Task task \u003d new Event(isDone, taskName, taskTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Adds a new Task of type Deadline to this TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone if this Task is done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of this Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskTime the end time of this Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to the add() function."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String newDeadline(boolean isDone, String taskName, String taskTime) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        Task task \u003d new Deadline(isDone, taskName, taskTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Marks a Task in this list as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskID the position (starting from 1) of the task in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a function call to markDone() in the Task class."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String markDone(int taskID) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.list.get(taskID - 1).markDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Deletes a Task from this list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskID the position (starting from 1) of the task in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return a String message indicating if the deletion is successful."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String deleteTask(int taskID) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String output \u003d Ui.deleteTaskMessage + this.list.get(taskID - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        this.list.remove(taskID - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        output \u003d output + Ui.taskCountMessage(this.list.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns the size of this list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Returns this list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @return the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            output \u003d output + (i + 1) + \". \" + this.list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 107
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " * The Todo object extends the Task object in creating a task of type todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * Constructor for a new Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param isDone whether the Task is marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     * @param taskName the name of the Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public Todo(boolean isDone, String taskName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        super(\u0027T\u0027, isDone, taskName, \"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String commandNotFound \u003d \"Oops! Command not found!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String taskNeedsName \u003d \"Oops! This task needs a name!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String taskNeedsDateTime \u003d \"Oops! This task needs a date/time!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String wrongDateTimeFormat \u003d \"Oops! The date/time needs to be DD/MM/YYYY HHMM (24hr) format!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String noTaskFound \u003d \"Oops! Task not found in the list!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String noTaskInList \u003d \"Yay! There are no tasks in your list!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String displayTaskList \u003d \"Here are your tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String displayMatchingTaskList \u003d \"Here are your tasks that matched your query:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String noMatchingTaskInList \u003d \"Oops! There are no tasks that matches your query!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String changesSaved \u003d \"Changes saved!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String markedTaskDone \u003d \"Marked this task as done:\\n    \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String taskAlreadyDone \u003d \"Oops! This task was already marked as done!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String newTaskMessage \u003d \"New task has been added:\\n    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String deleteTaskMessage \u003d \"Removed this task:\\n    \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String welcomeMessage \u003d \"-------------------------------------\\nWelcome! What can I do for you today?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    static String exitMessage \u003d \"Thank you for using Duke.\\nHave a nice day!\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static void showLogo() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static boolean askBeforeQuitting(Scanner scanner, TaskList tasklist) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        System.out.println(\"Save before Quitting?\\nY: Save Changes\\nN: Discard Changes\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                \"Press any other key to Cancel and Return\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String choice \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        if (choice.equals(\"Y\") || choice.equals(\"y\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                Storage.save(tasklist);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                System.out.println(changesSaved);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "                System.out.println(\"Oops! Unable to write to file due to \" + e + \"!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "            return !(choice.equals(\"N\") || choice.equals(\"n\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String getNextCommand(Scanner scanner, TaskList tasklist) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String input \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        String[] command \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return Parser.processCommand(command, tasklist);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    public static String taskCountMessage(int listSize) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "        return \"\\nNow you have \"+ listSize + (listSize \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 61
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! Command not found!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! Command not found!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! Command not found!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! Command not found!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Yay! There are no tasks in your list!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [T] [✘] Buy Eggs"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✘] Buy Eggs"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! This task needs a name and date/time!"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [D] [✘] Homework (by: Sunday)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✘] Buy Eggs"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [D] [✘] Homework (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! This task needs a date/time!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [E] [✘] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [T] [✘] test10"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✘] Buy Eggs"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [D] [✘] Homework (by: Sunday)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "4. [E] [✘] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "5. [T] [✘] test10"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Marked this task as done:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [T] [✓] Buy Eggs"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Marked this task as done:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [D] [✓] Homework (by: Sunday)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! This task needs a date/time!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✓] Buy Eggs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [D] [✓] Homework (by: Sunday)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "4. [E] [✘] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "5. [T] [✘] test10"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e New task has been added:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [D] [✘] Finish Presentation Slides (by: 23/1/20)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! This task was already marked as done!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✓] Buy Eggs"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [D] [✓] Homework (by: Sunday)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "4. [E] [✘] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "5. [T] [✘] test10"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "6. [D] [✘] Finish Presentation Slides (by: 23/1/20)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Marked this task as done:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [E] [✓] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Oops! Task not found!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [T] [✓] Buy Eggs"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [D] [✓] Homework (by: Sunday)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "4. [E] [✓] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "5. [T] [✘] test10"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "6. [D] [✘] Finish Presentation Slides (by: 23/1/20)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Removed this task:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [T] [✓] Buy Eggs"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Removed this task:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    [E] [✓] Project Meeting (at: 10/2/20 11:59am)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Here are your tasks in your list:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "1. [T] [✘] Buy Textbooks"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "2. [D] [✓] Homework (by: Sunday)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "3. [T] [✘] test10"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "4. [D] [✘] Finish Presentation Slides (by: 23/1/20)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "\u003e Thank you for using Duke."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "Have a nice day!"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 116
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "add"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "add Buy Textbooks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "todo Buy Textbooks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "todo Buy Eggs"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "deadline Homework /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "event Project Meeting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "event Project Meeting /at 10/2/20 11:59am"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "todo test10"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "deadline Finish Presentation Slides"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "deadline Finish Presentation Slides /by 23/1/20"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "bye "
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 29
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lsjxavier"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lsjxavier": 34
    }
  }
]
