[
  {
    "path": "bin/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Greetings! This is Duke, and I am your friend!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       You don\u0027t have to be formal. Relax and tell me how I can help you"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 1 tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  set a date with CRUSH"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 2 tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 3 tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [E] [✘]  CS2030 meeting "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 4 tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✘]  set a date with CRUSH"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✘]  CS2030 meeting "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 5 tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Umm, please just write something legit."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Umm, please just write something legit."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  get CAP 5.0"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 6 tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       6. [T] [✘]  get CAP 5.0"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Bye-bye. It was nice talking to you. See ya soon!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 96
    }
  },
  {
    "path": "bin/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Greetings! This is Duke, and I am your friend!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       You don\u0027t have to be formal. Relax and tell me how I can help you"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 1 tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  set a date with CRUSH"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 2 tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 3 tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [E] [✘]  CS2030 meeting "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 4 tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✘]  set a date with CRUSH"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✘]  CS2030 meeting "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 5 tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✘]  do CS4231 homework "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Umm, please just write something legit."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Umm, please just write something legit."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Nice nice. I\u0027ve marked the task as done for you."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "          [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       added: [T] [✘]  get CAP 5.0"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Now you have 6 tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Here is your list:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       1. [T] [✘]  borrow book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       2. [T] [✔]  set a date with CRUSH"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       3. [D] [✘]  do IP week 2 "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       4. [E] [✔]  CS2030 meeting "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       5. [D] [✔]  do CS4231 homework "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       6. [T] [✘]  get CAP 5.0"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       Bye-bye. It was nice talking to you. See ya soon!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "       -------------------------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 96
    }
  },
  {
    "path": "bin/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "todo set a date with CRUSH"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "deadline do IP week 2 /by todayy"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "event CS2030 meeting /at Wednesday 6-7pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "deadline do CS4231 homework /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "blab blab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "todo get CAP 5.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 17
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    compile \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    mainClassName \u003d \"duke.main.Main\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 33,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * Indicates that a user command is invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public InvalidCommandException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(String.format(\"\u0027%s\u0027 is an invalid command\", msg));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/OutOfBoundMarkingRequestException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * Indicates that an index is out of bound"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class OutOfBoundMarkingRequestException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with an index number"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param num"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public OutOfBoundMarkingRequestException(int num) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(String.format(\"Position %d is out of bound!\", num));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * Indicates that a task cannot be created"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class TaskErrorException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    enum TaskErrorType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        DEADLINE_BY_MISSING, EVENT_AT_MISSING, TASK_DESC_MISSING;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public TaskErrorException (String msg) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(String.format(\"Error when creating task: %s is missing\", msg));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 18
    }
  },
  {
    "path": "src/main/java/duke/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.ui.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        db.setFillHeight(true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 63
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.OutOfBoundMarkingRequestException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.TaskErrorException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private static String PADDING \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String USELESS_LINE \u003d \"-------------------------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private ArrayList\u003cTask\u003e storedItems;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storedItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert storedItems !\u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert storage !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storage.getDataFile(storedItems);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert parser !\u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Let the bot greet, calls to Ui method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String that greets"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.greet();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Takes in the user input, run the Parser to determine what it means and acts accordingly."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The proper response by the bot that will be used by the dialog box."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws OutOfBoundMarkingRequestException"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws TaskErrorException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String processUserInput(String str) throws InvalidCommandException, OutOfBoundMarkingRequestException, TaskErrorException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (str.equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return Ui.blankInput();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (parser.isFindRequest(str)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return TaskList.findItem(str, storedItems);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int markPos \u003d parser.isMarkingTaskRequest(str);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int delPos \u003d parser.isDeleteTaskRequest(str);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (markPos !\u003d -2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d TaskList.markItemAsDone(markPos, storedItems);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } catch (OutOfBoundMarkingRequestException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        String.format(\"markPos error\\n%s%s\\n%s%s\\n%s%s\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                                PADDING, USELESS_LINE, PADDING, e, PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else if (delPos !\u003d -2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d TaskList.deleteItem(delPos, storedItems);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } catch (OutOfBoundMarkingRequestException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        String.format(\"delPos error\\n%s%s\\n%s%s\\n%s%s\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                                PADDING, USELESS_LINE, PADDING, e, PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                Task.TaskType type \u003d parser.commandType(str);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        ret \u003d handleToDo(str);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        ret \u003d handleDeadline(str);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        ret \u003d handleEvent(str);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        throw new InvalidCommandException(str);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                System.out.println(String.format(\"%s%s\\n%s%s\\n%sPlease type something legit\\n%s%s\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        PADDING, USELESS_LINE, PADDING, e, PADDING, PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } catch (TaskErrorException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                System.out.println(String.format(\"%s%s\\n%s%s\\n%s%s\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                        PADDING, USELESS_LINE, PADDING, e, PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String handleToDo(String str) throws TaskErrorException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (!sc.hasNext())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new TaskErrorException(\"Missing ToDo description\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task todo \u003d new ToDo(sc.nextLine().trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return storeUserInput(todo);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String handleDeadline(String str) throws TaskErrorException, InvalidCommandException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String[] parts \u003d sc.nextLine().trim().split(\"/\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (parts.length \u003d\u003d 1 || parts[1].length() \u003d\u003d 0 || !parts[1].contains(\"by\") || parts[1].equals(\"by\"))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new TaskErrorException(\"Missing Deadline \u0027By\u0027 time\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (!parts[1].substring(0, 2).equals(\"by\"))"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new InvalidCommandException(str);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (parts[0].equals(\"\"))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new TaskErrorException(\"Missing Deadline description\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task deadline \u003d new Deadline(parts[0], parts[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return storeUserInput(deadline);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String handleEvent(String str) throws TaskErrorException, InvalidCommandException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String[] parts \u003d sc.nextLine().trim().split(\"/\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (parts.length \u003d\u003d 1 || parts[1].length() \u003d\u003d 0 || parts[1].equals(\"at\"))"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new TaskErrorException(\"Missing Event \u0027At\u0027 time\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (!parts[1].substring(0,2).equals(\"at\"))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new InvalidCommandException(str);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (parts[0].equals(\"\"))"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new TaskErrorException(\"Missing Event description\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task event \u003d new Event(parts[0], parts[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return storeUserInput(event);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String storeUserInput(Task task) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storedItems.add(task);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storage.writeData(storedItems);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.storeUserInput(task, storedItems);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Calls Ui method to list tasks saved."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return String with stored tasks."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String listStoredItems() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.listStoredItems(storedItems);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Interacts when the user says bye."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String that says good bye to the user."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String byeBye() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storage.writeData(storedItems);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.byeBye();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Gets the response from the bot."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The response String from the bot."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws OutOfBoundMarkingRequestException"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws TaskErrorException"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String getResponse(String userInput) throws OutOfBoundMarkingRequestException, TaskErrorException, InvalidCommandException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (userInput.equals(Duke.BYE_COMMAND))"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return byeBye();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (userInput.equals(Duke.LIST_COMMAND)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return listStoredItems();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return processUserInput(userInput);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 202,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.main.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 13
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.OutOfBoundMarkingRequestException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.TaskErrorException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    static final Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    static final Duke bot \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * The main driver for the program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws OutOfBoundMarkingRequestException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws TaskErrorException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static void main(String[] args) throws OutOfBoundMarkingRequestException, InvalidCommandException, TaskErrorException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        bot.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        while (!userInput.equals(Duke.BYE_COMMAND)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (userInput.equals(Duke.BYE_COMMAND))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (userInput.equals(Duke.LIST_COMMAND)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                bot.listStoredItems();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            bot.processUserInput(userInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        bot.byeBye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(bot);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private final String bulletin \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String byTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private LocalTime localTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name and byTime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param byTime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Deadline(String name, String byTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.byTime \u003d byTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        convertDateTime(byTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void convertDateTime(String byTime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        localDate \u003d LocalDate.parse(byTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name, a boolean and byTime."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param byTime"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Deadline(String name, boolean isDone, String byTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.byTime \u003d byTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        convertDateTime(byTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Puts important details into a String that is suitable for storing in files."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String in the save-file format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String encoder() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"D:%s:%d:%s\\n\", super.name, (super.isDone ? 1 : 0), byTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Gets the TaskType of the Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return DEADLINE type."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Stringify the object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String representing the Object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"%s [%s] %sby %s\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                bulletin, (super.isDone ? doneSymbol : notDoneYetSymbol), name,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private final String bulletin \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private String atTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private LocalTime localTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name and atTime."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param atTime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Event(String name, String atTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.atTime \u003d atTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        convertDateTime(atTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void convertDateTime(String atTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        localDate \u003d LocalDate.parse(atTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name, a boolean and atTime."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param atTime"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Event(String name, boolean isDone, String atTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.atTime \u003d atTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        convertDateTime(atTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Puts important details into a String that is suitable for storing in files."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String in the save-file format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String encoder() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"E:%s:%d:%s\\n\", super.name, (super.isDone ? 1 : 0), atTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Get the TaskType of the Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return EVENT type."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Stringify the object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String representing the Object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"%s [%s] %sby %s\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                bulletin, (super.isDone ? doneSymbol : notDoneYetSymbol), name,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        TODO, DEADLINE, EVENT, UNKNOWN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String doneSymbol \u003d \"\\u2714\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String notDoneYetSymbol \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String toDoCommand \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String deadlineCommand \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String eventCommand \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name and a boolean."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Place-holder encoder method."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return an empty String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String encoder() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Gets the name of the Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return String name."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Mark the task as Done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Mark the task as Not Done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void markNotDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Checks if the task is done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return True if the Task is done, False otherwise."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public boolean isDoneTask() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Get the Task\u0027s type."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return UNKNOWN type for a generic Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return TaskType.UNKNOWN;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Stringify the object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String representing the Object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"[%s] %s\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                (isDone ? doneSymbol : notDoneYetSymbol), name);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 91
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private final String bulletin \u003d \"[T]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Constructor with a name and a boolean."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public ToDo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Puts important details into a String that is suitable for storing in files."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String in the save-file format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String encoder() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"T:%s:%d\\n\", name, (isDone ? 1 : 0));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Gets the TaskType of the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return TODO type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Stringify the object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return a String representing the Object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return String.format(\"[T] [%s] %s\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                (super.isDone ? doneSymbol : notDoneYetSymbol), name);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 52
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Checks if input String is a marking task request."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return true if str is \"done %d\" and false otherwise."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public int isMarkingTaskRequest(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int ret \u003d -2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String ss \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            ss \u003d sc.next();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (!ss.equals(\"done\"))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (!sc.hasNextInt())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            ret \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (sc.hasNext())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d -2;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Checks if input String is a deleting task request."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return true if str is \"delete %d\" and false otherwise."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public int isDeleteTaskRequest(String str) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int ret \u003d -2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String ss \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            ss \u003d sc.next();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (!ss.equals(\"delete\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (!sc.hasNextInt())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            ret \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (sc.hasNext())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d -2;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Determines the type of the command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return TaskType toDo, deadline, event, or unknown."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public Task.TaskType commandType(String str) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task.TaskType ret \u003d Task.TaskType.UNKNOWN;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            String ss \u003d sc.next();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (ss.equals(Task.toDoCommand))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d Task.TaskType.TODO;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            else if (ss.equals(Task.deadlineCommand))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d Task.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            else if (ss.equals(Task.eventCommand))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                ret \u003d Task.TaskType.EVENT;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Check if command is a find command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return true if command is find, false otherwise."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public boolean isFindRequest(String str) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        boolean ret \u003d sc.hasNext() \u0026\u0026 sc.next().equals(\"find\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 97
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Checks if it\u0027s possible to get the file stored at Documents/Duke/dukeData.txt."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Create the file if necessary and possible."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void getDataFile(ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Path dirPath \u003d Paths.get(home, \"Documents\", \"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Path filePath \u003d Paths.get(home, \"Documents\", \"Duke\", \"dukeData.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (Files.exists(dirPath)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (Files.notExists(filePath))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    Files.createFile(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    exit(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            readDataFile(filePath, storedItems);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                Files.createDirectories(dirPath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                exit(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                getDataFile(storedItems);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Write all the task details from storedItems to local file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void writeData(ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Path filePath \u003d Paths.get(home, \"Documents\", \"Duke\", \"dukeData.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        for (Task item : storedItems) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            data.append(item.encoder());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            Files.writeString(filePath, data.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            exit(1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Read all data in filePath and turn them into tasks in storedItems."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void readDataFile(Path filePath, ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            lines \u003d Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            exit(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (lines.isEmpty())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                String[] lineParts \u003d line.split(\":\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                if (lineParts[0].equals(\"T\"))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    storedItems.add(new ToDo(lineParts[1], Integer.parseInt(lineParts[2]) \u003d\u003d 1));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                else if (lineParts[0].equals(\"D\"))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    storedItems.add(new Deadline(lineParts[1], Integer.parseInt(lineParts[2]) \u003d\u003d 1, lineParts[3]));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                else if (lineParts[0].equals(\"E\"))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                    storedItems.add(new Event(lineParts[1], Integer.parseInt(lineParts[2]) \u003d\u003d 1, lineParts[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 99
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.OutOfBoundMarkingRequestException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.util.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Mark task at pos in storedItems as Done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param pos"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws OutOfBoundMarkingRequestException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String of marking task job."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String markItemAsDone(int pos, ArrayList\u003cTask\u003e storedItems) throws OutOfBoundMarkingRequestException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (pos \u003e\u003d storedItems.size() || pos \u003c 0)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new OutOfBoundMarkingRequestException(pos+1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (storedItems.get(pos).isDoneTask())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return Ui.markItemAsDone(pos, storedItems, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        storedItems.get(pos).markDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.markItemAsDone(pos, storedItems, false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Delete task at pos in storedItems."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param pos"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @throws OutOfBoundMarkingRequestException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String of deletion job."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String deleteItem(int pos, ArrayList\u003cTask\u003e storedItems) throws OutOfBoundMarkingRequestException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (pos \u003e\u003d storedItems.size() || pos \u003c 0)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            throw new OutOfBoundMarkingRequestException(pos+1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task t \u003d storedItems.remove(pos);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.deleteItem(t, storedItems);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Search for tasks whose names contain the given sequence."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print them to the screen by calling Ui method."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String of found tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String findItem(String str, ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert str.startsWith(\"find\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (str.contains(\"/\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return findAdvancedByType(str, storedItems);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert sc.hasNext();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String criteria \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int len \u003d storedItems.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        for (int i \u003d 0; i \u003c len; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            Task cur \u003d storedItems.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (cur.getName().contains(criteria)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                foundList.add(cur);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.printFoundList(foundList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Implementing BetterSearch feature."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Can customize search to by certain Task type,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return Ui String of found tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private static String findAdvancedByType(String str, ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(\"doing advanced search: \" + str);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String[] parts \u003d str.split(\"/\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert parts[0].equals(\"find \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Scanner sc \u003d new Scanner(parts[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String option \u003d sc.next();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String criteria \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(criteria);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        Task.TaskType toFindType \u003d Task.TaskType.UNKNOWN;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        switch (option) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                toFindType \u003d Task.TaskType.TODO;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                toFindType \u003d Task.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                toFindType \u003d Task.TaskType.EVENT;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(\"toFindType \u003d \" + toFindType);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assert toFindType !\u003d Task.TaskType.UNKNOWN;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        int len \u003d storedItems.size();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        for (int i \u003d 0; i \u003c len; i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            Task cur \u003d storedItems.get(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            System.out.println(\"cur \u003d \" + cur);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            System.out.println(cur.getTaskType());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            if (cur.getTaskType() \u003d\u003d toFindType \u0026\u0026 cur.getName().contains(criteria)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                foundList.add(cur);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return Ui.printFoundList(foundList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 125
    }
  },
  {
    "path": "src/main/java/duke/util/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.util.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.OutOfBoundMarkingRequestException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.exception.TaskErrorException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.main.DialogBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import static java.lang.System.exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/botIcon.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void handleUserInput() throws OutOfBoundMarkingRequestException, TaskErrorException, InvalidCommandException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (input.equals(Duke.BYE_COMMAND)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 65
    }
  },
  {
    "path": "src/main/java/duke/util/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.util.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static final String BOT_NAME \u003d \"Duke\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private static String PADDING \u003d \"       \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private static String USELESS_LINE \u003d \"-------------------------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the greeting lines to the screen."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * The first thing the user will see."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The printable Ui greeting"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"Greetings! This is %s, and I am your friend!\\n\", BOT_NAME));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"You don\u0027t have to be formal. Relax and tell me how I can help you\\n\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return returnString.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Repeat whatever the input is, print it to the screen."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param str"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    private void echo(String str) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(String.format(\"%s%s\", PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(String.format(\"%s%s\", PADDING, str));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        System.out.println(String.format(\"%s%s\", PADDING, USELESS_LINE));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the bye-bye line to the screen."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Last thing the user will see before the application shuts off."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The printable Ui good-bye."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String byeBye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return \"Bye-bye. It was nice talking to you. See ya soon!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print all the tasks in storedItems to the screen."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The String with all the stored tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String listStoredItems(ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (storedItems.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return \"Your list is empty!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            returnString.append(\"Here is your list\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            for (Task task : storedItems) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                returnString.append(String.format(\"%d. %s\\n\", i, task));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            return returnString.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the status after successfully storing a task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The Ui String that signals storing job done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String storeUserInput(Task task, ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"Now you have %d tasks\", storedItems.size()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return returnString.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the status after successfully marking a task as Done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param pos"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param alreadyDone"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String markItemAsDone(int pos, ArrayList\u003cTask\u003e storedItems, boolean alreadyDone) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (alreadyDone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            returnString.append(String.format(\"Task %d has already been done!\\n\", pos + 1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            returnString.append(String.format(\"Nice nice. I\u0027ve marked the task as done for you\\n\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"   %s\", storedItems.get(pos)));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return returnString.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the status after successfully deleting a task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param storedItems"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The Ui String that signals deleting job done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String deleteItem(Task t, ArrayList\u003cTask\u003e storedItems) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"I\u0027ve removed this task for you\\n\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"    %s\\n\", t));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"You have %d tasks left\", storedItems.size()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return returnString.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * React to a blank user input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The Ui String telling the user to type something."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String blankInput() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return \"Please type something. Don\u0027t leave it blank, plsss!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * Print the resulting foundList of a find request."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @param foundList"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     * @return The Ui String containing all found results."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public static String printFoundList(ArrayList\u003cTask\u003e foundList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        returnString.append(String.format(\"Here are the matching tasks in your list:\\n\"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        if (foundList.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            returnString.append(\"~~~~~Oops! There are no matching tasks!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            for (Task task : foundList) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                returnString.append(String.format(\"%d. %s\\n\", i++, task));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        return  returnString.toString();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 138
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"790.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"30.0\" fitWidth\u003d\"30.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.util.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"558.0\" prefWidth\u003d\"800.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void encoderTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.Deadline test \u003d new Deadline(\"~`48dgsfd\", true, \"by 2020-02-01\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(\"D:~`48dgsfd:1:by 2020-02-01\\n\", test.encoder());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void typeTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.Deadline test \u003d new Deadline(\"~`48dgsfd\", true, \"by 2020-02-01\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(Task.TaskType.DEADLINE, test.getTaskType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 20
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void encoderTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.Event test \u003d new Event(\"~`48dgsfd\", true, \"at 2020-02-01\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(\"E:~`48dgsfd:1:at 2020-02-01\\n\", test.encoder());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void typeTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.Event test \u003d new Event(\"~`48dgsfd\", true, \"at 2020-02-01\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(Task.TaskType.EVENT, test.getTaskType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 20
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void encoderTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.ToDo test \u003d new ToDo(\".....\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(\"T:.....:1\\n\", test.encoder());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    public void typeTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        duke.task.ToDo test \u003d new ToDo(\".....\", true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "        assertEquals(Task.TaskType.TODO, test.getTaskType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "java -classpath ../bin Main \u003c ../bin/input.txt \u003e ../bin/ACTUAL.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "diff ../bin/ACTUAL.txt ../bin/EXPECTED.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NNpanpan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "NNpanpan": 34
    }
  }
]
