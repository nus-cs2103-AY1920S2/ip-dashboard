[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 38,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Represents the different possible commands allowed for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    BYE, DONE, TODO, DEADLINE, EVENT, LIST, DELETE, FIND, ARCHIVE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 8
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Deadline is a sub-class of Task. It contains an additional variable, date as compared to Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param date Due-date of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of Deadline in the format [D][status] \u003cdescription\u003e (date: \u003cdate\u003e)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation of deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String newdate \u003d String.format(\"%d %s %d\", this.date.getDayOfMonth(), this.date.getMonth(), this.date.getYear());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (date: \" + newdate + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of deadline to be stored in a file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * The format is D | \u003cstatus\u003e | \u003cdescription\u003e | \u003cdate\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation to be stored in a file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return String.format(\"%s | %d | %s | %s\", \"D\", this.isDone ? 1 : 0, this.description, convertDateToString(this.date));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 43
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 56
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Duke is a task-management system. It accept user commands to add/delete tasks, mark tasks as done and list all tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Upon exit, tasks will be saved and kept in a file for the next run."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a Duke object. An attempt will be made to load in tasks from the file specified. If the file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * does not exist or cannot be accessed, an empty task list will be loaded."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Path filePath \u003d Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.setTitle(\"Duke - Task Manager\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        sendButton.setPrefWidth(70.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // Part 2"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        sendButton.setOnMouseClicked(mouseEvent -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        userInput.setOnAction(actionEvent -\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                DialogBox.getDukeDialog(userInput.getText(), duke)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            Parser instruction \u003d new Parser(input);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            Command command \u003d instruction.getCommand();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    int doneTaskNum \u003d Integer.parseInt(instruction.getParameter());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.setAsDone(doneTaskNum);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getDoneTask(tasks.getTask(doneTaskNum));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newToDo \u003d new ToDo(instruction.getDescription());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newToDo);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getAddedTask(tasks, newToDo);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newDeadline \u003d new Deadline(instruction.getDescription(), instruction.getDate());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newDeadline);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getAddedTask(tasks, newDeadline);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newEvent \u003d new Event(instruction.getDescription(), instruction.getDate());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newEvent);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getAddedTask(tasks, newEvent);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getTaskList(tasks);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    int delTaskNum \u003d Integer.parseInt(instruction.getParameter());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task toBeDeleted \u003d tasks.getTask(delTaskNum);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.deleteFromTasks(delTaskNum);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getDeletedTask(tasks, toBeDeleted);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    String searchTerm \u003d instruction.getParameter();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getFoundTasks(tasks.findTasks(searchTerm));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case ARCHIVE:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Path archiveFilePath \u003d Paths.get(\"data\", \"dukeArchive.txt\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    storage.archive(tasks, archiveFilePath);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.clean();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    return ui.getArchiveMessage(tasks);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            return ui.getError(e);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return ui.getExitMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Duke newDuke \u003d new Duke();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        newDuke.run();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Starts Duke. User will be able to input commands to perform actions."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        ui.showGreeting();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        loop:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                Parser instruction \u003d new Parser(input);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                Command command \u003d instruction.getCommand();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break loop;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    int doneTaskNum \u003d Integer.parseInt(instruction.getParameter());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.setAsDone(doneTaskNum);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showDoneTask(tasks.getTask(doneTaskNum));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newToDo \u003d new ToDo(instruction.getDescription());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newToDo);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showAddedTask(tasks, newToDo);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newDeadline \u003d new Deadline(instruction.getDescription(), instruction.getDate());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newDeadline);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showAddedTask(tasks, newDeadline);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task newEvent \u003d new Event(instruction.getDescription(), instruction.getDate());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.addToTasks(newEvent);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showAddedTask(tasks, newEvent);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    int delTaskNum \u003d Integer.parseInt(instruction.getParameter());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task toBeDeleted \u003d tasks.getTask(delTaskNum);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.deleteFromTasks(delTaskNum);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showDeletedTask(tasks, toBeDeleted);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    String searchTerm \u003d instruction.getParameter();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showFoundTasks(tasks.findTasks(searchTerm));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                case ARCHIVE:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Path archiveFilePath \u003d Paths.get(\"data\", \"dukeArchive.txt\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    storage.archive(tasks, archiveFilePath);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ui.showArchiveMessage(tasks);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tasks.clean();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    ;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 281,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 8
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Event is a sub-class of Task. It contains an additional variable, date as compared to Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs an Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param date Date of Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of Deadline in the format [E][status] \u003cdescription\u003e (at: \u003cdate\u003e)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String newdate \u003d String.format(\"%d %s %d\", this.date.getDayOfMonth(), this.date.getMonth(), this.date.getYear());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (at: \" + newdate + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of deadline to be stored in a file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * The format is D | \u003cstatus\u003e | \u003cdescription\u003e | \u003cdate\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation to be stored in a file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return String.format(\"%s | %d | %s | %s\", \"D\", this.isDone ? 1 : 0, this.description, convertDateToString(this.date));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 43
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 30
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 51
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Parser handles making sense of input given. It divides the input into 3 main parts: command, description and date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private String parameter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input Input given from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If the input given is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Parser(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.command \u003d extractCommand(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (this.command \u003d\u003d Command.DONE || this.command \u003d\u003d Command.DELETE) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            this.parameter \u003d getFirstParameter(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                Integer.valueOf(this.parameter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                throw new DukeException(\"Task number is not an integer.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } else if (this.command \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            this.description \u003d getFirstParameter(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } else if (this.command \u003d\u003d Command.DEADLINE || this.command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            this.description \u003d getFirstParameter(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            this.date \u003d getDate(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } else if (this.command \u003d\u003d Command.FIND) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            this.parameter \u003d getFirstParameter(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the command from input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Command getCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the parameter from input. Parameter is used for \"Done\" and \"Delete\" commands"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Parameter from input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getParameter() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.parameter;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the description from input. Description is used for Tasks related commands."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Description from input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the date from input. Date is used for \"Deadline\" and \"Event\" commands."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Date from input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Extracts the command given from the input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If user input is invalid."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static Command extractCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // if command doesnt exist"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String command \u003d input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.BYE;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.DONE;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.TODO;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.DEADLINE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.EVENT;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.LIST;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.DELETE;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return Command.FIND;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                throw new DukeException(\"Invalid Command.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Extracts the parameter from user input."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Parameter from user input."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If parameter was not provided."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static String getFirstParameter(String input) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String description \u003d input.split(\" /\")[0];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] descArr \u003d description.split(\" \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (descArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(\"☹ Why did you not provide any description?\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // remove verb"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] cleaned \u003d Arrays.copyOfRange(descArr, 1, descArr.length);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return String.join(\" \", cleaned);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Extract the date from user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input User Input."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Date from user input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If date was not provided."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static LocalDate getDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] tryGetDate \u003d input.split(\" /\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (tryGetDate.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(\"☹ Why did you not provide the time?\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String time \u003d tryGetDate[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] timeArr \u003d time.split(\" \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        // remove verb"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] cleaned \u003d Arrays.copyOfRange(timeArr, 1, timeArr.length);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return convertToLocalDate(String.join(\" \", cleaned));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Converts date in String format to LocalDate format."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Date in String format must be of dd/mm/yyyy."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input Date in String format."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Converted LocalDate."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If date given is in wrong format."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static LocalDate convertToLocalDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return LocalDate.parse(input, formatter);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 159
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Storage handles the reading and writing of tasks to and from a file. It handles converting of file data into"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * a list of Task Objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a Storage object which store and read tasks saved in the specific file path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param filePath Path of file to write and read saved tasks from."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.file \u003d new File(this.filePath.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Writes new tasks to file. If Storage was previously unable to read in saved data due to invalid data or"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * corrupted file, it wil overwrite the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void update(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                fw.write(String.format(\"%s%n\", tasks.getTask(i + 1).toFileFormat()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Reads saved tasks from file and convert them into Task objects and store them into a list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return List of saved tasks from file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If file is unable to be read properly or if data is invalid."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    Task t \u003d Task.getTaskFromMemory(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    tempList.add(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return tempList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Writes task to archive. If Storage was previously unable to read in saved data due to invalid data or"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * corrupted file, it wil overwrite the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks to be archived."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param archiveFilePath Path of archival file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void archive(TaskList tasks, Path archiveFilePath) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        File archiveFile \u003d new File(archiveFilePath.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(archiveFile, true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                fw.append(String.format(\"%s%n\", tasks.getTask(i + 1).toFileFormat()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 90
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Task contains information about a task, such as description and done status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a Task object. Initialized as undone."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the icon associated with the done status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Check for done and cross for undone."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Done status icon."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns a Task object based of the information read from one line of the saved file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param line One line from the saved file. Format: \u003ctask type\u003e | \u003cstatus\u003e | \u003cdescription\u003e | \u003cdate\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Task object of the correct type."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If file is corrupt or the saved data is invalid."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static Task getTaskFromMemory(String line) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String[] splitted \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        switch(splitted[0]) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return new ToDo(splitted[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return new Deadline(splitted[2], convertToLocalDate(splitted[3]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                return new Event(splitted[2], convertToLocalDate(splitted[3]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                throw new DukeException(\"Invalid file. File may have been corrupted.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns a string representation of the task including its done status icon and description."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation for task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of deadline to be stored in a file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * The format is T | \u003cstatus\u003e | \u003cdescription\u003e."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation to be stored in a file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return String.format(\"%s | %d | %s\", \"T\", this.isDone ? 1 : 0, this.description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Converts date in String format to LocalDate format."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Date in String format must be of dd/mm/yyyy."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param input Date in String format."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Converted LocalDate."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static LocalDate convertToLocalDate(String input) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return LocalDate.parse(input, formatter);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Converts date in LocalDate format back to String format."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param date LocalDate date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Date in String format of dd/mm/yyyy."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static String convertDateToString(LocalDate date) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        int day \u003d date.getDayOfMonth();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        int month \u003d date.getMonthValue();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        int year \u003d date.getYear();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (day \u003c 10) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            sb.append(\"0\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        sb.append(String.valueOf(day) + \"/\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (month \u003c 10) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            sb.append(\"0\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        sb.append(String.valueOf(month) + \"/\" + year);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 120
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * TaskList represents a list of tasks and stores tasks. Uses ArrayList to store tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a TaskList object. Initialized as empty."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a TaskList object. Initialized TaskList will contain tasks provided in a list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the number of tasks in list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Adds a task into the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task Task to be added into list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void addToTasks(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Removes a specified task from the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param taskNum Task to be removed from the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If specified task number is out of range of task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void deleteFromTasks(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (taskNum \u003c 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        assert (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) : \"Invalid task number.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Sets a specified task from the list as done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param taskNum Task number to be set as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If specified task number is out of range of task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void setAsDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (taskNum \u003c 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        assert (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) : \"Invalid task number.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks.get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns a specified task from the task number given."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param taskNum Task number to be returned."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return Task to be returned."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @throws DukeException If specified task number is out of range of task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Task getTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (taskNum \u003c 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            throw new DukeException(\"Invalid task number.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        assert (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size()) : \"Invalid task number.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public TaskList findTasks(String searchTerm) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            if (t.getDescription().contains(searchTerm)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                temp.addToTasks(t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Resets the task list so it is empty. For archiving purposes."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void clean() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of a TaskList."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation of TaskList."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            return \"No tasks have been added!\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 121
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Todo is a sub-class of Task. The only difference is the toString method."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs a ToDo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param description Description of ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the string representation of ToDo in the format [D][status] \u003cdescription\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return String representation of ToDo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 24
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * Ui handle tasks related to the user interface of Duke. It also handles user interaction, such as getting"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " * user input and generating replies from Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Constructs an Ui object. A scanner will be created upon object creation to read in user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static final String DELIMITER \u003d \"___________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints the starting message when Duke starts."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e Hello! I\u0027m Duchess\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints the exit message when user ends a Duke session."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e Bye! Hope you don\u0027t come back!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Returns the input from user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Uses Scanner to read in from System.in."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user added into the task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user added into the list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showAddedTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e Alrighty, you added:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.printf(\"\u003e Now you have %d tasks in your list.\\n\", tasks.getSize());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user deleted from the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user deleted from the list of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showDeletedTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e Do you really want to remove this?\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e Fine. I\u0027ve removed:\\n\u003e    \" + task.description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.printf(\"\u003e Now you have %d tasks in your list\\n\", tasks.getSize());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user marked as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"\u003e I\u0027ve finally done this task:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing task(s) that the user searched for."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks The task(s) that the user searched for"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showFoundTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out an error message from any kind of DukeException caught."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param e DukeException caught."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out an error message arising from reading in tasks from saved file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param e Exception caught from trying to read the save file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showLoadingError(Exception e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"Can\u0027t load saved data\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out all the tasks from the task list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static void showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"Here are the tasks that you will never complete: \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out all the tasks from the task list that got archived."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void showArchiveMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(\"Here are the tasks that you have archived: \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.println(DELIMITER);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints the starting message when Duke starts."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getGreeting() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER + \"\\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e Hello! I\u0027m Duchess\\n\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e \";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints the exit message when user ends a Duke session."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"\u003e Bye! Hope you don\u0027t come back!\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user added into the task list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user added into the list of tasks."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getAddedTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e Alrighty, you added:\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"  \" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String.format(\"\u003e Now you have %d tasks in your list.\\n\", tasks.getSize()) +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user deleted from the task list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user deleted from the list of tasks."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getDeletedTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e Do you really want to remove this?\\n\" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e Fine. I\u0027ve removed:\\n\u003e    \" + task.description + \"\\n\" +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        String.format(\"\u003e Now you have %d tasks in your list\\n\", tasks.getSize()) +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing the task the user marked as done."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param task The task the user marked as done."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getDoneTask(Task task) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER + \"\\n\" +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"\u003e I\u0027ve finally done this task: \\n\" +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        task + \"\\n\" +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out message showing task(s) that the user searched for."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks The task(s) that the user searched for"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getFoundTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER + \"\\n\" +"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"Here are the matching tasks in your list: \\n\" +"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks + \"\\n\" +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out an error message from any kind of DukeException caught."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param e DukeException caught."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getError(DukeException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out an error message arising from reading in tasks from saved file."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param e Exception caught from trying to read the save file."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getLoadingError(Exception e) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return \"Can\u0027t load saved data\\n\" +"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        e.toString();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out all the tasks from the task list."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public static String getTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER + \"\\n\" +"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"Here are the tasks that you will never complete: \\n\" +"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks + \"\\n\" +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * Prints out all the tasks from the task list that got archived."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public String getArchiveMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        return DELIMITER + \"\\n\" +"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        \"Here are the tasks that you have archived: \\n\" +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        tasks + \"\\n\" +"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        DELIMITER;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 260
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void toString_validInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        assertEquals(\"[D][✘] test description (date: 20 APRIL 2015)\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                new Deadline(\"test description\", LocalDate.of(2015,04, 20)).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void toFileFormat_validInput_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        assertEquals(\"D | 0 | test description | 20/04/2015\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "                new Deadline(\"test description\", LocalDate.of(2015, 04, 20)).toFileFormat());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 22
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void getCommand_validInput_Success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            assertEquals(Command.DONE, new Parser(\"done 2\").getCommand());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    public void getCommand_InvalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            assertEquals(Command.BYE, new Parser(\"byee\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "            assertEquals(\"Invalid Command.\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "Hello! I\u0027m Duchess"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "Error: ☹ Why did you not provide any description?"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "Error: No such command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "Bye! Hope you don\u0027t come back!"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ncslzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ncslzh"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ncslzh": 21
    }
  }
]
