[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    id \u0027com.github.sherter.google-java-format\u0027 version \u00270.8\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " googleJavaFormat {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    source \u0027src/main\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    source \u0027src/test\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    include \u0027**/*.java\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    options style: \u0027AOSP\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import com.github.sherter.googlejavaformatgradleplugin.GoogleJavaFormat"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "task format(type: GoogleJavaFormat) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  source \u0027src/main\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  source \u0027src/test\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  include \u0027**/*.java\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    mainClassName \u003d \"controller.Launcher\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 58,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "# User Guide for CatDuke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "![Image of Yaktocat](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### UNLIMITED TASK STORAGE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "store up to 1TB of tasks!! (for all you busy bees out there)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### Storable, **WOW**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "have your lists from previous sessions stored and restored on reboots"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### How many types of tasks? THREE **GEEZ**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "Create at least three types of tasks (todo, deadline, event AND BONUS: period)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### Flexible datetime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "use a multitude of datetime formats when entering *wow*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### mEmEs"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "catch up on the funny things that millenials are laughing on the internet (to themselves) as they get further dettached from society because of those mobile phones"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `list` - lists all tasks "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `todo {task detail}` - creates task with task detail as the description of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `event {task detail /at datetime}` - creates task with task detail as the description of the task with a datetime"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `deadline {task detail /by datetime}` - creates task with task detail as the description of the task with a datetime"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `period {task detail /start datetime /end datetime*}` - creates task with task detail as the description of the task with start and end datetimes"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `delete {task index}` - delete task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `done {task index}` - mark task as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "* `bye` - closes duke"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 23,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 9
    }
  },
  {
    "path": "src/main/java/controller/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " * An example of a custom control using FXML. This control represents a dialog box consisting of an"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " * ImageView to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML public Text dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private DialogBox(String text, Image img, Boolean isUser) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        dialog.setWrappingWidth(200);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        dialog.setTextAlignment(isUser ? TextAlignment.RIGHT : TextAlignment.LEFT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        HBox.setMargin(dialog, new Insets(0, 10, 0, 10));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** Flips the dialog box such that the ImageView is on the left and text on the right. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param text to display"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param img to display as user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return DialogBox DialogBox floated to the right"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param text to display"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param img to display"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return DialogBox DialogBox floated to the left"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 69
    }
  },
  {
    "path": "src/main/java/controller/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "/** A launcher class to workaround classpath issues. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 11
    }
  },
  {
    "path": "src/main/java/controller/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "/** A GUI for Duke using FXML. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * To launch GUI for duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param stage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 34
    }
  },
  {
    "path": "src/main/java/controller/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "/** Controller for MainWindow. Provides the layout for the other controls. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML private Label botName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jfif\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jfif\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        botName.setText(\"Duke is here\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @param duke Instance of duke that will control interactions with user */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (duke.getIsClosed()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        dialogContainer"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                .getChildren()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                .addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 57
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.TaskListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Boolean isClosed \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    // storage path is set to root_folder/storage/file.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private static Storage storage \u003d new Storage(Paths.get(\"storage\", \"file.txt\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.taskList \u003d new TaskList(Duke.storage.getTasksFromStorage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static void main(String[] args) {}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** duke\u0027s start function for JavaFX */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String duke\u0027s response to user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String output \u003d dispatch(input.trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Duke.storage.update(this.taskList.getAllTask());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * This is the main logic for handling user input , it dispatches actions based on the input and"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * uses the Parser to handle more complex commands"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param input trimmed user input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException Exceptions arising from incorrect user input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private String dispatch(String input) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (this.taskList.isEmpty()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return \"Hi user! You currently have no tasks!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return this.taskList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    .getAllTasksAsString()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    .collect(Collectors.joining(String.format(\"%n\")));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            isClosed \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return \"Bye see you again soon!\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            // as long as done/delete inside"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (Parser.isDoneOrDelete(input)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (this.taskList.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    throw new TaskListException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                int taskIndex \u003d Parser.getTaskIndex(input) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (taskIndex \u003e\u003d this.taskList.size()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    throw new TaskListException(this.taskList.size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    this.taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    return String.format("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            \"Nice! I\u0027ve marked this task as done:%n%s\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            this.taskList.getTask(taskIndex));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    Task removedTask \u003d this.taskList.popTask(taskIndex);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    return String.format("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            \"Noted. I\u0027ve removed this task:%n%s%nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            removedTask.toString(), this.taskList.size());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } else if (Parser.isFind(input)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (this.taskList.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    throw new TaskListException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                String searchTerm \u003d Parser.getSearchTerm(input);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                String searchResults \u003d"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        taskList.search(searchTerm)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                                .stream()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                                .collect(Collectors.joining(String.format(\"%n\")));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (searchResults.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    return \"No matching tasks!\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return searchResults;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Task newTask \u003d Task.newTask(input);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.taskList.addTask(newTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return String.format("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        \"Got it. I\u0027ve added this task:%n%s%nNow you have %d %s in your list.\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        newTask.toString(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        this.taskList.size(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        this.taskList.size() \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return Boolean whether the user has closed the GUI */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Boolean getIsClosed() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.isClosed;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 124
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return int number of tasks in tasklist */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return Boolean whether task list is empty */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Boolean isEmpty() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.tasks.isEmpty();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return ArrayList\u003cString\u003e returns an array of tasks in string format */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public ArrayList\u003cString\u003e getAllTasksAsString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        ArrayList\u003cString\u003e taskString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            taskString.add(String.format(\"%d.%s\", i + 1, this.tasks.get(i)));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param searchTerm term that tasks should contain"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return ArrayList\u003cString\u003e arraylist of tasks that match the searchTerm in string format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public ArrayList\u003cString\u003e search(String searchTerm) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        ArrayList\u003cString\u003e taskString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task curr \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (curr.contains(searchTerm)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                taskString.add(String.format(\"%d.%s\", i + 1, this.tasks.get(i)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String string value of task at index"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.tasks.get(index).toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Task removes and returns task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Task popTask(int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @param newTask new task object */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.tasks.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @param index index of task to set done */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Task currTask \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        currTask.setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return ArrayList\u003cTask\u003e get arraylist of Tasks */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTask() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 78
    }
  },
  {
    "path": "src/main/java/duke/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private String logo \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final String separator \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final int indent1 \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final int indent2 \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final int indent3 \u003d 7;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Boolean isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\"How may duke serve the master today?\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return Boolean indicates whether Duke should stop it\u0027s while loop */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * Used to get user input, also sets isExit to true if user inputs exit command, \"bye\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String user input that has been trimmed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            System.out.println(\"bye\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            this.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            this.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private void close() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** function to print the separator for duke */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showSep() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        out1(this.separator);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * The error messages all stem from user input not matching the required format"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param errMsg All DukeExceptions ar passed here to be printed"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showErr(String errMsg) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        out2(errMsg);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @param list list of tasks in String format */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private void printList(ArrayList\u003cString\u003e list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        for (String items : list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            out2(items);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * adds header for the list command and then prints list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param tasks list of tasks in String format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showList(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            out2(\"Here are all your tasks:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            printList(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            out2(\"List is empty!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * adds header for the search command and then prints matched tasks"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param tasks list of tasks in String format"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showSearch(ArrayList\u003cString\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            out2(\"Here are the matches:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            printList(tasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            out2(\"No matches found!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        out2(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * adds header to indicate that done command was performed followed by modified task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param task task in String format"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void showDone(String task) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        out2(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        out(task, indent3);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * print with level 2 indentation"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param in String to print"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void out2(String in) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\" \".repeat(indent2) + in);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * print with level 3 indentation"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param in String to print"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void out3(String in) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\" \".repeat(indent3) + in);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * print with level 1 indentation"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param in String to print"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void out1(String in) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\" \".repeat(indent1) + in);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param in String to print"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param indent level of indentation"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void out(String in, int indent) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        System.out.println(\" \".repeat(indent) + in);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 156
    }
  },
  {
    "path": "src/main/java/exception/DateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class DateTimeException extends UIException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public DateTimeException(String acceptedFormat) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(String.format(\"your %s is in the wrong format\", acceptedFormat));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 7
    }
  },
  {
    "path": "src/main/java/exception/DelimiterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class DelimiterException extends UIException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public DelimiterException(String delimiter) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(String.format(\"Dear user, your input is missing this %s delimiter\", delimiter));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public DukeException(String issue) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(String.format(\"Oppsie doodle: %s\", issue));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 7
    }
  },
  {
    "path": "src/main/java/exception/TaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class TaskListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public TaskListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(String.format(\"it appears you\u0027ve made a happy accident. Your list is empty!\"));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public TaskListException(int index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                String.format("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        \"Happy accident! Please choose an index that is between 1 and %d (inclusive)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        index));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 14
    }
  },
  {
    "path": "src/main/java/exception/UIException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class UIException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public UIException(String issue) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(String.format(\"Dear user, %s\", issue));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.UIException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import task.Constant;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private static String[] timeRegexes \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        \"H:m\", \"Hmm\", \"H.m\", \"h.m a\", \"h.m a\", \"h:m a\", \"h:m a\", \"hmm a\", \"hmma\", \"h a\", \"ha\", \"H\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private static String[] dateRegexes \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        \"ddMMyyyy\", \"yyyyMMdd\", \"d-M-yyyy\", \"d/M/yyyy\", \"yyyy-M-d\", \"yyyy/M/d\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param input raw input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Boolean returns true if input is a done or delete command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException if user input matches a done or delete command but it not properly"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *     formatted"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static Boolean isDoneOrDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String doneInInputRegex \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"(^(done|delete)\\\\s+.*|(.*\\\\s+(done|delete)\\\\s+.*)|.*\\\\s+(done|delete)$)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String doneAtFrontRegex \u003d \"^(done|delete)\\\\s+.*\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String numberNotAtBackRegex \u003d \"^(done|delete)\\\\s+\\\\d+\\\\D+$\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String numberNotInInputRegex \u003d \"^(done|delete)\\\\s+\\\\d+$\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (Pattern.matches(doneInInputRegex, input)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (!Pattern.matches(doneAtFrontRegex, input)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"Action should be at the front\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (Pattern.matches(numberNotAtBackRegex, input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"Must end with a number and provide only one number!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (!Pattern.matches(numberNotInInputRegex, input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"A task number must be provided\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param input raw user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Boolean returns true if command is a find command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException if user input matches a find command but it not properly formatted"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static Boolean isFind(String input) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String findInInputRegex \u003d \"^(find\\\\s+.*)|(.*\\\\s+find\\\\s+.*)|(.*\\\\s+find$)\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String findAtFrontRegex \u003d \"^find\\\\s+.*\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String noSearchTermRegex \u003d \"^find\\\\s+.*\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (Pattern.matches(findInInputRegex, input)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (!Pattern.matches(findAtFrontRegex, input)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"Action should be at the front\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (!Pattern.matches(noSearchTermRegex, input)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"Search term must be provided\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param input raw input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String the lower cased task type is returned (todo/deadline/event)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException when type is not recognized"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String getType(String input) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String lowerCaseInput \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String acceptedTypes \u003d String.format(\"(%s)\", String.join(\"|\", Constant.taskTypes));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String taskTypePresentRegex \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                String.format(\"^%1$s\\\\s+.*|.*\\\\s+%1$s$|.*\\\\s+%1$s\\\\s+.*\", acceptedTypes);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String taskTypeAtFrontRegex \u003d String.format(\"^%s\\\\s+.*\", acceptedTypes);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (Pattern.matches(taskTypePresentRegex, lowerCaseInput)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (Pattern.matches(taskTypeAtFrontRegex, lowerCaseInput)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                throw new UIException(\"Please start with event type\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        throw new UIException(\"No accepted types present\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description user input without the type"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String returns the content"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException when content is empty, raise exception"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String getContent(String description) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Matcher matcher \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Pattern.compile(String.join(\"|\", Constant.taskDelimiters)).matcher(description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        int index \u003d matcher.find() ? matcher.start() : -1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (index \u003d\u003d -1 \u0026\u0026 description.trim().length() \u003e 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return description.trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (description.trim().length() \u003d\u003d 0 || index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            System.out.println(description);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException(\"Content cannot be empty!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String content \u003d description.substring(0, index).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (content.length() \u003e 0) return content;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        throw new UIException(\"Content cannot be empty!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description user input without type"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param regex varies on whether it is event or deadline (/at or /by)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String raw datetime string"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException if no datetime string is provided, raise exception"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String getDateTime(String description, String regex) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Matcher matcher \u003d Pattern.compile(regex).matcher(description);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        int index \u003d matcher.find() ? matcher.start() : -1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException(String.format(\"Please provide %s for this event type\", regex));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String dateTime \u003d description.substring(index + regex.length()).trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (dateTime.length() \u003d\u003d 0) throw new UIException(\"Please provide a time\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description input without type"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param regex1 regex for start of dateTime input"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param regex2 regex for end of dateTime input"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String[] returns an array of size 2 with the dateTime Strings of start and end"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException When no time has been provided for either start/end"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String[] getStartEndDateTime(String description, String regex1, String regex2)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Matcher matcher \u003d Pattern.compile(regex1).matcher(description);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        int index \u003d matcher.find() ? matcher.start() : -1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Matcher matcher2 \u003d Pattern.compile(regex2).matcher(description);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        int index2 \u003d matcher2.find() ? matcher2.start() : -1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (index \u003d\u003d -1 || index2 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    String.format(\"Please provide %s and %s for this event type\", regex1, regex2));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String dateTime \u003d description.substring(index + regex1.length(), index2).trim();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String dateTime2 \u003d description.substring(index2 + regex2.length()).trim();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (dateTime.length() \u003d\u003d 0 || dateTime2.length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException(\"Please provide a time\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String returnResult[] \u003d {dateTime, dateTime2};"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return returnResult;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description input without type"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param regex varies on whether it is event or deadline (/at or /by)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return LocalTime turn String time to LocalTime"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException if time input is poorly formatted"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static LocalTime getTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String[] split \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            time \u003d"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    String.join(\" \", Arrays.copyOfRange(split, 1, split.length))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            .trim()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            .toUpperCase();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            \"Missing time/date information %n please provide date then time separated by a space\"));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        for (String pattern : Parser.timeRegexes) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return LocalTime.parse(time, DateTimeFormatter.ofPattern(pattern));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        throw new DateTimeException(\"Time\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description input without type"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param regex varies on whether it is event or deadline (/at or /by)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return LocalDate turn String date to LocalDate"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException if date input is poorly formatted"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static LocalDate getDate(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String date \u003d dateTime.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        for (String pattern : Parser.dateRegexes) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                return LocalDate.parse(date, DateTimeFormatter.ofPattern(pattern));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        throw new DateTimeException(\"Date\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param rawInput userInput"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return int integer value of index provided"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int getTaskIndex(String rawInput) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String[] splitInput \u003d rawInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return Integer.parseInt(splitInput[splitInput.length - 1]);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param rawInput userInput"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return String searchTerm is returned"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String getSearchTerm(String rawInput) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return rawInput.substring(5).trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 223
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.file \u003d new File(this.filePath.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @param tasks all existing tasks */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void update(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        FileWriter fr \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                fr.write(String.format(\"%s%n\", t.toStorable())); // | separated data"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                if (fr !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    fr.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return ArrayList\u003cTask\u003e returns ArrayList of Task based on txt storage */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksFromStorage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        ArrayList\u003cTask\u003e tempTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(this.filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            for (String entry : lines) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    Task newTask \u003d Task.newTaskFromMemory(entry);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    tempTasks.add(newTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    System.out.println(\"File has been corrupted\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    this.update(tempTasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    return tempTasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (NoSuchFileException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            File directory \u003d new File(Paths.get(\"storage\").toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return tempTasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return tempTasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 74
    }
  },
  {
    "path": "src/main/java/task/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public enum Constant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    TODO(\"[T]\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    EVENT(\"[E]\", \"/at\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    DEADLINE(\"[D]\", \"/by\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    PERIODTASK(\"[P]\", \"/start\", \"/end\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String[] taskTypes \u003d {\"todo\", \"event\", \"deadline\", \"period\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static String[] taskDelimiters \u003d {\"/at\", \"/by\", \"/start\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int isDoneIndex \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int descriptionIndex \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int dateIndex \u003d 3;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int timeIndex \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int endDateIndex \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static int endTimeIndex \u003d 6;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    private final String[] timeDelimiter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    Constant(String type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.timeDelimiter \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    Constant(String type, String... timeDelimiter) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.timeDelimiter \u003d timeDelimiter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getTimeDelimiter() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.timeDelimiter[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getEndTimeDelimiter() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.timeDelimiter[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 42
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Deadline extends TimeTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Deadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Constant.DEADLINE.getType(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Parser.getDateTime(description, Constant.DEADLINE.getTimeDelimiter()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Deadline(String[] fromMemory) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(Constant.DEADLINE.getType(), fromMemory);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"%s (by: %s %s)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 28
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Event extends TimeTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Event(String description) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Constant.EVENT.getType(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Parser.getDateTime(description, Constant.EVENT.getTimeDelimiter()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Event(String[] fromMemory) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(Constant.EVENT.getType(), fromMemory);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"%s (at: %s %s)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 28
    }
  },
  {
    "path": "src/main/java/task/PeriodTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class PeriodTask extends TimeTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected LocalDate endDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected LocalTime endTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public PeriodTask(String description) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Constant.PERIODTASK.getType(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Parser.getStartEndDateTime("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        description,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        Constant.PERIODTASK.getTimeDelimiter(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        Constant.PERIODTASK.getEndTimeDelimiter())[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String dateTimes[] \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                Parser.getStartEndDateTime("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        description,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        Constant.PERIODTASK.getTimeDelimiter(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        Constant.PERIODTASK.getEndTimeDelimiter());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.endDate \u003d Parser.getDate(dateTimes[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.endTime \u003d Parser.getTime(dateTimes[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        LocalDateTime start \u003d LocalDateTime.of(this.date, this.time);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        LocalDateTime end \u003d LocalDateTime.of(this.endDate, this.endTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        if (end.isBefore(start)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new DukeException(\"End dates and time must be after start dates and time\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public PeriodTask(String[] fromMemory) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(Constant.PERIODTASK.getType(), fromMemory);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.endDate \u003d LocalDate.parse(fromMemory[Constant.endDateIndex]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.endTime \u003d LocalTime.parse(fromMemory[Constant.endTimeIndex]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"%s (start: %s %s, end: %s %s)\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.time,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.endDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                this.endTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toStorable() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format(\"%s|%s|%s\", super.toStorable(), this.endDate, this.endTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 58
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.UIException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Task(String type, String isDone, String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.isDone \u003d isDone.equals(\"Y\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Task(String type, String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param description Raw input from user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Task Returns one of the three subclasses of Task, Todo/Event/Deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException Handles case where task type is not recognized"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static Task newTask(String description) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String type \u003d Parser.getType(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String typeLess \u003d description.substring(type.length()).trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Todo(typeLess);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Event(typeLess);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Deadline(typeLess);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"period\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new PeriodTask(typeLess);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException(\"Task not recognized\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * Reads String from storage and then creates the right Task Object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param entry String as stored in txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public static Task newTaskFromMemory(String entry) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String[] splitEntry \u003d entry.split(\"\\\\|\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        String type \u003d splitEntry[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"[T]\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Todo(splitEntry);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"[E]\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Event(splitEntry);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"[D]\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new Deadline(splitEntry);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        case \"[P]\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            return new PeriodTask(splitEntry);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            throw new UIException(\"Task not recognized\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String \"Y\" for done, \"N\" for not done */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return (this.isDone ? \"Y\" : \"N\"); // Couldn\u0027t view the ticks and crosses on my terminal"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @param term search term"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     * @return Boolean returns whether term is in task description"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Boolean contains(String term) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.description.contains(term);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return Boolean Getter for isDone */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format(\"%s[%s] %s\", this.type, this.getStatusIcon(), description);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String string used to convert task to txt to store */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toStorable() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format(\"%s|%s|%s\", this.type, this.isDone ? \"Y\" : \"N\", this.description);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 103
    }
  },
  {
    "path": "src/main/java/task/TimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class TimeTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public TimeTask(String type, String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(type, Parser.getContent(description));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.time \u003d Parser.getTime(dateTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.date \u003d Parser.getDate(dateTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public TimeTask(String type, String[] fromMemory) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(type, fromMemory[Constant.isDoneIndex], fromMemory[Constant.descriptionIndex]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.date \u003d LocalDate.parse(fromMemory[Constant.dateIndex]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        this.time \u003d LocalTime.parse(fromMemory[Constant.timeIndex]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    /** @return String returns string used to store task in txt file */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public String toStorable() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        return String.format(\"%s|%s|%s\", super.toStorable(), this.date, this.time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 29
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(Constant.TODO.getType(), Parser.getContent(description));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public Todo(String[] fromMemory) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        super(Constant.TODO.getType(), fromMemory[1], fromMemory[2]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 14
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controller.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cLabel fx:id\u003d\"botName\" text\u003d\"Label\" layoutY\u003d\"558.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 21
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     private final ByteArrayInputStream in \u003d new ByteArrayInputStream((\"Hello\").getBytes());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     private final ByteArrayOutputStream out \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     private final PrintStream outContent \u003d new PrintStream(out);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     @BeforeEach"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     public void setUpStreams() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         System.setOut(outContent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     public void testBot() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // ByteArrayInputStream in \u003d new ByteArrayInputStream("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // (\"Hello\" + System.lineSeparator() + \"2\" + System.lineSeparator() + \"uwu\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // System.lineSeparator() + \"bye\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // .getBytes());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         Duke bot \u003d new Duke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         bot.start();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         System.setIn(in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // assertEquals(\"Hello\\n2\\nuwu\\nBye. Hope to see you again soon!\\n\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         // outContent.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//         assertEquals(\"Hello\\n\", outContent.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "//     }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "// }"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 34
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void parseTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String deadlineType \u003d Parser.getType(\"deadline return book /by 19-12-2019 4pm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"deadline\", deadlineType);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String deadlineContent \u003d Parser.getContent(\"return book /by 19-12-2019 4pm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"return book\", deadlineContent);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String deadlineDateTime \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    Parser.getDateTime(\"deadline return book /by 19-12-2019 4pm\", \"/by\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"19-12-2019 4pm\", deadlineDateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String eventType \u003d Parser.getType(\"event project meeting /at 02/11/2020 2359\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"event\", eventType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String eventContent \u003d Parser.getContent(\"project meeting /at 02/11/2020 2359\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"project meeting\", eventContent);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            String eventDateTime \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    Parser.getDateTime(\"event project meeting /at 02/11/2020 2359\", \"/at\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"02/11/2020 2359\", eventDateTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 30
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void taskCreation() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task todo \u003d Task.newTask(\"todo done with j-unit\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"[T][N] done with j-unit\", todo.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task deadline \u003d Task.newTask(\"deadline return book /by 19-12-2019 4pm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"[D][N] return book (by: 19 Dec 2019 16:00)\", deadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task event \u003d Task.newTask(\"event project meeting /at 02/11/2020 2359\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(\"[E][N] project meeting (at: 02 Nov 2020 23:59)\", event.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task period \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    Task.newTask("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            \"period TOTO 4D BIG HUAT /start 10/02/2020 0000 /end 12/02/2020 2359\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    \"[P][N] TOTO 4D BIG HUAT (start: 10 Feb 2020 00:00, end: 12 Feb 2020 23:59)\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                    period.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void taskCreationExceptions() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Exception periodException \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                assertThrows("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        DukeException.class,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        () -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            Task.newTask("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                                    \"period TOTO 4D BIG HUAT /start 14/02/2020 0000 /end 12/02/2020 2359\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"Oppsie doodle: End dates and time must be after start dates and time\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                periodException.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        Exception noTypesException \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                assertThrows("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        DukeException.class,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        () -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                            Task.newTask("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                                    \"TOTO 4D BIG HUAT /start 14/02/2020 0000 /end 12/02/2020 2359\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                        });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                \"Oppsie doodle: Dear user, No accepted types present\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "                noTypesException.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    public void taskMarking() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            Task event \u003d Task.newTask(\"event project meeting /at 02/11/2020 2359\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(false, event.isDone());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            event.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "            assertEquals(true, event.isDone());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 65
    }
  },
  {
    "path": "storage/file.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|N|4"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|Y|23"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|Y|4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[D]|Y|asd|2019-10-12|12:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|N|10"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[E]|N|1234|2020-10-12|12:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|Y|55"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[E]|N|123|2020-12-20|12:00"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|Y|423"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[E]|N|as|2020-12-10|04:00"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[D]|Y|do all my work|2020-12-10|02:00"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|N|cs2103T project"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[T]|Y|burger king foot lettuce"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[D]|N|2103T iP|2020-03-02|23:59"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "How may duke serve the master today?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Task list is empty!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "       [T][N] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Here are all your tasks:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     1.[T][N] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "deadline return book /by 19-12-2019 4pm"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "       [D][N] return book (by: 19 Dec 2019 16:00)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event project meeting /at 02/11/2020 2359"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "       [E][N] project meeting (at: 02 Nov 2020 23:59)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Here are all your tasks:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     1.[T][N] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     2.[D][N] return book (by: 19 Dec 2019 16:00)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     3.[E][N] project meeting (at: 02 Nov 2020 23:59)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "       [E][Y] project meeting (at: 02 Nov 2020 23:59)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Here are all your tasks:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     1.[T][N] borrow book"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     2.[D][N] return book (by: 19 Dec 2019 16:00)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     3.[E][Y] project meeting (at: 02 Nov 2020 23:59)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "deadline return book /at Sunday"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Missing time/date information "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " please provide date then time separated by a space"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event return book /by 1200"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Missing time/date information "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " please provide date then time separated by a space"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event  /by Sunday"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Content cannot be empty!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event  asdf /at"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Missing time/date information "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BransonNg"
        },
        "content": " please provide date then time separated by a space"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "       [T][N] borrow book"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     WARNING!! Please choose an index that is between 1 and 2 (inclusive)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "bye"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 103
    }
  },
  {
    "path": "text-ui-test/EXPECTED_STORAGE.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[D]|N|return book|2019-12-19|16:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "[E]|Y|project meeting|2020-11-02|23:59"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "deadline return book /by 19-12-2019 4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event project meeting /at 02/11/2020 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "deadline return book /at Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event return book /by 1200"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event  /by Sunday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "event  asdf /at "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "delete 4"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "del storage\\file.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\parser\\*.java ..\\src\\main\\java\\task\\*.java ..\\src\\main\\java\\exception\\*.java ..\\src\\main\\java\\parser\\*.java ..\\src\\main\\java\\storage\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "java -cp ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BransonNg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BransonNg"
        },
        "content": "FC storage\\file.TXT EXPECTED_STORAGE.TXT"
      }
    ],
    "authorContributionMap": {
      "BransonNg": 24
    }
  }
]
