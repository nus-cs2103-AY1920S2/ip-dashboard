[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 37,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a DialogBox."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * This is a factory method that calls upon a private constructor."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param text String representing text to display."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param img Image to display beside string for identification."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return DialogBox for most recent message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a DialogBox."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * This is a factory method that calls upon a private constructor."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param text String representing text to display."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param img Image to display beside string for identification."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return DialogBox for most recent message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 73
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Duke is a command line application that lets users store tasks they wish to track."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * We have here our driver class which initialize other main components of the app."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * A constructor which takes instantiates other components."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param filePath Path name of the file we want to load."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.tasks \u003d storage.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a response to MainWindow to display in dialogBox."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param input String representing prompt."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String to display."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            save();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return getExit() + \"\\nFile saved. \\nType anything to close.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return parser.handleTaskCommand(input, tasks, this.ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a String representation of introduction message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing introduction message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getIntro() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return ui.getWelcomeMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a String representation of exit message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing exit message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return ui.getExitMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Saves our current tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 62,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 12
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            // set duke so that MainWindow can interact with duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaEmperor.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDooku.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private boolean hasExited \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Sets duke of MainWindow to an instance of our duke program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param d Duke object that is created."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        DialogBox startBox \u003d DialogBox.getDukeDialog(d.getIntro(), dukeImage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        dialogContainer.getChildren().add(startBox);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        if (hasExited) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                TimeUnit.SECONDS.sleep(1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            this.hasExited \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 71
    }
  },
  {
    "path": "src/main/java/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class InvalidFormatException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public InvalidFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class InvalidInstructionException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public InvalidInstructionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        super((message));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import exception.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import exception.InvalidInstructionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Parse commands and decide on how to handle them accordingly."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param text String representing the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param tasks TaskList containing existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing response."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Stack\u003cString\u003e commands \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String handleTaskCommand(String text, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String[] textArray \u003d text.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String instruction \u003d textArray[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d  tasks.getTasksAsString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instruction.equals(\"undo\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                if (commands.empty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    throw new InvalidInstructionException(\"Nothing to undo\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d handleUndo(commands.pop(), tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instruction.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                commands.push(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d tasks.setDone(textArray[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instruction.equals(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                commands.push(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d tasks.deleteTask(textArray[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instruction.equals(\"find\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                if (textArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    throw new InvalidFormatException(\"Find nothing? Get nothing\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d tasks.getListOfMatch(textArray[1]).getTasksAsString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if ((instruction.equals(\"todo\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    || instruction.equals(\"deadline\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    || instruction.equals(\"event\"))) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                commands.push(text);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d tasks.addNewTask(textArray);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instruction.equals(\"help\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                response \u003d  ui.getHelpMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidInstructionException(\"You have entered invalid input.\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                        + \"\\nEnter help to all all possible commands.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (InvalidInstructionException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (InvalidFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        assert !response.equals(\"\") : \"you should have a proper response by now\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private String handleUndo(String text, TaskList tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String[] textArray \u003d text.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String instruction \u003d textArray[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                return tasks.setNotDone(textArray[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                return tasks.undoDelete();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                return tasks.deleteTask(String.valueOf(tasks.getTaskCount()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 79
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Storage components which handles loading and saving of file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    // deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor of a storage component."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param filePath Path of file we interact with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return TaskList which is an abstraction of our task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e(), true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                File directory \u003d new File(file.getParent());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    directory.mkdirs();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                assert directory !\u003d null : \"directory should be created\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                assert file !\u003d null : \"new file should be created\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                FileInputStream fi \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                ObjectInputStream oi \u003d new ObjectInputStream(fi);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                tasks \u003d new TaskList((List\u003cTask\u003e) oi.readObject(), true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                oi.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                fi.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Saves our tasks in a file associated with this storage object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        assert new File(this.filePath) !\u003d null : \"file you are saving to should exist.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            FileOutputStream fo \u003d new FileOutputStream(new File(this.filePath));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            ObjectOutputStream oo \u003d new ObjectOutputStream(fo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            oo.writeObject(tasks.getTaskList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            oo.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fo.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 74
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Represents a task user wants to complete by a certain time and date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor for Deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param description How the user describes the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param by Time by which user has to complete task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns the deadline task in a nice format suitable for printing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing the details of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String formatDateTime \u003d by.format(DateTimeFormatter.ofPattern(\"dd LLL yyyy HH:mma\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 33
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Represents a task occurring at a certain place."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor for Event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param description How the user describes the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param at Location where the task takes place."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a string for printing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String which represents the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 29
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * An abstraction of what something the user wants to do."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Implements Serializable to be saved as a stream of bytes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor for task object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param description How the user describes the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Getter for description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns an string icon that suggests if a task is completed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String that represents either a tick or cross."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return (isDone ? \"[/]\" : \"[x]\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a representation of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String that represents the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 47
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import exception.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * A data structure serving Duke by storing a list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private boolean isLoadedList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private Stack\u003cTask\u003e deletedTasks \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor to create TaskList if we have a set of tasks for it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param tasks List of Task objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param isLoadedList Boolean indicating if TaskList was loaded from a file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks, boolean isLoadedList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.isLoadedList \u003d isLoadedList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns the number of tasks in our list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param num Position of a task in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing task that was completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String setDone(String num) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            Task completedTask \u003d this.tasks.get(Integer.parseInt(num) - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            completedTask.isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return \"Nice, I\u0027ve marked this as done:\\n\" + completedTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            throw new InvalidFormatException(\"Enter \\\"done number\\\", make sure number exists in list!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String setNotDone(String num) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        Task completedTask \u003d this.tasks.get(Integer.parseInt(num) - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        completedTask.isDone \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"You need to do this again:\\n\" + completedTask;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Removes an existing task from our list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param num Position of a task in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing deleted task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String deleteTask(String num) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            Task deletedTask \u003d this.tasks.remove(Integer.parseInt(num) - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            deletedTasks.push(deletedTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return \"Deleted:\\n\" + deletedTask + \"\\nYou now have \" + getTaskCount() + \" tasks in the list\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            throw new InvalidFormatException(\"Enter \\\"delete number\\\", make sure number exists in list!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String undoDelete() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        Task restoredTask \u003d deletedTasks.pop();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        tasks.add(restoredTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"I have restored:\\n\" + restoredTask;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Prints all our existing tasks, and their details."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Behavior when tasks is empty depends on whether the list was created from loading file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing all tasks in list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getTasksAsString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return ("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    isLoadedList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    ? \"Nothing at the moment. The sith control everything, you just don\u0027t know it.\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    : \"No existing tasks has description that fits the keyword.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                sb.append(String.valueOf(i + 1) + \" \" + this.tasks.get(i));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                if (i !\u003d this.tasks.size() - 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Adds a new task based on instructions given."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param instArr Array that represents the instruction."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String representing the added task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String addNewTask(String[] instArr) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        List instList \u003d Arrays.asList(instArr);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        String addTaskMessage \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        if (instArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (instArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"Description should not be empty\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String description \u003d String.join(\" \", Arrays.copyOfRange(instArr, 1, instArr.length));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            Task newTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            addTaskMessage \u003d addTaskHelper(newTask);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } else if (instArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            // exception to handle non existence of /by and correspondingly /at"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            int separator \u003d instList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"correct format: deadline task /by date\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"Description should not be empty\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String description \u003d  String.join(\" \", Arrays.copyOfRange(instArr, 1, separator));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String dateTime \u003d String.join(\" \", Arrays.copyOfRange(instArr, separator + 1, instArr.length));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                LocalDateTime by \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                Task newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                addTaskMessage \u003d addTaskHelper(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"Make sure you entered valid date: yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } else if (instArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            int separator \u003d instList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (separator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"correct format: event task /at place\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            } else if (instArr.length \u003d\u003d separator"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                    || separator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                throw new InvalidFormatException(\"Description and place cannot be empty\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String description \u003d  String.join(\" \", Arrays.copyOfRange(instArr, 1, separator));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String at \u003d String.join(\" \", Arrays.copyOfRange(instArr, separator + 1, instArr.length));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            Task newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            addTaskMessage \u003d addTaskHelper(newTask);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return addTaskMessage;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private String addTaskHelper(Task addedTask) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.tasks.add(addedTask);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"Added:\\n\" + addedTask + String.format(\"\\nYou now have %d tasks in the list\", getTaskCount());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a TaskList, tasks with description that contains keyword are included."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param keyword String which we want to compare description against."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return TaskList containing tasks that match."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public TaskList getListOfMatch(String keyword) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        for (Task task: this.tasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return new TaskList(tasks, false);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 179
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * A minimalistic task that only contains a description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor for a ToDo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param description How the user describes the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a representation of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String that represents the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 26
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private static final String DIVIDER \u003d new String(new char[50]).replace(\u0027\\0\u0027, \u0027_\u0027);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"A long time ago in a galaxy far, far away...\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"As you wish my lord\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private static final String HELP_MESSAGE \u003d \"Available commands are :\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            + \"todo (task description)\\n\" + \"event (task description) /at (place)\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            + \"deadline (task description) /by (date: yyyy-MM-dd HH:mm)\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            + \"list\\n\" + \"done (number as shown in list)\\n\" + \"delete (number as shown in list)\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            + \"undo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Constructor for our UI component."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @param in Method of input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public Ui(Scanner in) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        this.in \u003d in;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Prints a huge Duke logo and greets user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return LOGO + \"\\n\" + DIVIDER + \"\\n\\n\\n\" + WELCOME_MESSAGE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Bids user farewell."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return EXIT_MESSAGE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * Returns a representation of all possible commands."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     * @return String of commands."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public String getHelpMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        return HELP_MESSAGE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.geometry.Rectangle2D?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" styleClass\u003d\"DialogBox\" stylesheets\u003d\"@DarkTheme.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"label-bright\" stylesheets\u003d\"@DarkTheme.css\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003cFont size\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003cviewport\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003cRectangle2D /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003c/viewport\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003cInsets left\u003d\"3.0\" right\u003d\"3.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ray-97": 30
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.control.Accordion?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"background\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"What do you desire, my master?\" stylesheets\u003d\"@DarkTheme.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"309.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"91.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"background\" stylesheets\u003d\"@DarkTheme.css\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "      \u003cAccordion /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ray-97": 21
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void handleTaskCommand_invalidCommand_ExceptionCaught() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            new Parser().handleTaskCommand(\"Hello\", new TaskList(new ArrayList\u003cTask\u003e(), true));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 21
    }
  },
  {
    "path": "src/test/java/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void getTaskCount_newTaskList_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        assertEquals(0, new TaskList(new ArrayList\u003cTask\u003e(), true).getTaskCount());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    public void addNewTask_invalidDay_ExceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String text \u003d \"deadline test /by 1986-12-35 12:00\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            String[] textArray \u003d text.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            new TaskList(new ArrayList\u003cTask\u003e(), true).addNewTask(textArray);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "            assertEquals(\"Make sure you entered valid date: yyyy-MM-dd HH:mm\", e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ray-97": 28
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Enter bye to exit!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "todo first task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Added: [T][✗] first task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": "You now have 1 tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "1.[T][✗] first task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "deadline second task /by today"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Added: [D][✗] second task (by: today)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "You now have 2 tasks in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "event third task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "correct format: event task /at place"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "event third task /at this place"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Added: [E][✗] third task (at: this place)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ray-97"
        },
        "content": "You now have 3 tasks in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ray-97"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ray-97"
        },
        "content": "1.[T][✗] first task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ray-97"
        },
        "content": "2.[D][✗] second task (by: today)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ray-97"
        },
        "content": "3.[E][✗] third task (at: this place)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ray-97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Nice, I\u0027ve marked this as done:[E][✓] third task (at: this place)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Anything Duke can do for you?"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ray-97"
        },
        "content": "bye"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ray-97"
        },
        "content": "__________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ray-97"
        },
        "content": "Goodbye, see you again!"
      }
    ],
    "authorContributionMap": {
      "ray-97": 53
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "todo first task"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "deadline second task /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "event third task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "event third task /at this place"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ray-97": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ray-97": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ray-97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ray-97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ray-97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ray-97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ray-97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ray-97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ray-97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ray-97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ray-97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ray-97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ray-97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ray-97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ray-97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ray-97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ray-97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ray-97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ray-97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ray-97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ray-97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ray-97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ray-97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ray-97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ray-97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ray-97": 34
    }
  }
]
