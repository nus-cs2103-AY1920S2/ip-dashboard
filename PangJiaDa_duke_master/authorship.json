[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "D|1|assignment|2020-01-28"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "E|1|be social|location"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "T|0|indiv project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "T|1|more work"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "T|0|it\u0027s never ending!"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 5
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private Task toAdd;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public AddCommand(Task toAdd) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 17
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        // string by must be of format yyyy-mm-dd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toDatabaseString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"D\" + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                \"|\" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 23
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private int deleteIndex;  //deleteIndex is 0-indexed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        //deleteIndex is 0-indexed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.delete(deleteIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 18
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private int doneIndex;  //doneIndex is 0-indexed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public DoneCommand(int doneIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        //doneIndex is 0-indexed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.done(doneIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            System.out.println(\"file not found exception when loading database\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand); //throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                ui.showError(e.getErrorMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        // saving tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            ui.showSavingTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            System.out.println(\"error saving tasks\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\Pang Jia Da\\\\Desktop\\\\CS2103\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "PangJiaDa": 53
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "//    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "//        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"vanilla duke exception. Extend me!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 8
    }
  },
  {
    "path": "src/main/java/EmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class EmptyToDoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"☹ OOPS!!! The description of a todo cannot be empty.!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toDatabaseString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"E\" + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                \"|\" + this.at + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 19
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 11
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class InvalidCommand implements Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"invalid command execute being called\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"invalid command isExit being called\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class ListCommand implements Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        int spaceIndex \u003d fullCommand.indexOf(\" \");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        if (spaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            // full command is only 1 word"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (fullCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                throw new EmptyToDoException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                throw new UndefinedCommandException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            String firstArg \u003d fullCommand.substring(0, spaceIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            String otherArgs \u003d fullCommand.substring(spaceIndex + 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            if (firstArg.equals(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new AddCommand(new Todo(otherArgs));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (firstArg.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                String[] splitby \u003d otherArgs.split(\" /by \");    //note surrounding spaces"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new AddCommand(new Deadline(splitby[0], splitby[1]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (firstArg.equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                String[] splitat \u003d otherArgs.split(\" /at \");    //note surrounding spaces"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new AddCommand(new Event(splitat[0], splitat[1]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (firstArg.equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                // assumes command is only \"done\" and an int"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                // the input is 1-indexed. DoneCommand takes in 0-indexed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new DoneCommand(Integer.parseInt(otherArgs) - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else if (firstArg.equals(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                // assumes command is only \"delete\" and an int"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                // the input is 1-indexed. DeleteCommand takes in 0-indexed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(otherArgs) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                throw new UndefinedCommandException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 41
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            tasks.add(databaseStringToTask(s.nextLine()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    private static Task databaseStringToTask(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        String[] split \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        Task newTask \u003d new Todo(\"error in decoding database string\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                newTask \u003d new Todo(split[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                newTask \u003d new Deadline(split[2], split[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                newTask \u003d new Event(split[2], split[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                System.err.println(\"default case hit in decoding database string to task\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        // set completion status"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        if (split[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            fw.write(t.toDatabaseString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 59
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    abstract public String toDatabaseString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 23
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(toAdd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void done(int doneIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        //doneIndex is 0-indexed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        tasks.get(doneIndex).markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(tasks.get(doneIndex));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void delete(int deleteIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        //deleteIndex is 0-indexed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "//        System.out.println(tasks.get(deleteIndex));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "//        tasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(tasks.remove(deleteIndex));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 46
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String toDatabaseString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"T\" + \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"error loading from database. Starting with empty task list\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return new Scanner(System.in).nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void showSavingTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        System.out.println(\"Saving Tasks!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 35
    }
  },
  {
    "path": "src/main/java/UndefinedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class UndefinedCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 6
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    String description \u003d \"desc\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    String by \u003d \"2020-01-01\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    void createdIncompleteTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        assertEquals(deadline.isDone, false, \"deadline is initialized to incomplete\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    void toDatabaseString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        assertEquals(deadline.toDatabaseString(), \"D|0|\" + description + \"|\" + by + \"\\n\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                \"testing encoding of default deadline task\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 9
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    String description \u003d \"desc\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    void createdIncompleteTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        assertEquals(todo.isDone, false, \"Todo is initialized to incomplete\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    void toDatabaseString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "        assertEquals(todo.toDatabaseString(), \"T|0|\" + description + \"\\n\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "                \"testing encoding of default todo task\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 19
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "abc"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangJiaDa"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "PangJiaDa": 22
    }
  }
]
