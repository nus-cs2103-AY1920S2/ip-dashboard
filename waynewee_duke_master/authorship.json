[
  {
    "path": ".txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "FUCK"
      }
    ],
    "authorContributionMap": {
      "waynewee": 1
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `FileManager` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "waynewee": 1,
      "-": 38
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 28,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DialogBox( String text, ImageView img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader( MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPicture.setImage( img.getImage() );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static DialogBox getUserDialog( String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        ImageView imgView \u003d new ImageView();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        imgView.setImage( img );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DialogBox UserDialogBox \u003d new DialogBox(text, imgView );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        UserDialogBox.getStyleClass().add(\"dialog-container-user\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        UserDialogBox.dialog.getStyleClass().add(\"dialog-label-user\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return UserDialogBox;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static DialogBox getDukeDialog( String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        ImageView imgView \u003d new ImageView();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        imgView.setImage( img );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DialogBox DukeDialogBox \u003d new DialogBox(text, imgView);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DukeDialogBox.getStyleClass().add(\"dialog-container-duke\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DukeDialogBox.dialog.getStyleClass().add(\"dialog-label-duke\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DukeDialogBox.dialog.setTextFill( Color.web(\"#fff\") );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DukeDialogBox.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return DukeDialogBox;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 79
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Utils.Bot;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Utils.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Duke Program for CS2103T 2020."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "         * initialize variables"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Bot bot \u003d new Bot();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        boolean finished \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        ui.enter();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        while ( !finished ){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String input \u003d ui.sc.nextLine().toLowerCase().trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                if( Ui.isFinished(input)  ){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    finished \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    bot.res(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    Ui.printDivider();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch( DukeException e ){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * The main method."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param args args"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void start( Stage stage ) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "//        scene.getStylesheets().add(\"/view/MainWindow.css\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scene.getStylesheets().addAll("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                \"/view/MainWindow.css\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                \"/view/DialogBox.css\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Bot bot \u003d new Bot();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String dukeText \u003d \"\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( userText.equals( \"bye\" ) ){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                dukeText \u003d \"Bye Bitch.\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                System.exit( 0 );"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                dukeText \u003d bot.res(userText);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            );"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DukeException e ){"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    DialogBox.getDukeDialog( e.toString(), duke )"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            );"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 213,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 10
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void setDuke( Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public MainWindow _getClass(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return MainWindow.this;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 53
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Deadline( String desc, int index, DukeDate date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super( desc, index, date );"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return index + \".\" + \"[D]\" + super.toString() + \" (by: \" + date.getDateString() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 13
    }
  },
  {
    "path": "src/main/java/Task/DukeDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeDate {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    String dateString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeDate( LocalDate date ) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.dateString \u003d convertToString( date );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeDate( String dateString ) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d convertToDate( dateString );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * converts String to LocalDate object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param dateString"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return LocalDate object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static LocalDate convertToDate(String dateString){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return LocalDate.parse(dateString, DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * converts LocalDate object to String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param date LocalDate object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return date string in format YYYY-MM-DD"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static String convertToString(LocalDate date){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * getter for LocalDate object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return LocalDate object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * getter for datestring"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return dateString"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getDateString(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.dateString;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 56
    }
  },
  {
    "path": "src/main/java/Task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    String err;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeException( String err ){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.err \u003d err;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return \"I was unable to complete your request due to this exception, sir:\\n \" + this.err;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 19
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Event(String desc, int index, DukeDate date){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(desc, index, date);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return index + \".\" + \"[E]\" + super.toString() + \" (at: \" + date.getDateString() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 14
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String content;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task ( String content, int index, DukeDate date ) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task( String content, int index ) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String done \u003d this.done?\"Y\": \"N\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return \"[\" + done + \"] \" + this.content;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * marks task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 39
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public TaskList( String data ) throws DukeException{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        restoreFromExisting( data );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void restoreFromExisting ( String data ) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] dataArray \u003d data.split(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for( String line : dataArray ){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d Parser.parseTask( line, i );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            list.add( task );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void saveList() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for ( Task task : this.list ){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            data +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Storage.writeToFile( data );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printTasks(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( this.list.size() \u003d\u003d 0 ){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res \u003d \"You have no tasks in your list.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d \"Here are your tasks sir:\\n\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            for( Task task: list ){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                res +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printTasksOn(String req) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Parser parser \u003d new Parser(req);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            DukeDate date \u003d new DukeDate(parser.getDateString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d \"Here are your tasks for \" + date.getDateString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            for( Task task: list ){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                if(task.date !\u003d null \u0026\u0026 task.date.getDateString().equals(date.getDateString())){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    res +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DateTimeParseException e ) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(\"Date must be in the form YYYY-MM-DD!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * deletes task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskIndex index of task to be deleted"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException if no task found for index"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String deleteTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d list.get(taskIndex - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d \"Noted. I\u0027ve removed this task:\\n\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.list.remove(task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.saveList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d \"\\nNow you have \" + list.size() + \" task(s) in the list\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(\"No task found for index \" + taskIndex + \"!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * adds task to list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param req user input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException if no date"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String addTask(String req) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Parser parser \u003d new Parser(req);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        int index \u003d this.list.size() + 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String content \u003d parser.getContent();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        switch( command ) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                DukeDate date \u003d new DukeDate(parser.getDateString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                task \u003d new Event( content, index, date );"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                date \u003d new DukeDate(parser.getDateString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                task \u003d new Deadline(content, index, date);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                task \u003d new Todo( content, index );"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.list.add( task );"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.saveList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        res +\u003d task.content;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String findTask(String req){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Parser parser \u003d new Parser(req);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String searchTerm \u003d parser.getContent();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Pattern p \u003d Pattern.compile( searchTerm );"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        boolean isFound \u003d false;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for ( Task task : list ){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String[] wordArray \u003d task.content.split(\" \");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            for (String word : wordArray ){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                Matcher m \u003d p.matcher( word.trim() );"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                if( m.matches() ){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    res +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( isFound ){"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"Here\u0027s what I found my lord\\n\\n:\" + res;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I couldn\u0027t find anything my lord. I\u0027ll try looking for it again.\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * marks task as done"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskIndex index of task to be marked as done"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String markTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String res \u003d \"\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d this.list.get(taskIndex - 1);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            res +\u003d task.toString();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            saveList();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(\"Task.Task Index is invalid\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 231
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Todo(String desc, int index){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(desc, index);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return index + \".\" +\"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 15
    }
  },
  {
    "path": "src/main/java/Utils/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Bot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Bot(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.taskList \u003d new TaskList(Storage.loadFromFile());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DukeException e ){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * switches on command and decides what is printed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param req user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String res(String req) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Parser parser \u003d new Parser(req);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch( command ){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.printTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \"date\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.printTasksOn(req);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.findTask( req );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Optional\u003cInteger\u003e indexOptional \u003d parser.getContentAsInt();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( indexOptional.isPresent() ){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                index \u003d indexOptional.get();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch( command ) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.markTask(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "//                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.deleteTask(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "//                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.addTask(req);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException( \"Invalid command!\" );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waynewee": 80
    }
  },
  {
    "path": "src/main/java/Utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Utils.Parser"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Each input starts with a COMMAND, followed by the CONTENT and optionally, the DATE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Parser( String input ){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets command, first word of input string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getCommand(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return input.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets content, removes command and everything after slash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return content"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getContent(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] splitArray \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( splitArray.length \u003c 2 ){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return input.substring(getCommand().length() + 1).trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return input.substring( getCommand().length() + 1 ).split(\"/\")[0].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets dateString"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return dateString"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getDateString(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] splitArray \u003d  input.split(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if (splitArray.length \u003c 2){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return splitArray[1].split(\" \")[1].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * if content is integer, cast content to integer"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return content as integer"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Optional\u003cInteger\u003e getContentAsInt(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Integer contentAsInt;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            contentAsInt \u003d Integer.parseInt(String.valueOf(getContent()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Optional.of(contentAsInt);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( NumberFormatException e ){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * parses line to derive task arguments"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param line line to be parsed"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static Task parseTask(String line, int index) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            //get type"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            char taskChar \u003d line.charAt(3);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            char doneChar \u003d line.charAt(6);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String subString \u003d line.substring(8);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String dateString \u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( subString.split(\":\").length \u003e 1 ){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                dateString \u003d subString.split(\":\")[1].substring(0, subString.split(\":\")[1].length() - 1).trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch (taskChar){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    String content \u003d subString.trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d new Todo(content, index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    content \u003d subString.split(\"\\\\(\")[0].trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d  new Deadline(content, index, new DukeDate(dateString));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    content \u003d subString.split(\"\\\\(\")[0].trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d  new Event(content, index, new DukeDate(dateString));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( doneChar \u003d\u003d \u0027Y\u0027 ){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( StringIndexOutOfBoundsException e ){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException( \"Invalid Command!\" );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 129
    }
  },
  {
    "path": "src/main/java/Utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    static final String dirname \u003d \"./data\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    static final String pathname \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Storage(){}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * loads file and returns contents"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return data string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException error reading file or no file exists"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static String loadFromFile() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            FileReader fileReader \u003d new FileReader(pathname);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            System.out.println(\"Existing file found, loading...\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String data \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                while (( i \u003d fileReader.read()) !\u003d -1){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    data +\u003d (char)i;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                System.out.println(data);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                return data;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch ( IOException e ){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException(\"Error reading file!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( FileNotFoundException e ) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(\"No existing file!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Writes to a file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param data long string separated by newline character"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException error writing or closing file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void writeToFile( String data ) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //make directory"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        File dir \u003d new File(dirname);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dir.mkdir();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        File saveFile \u003d new File(pathname);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fileWriter.write(data);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(\"Error writing to file. Your changes were not saved.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch ( IOException e ) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException(\"Error closing file\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 79
    }
  },
  {
    "path": "src/main/java/Utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * prints line"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void printDivider(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        System.out.println(\"-------------------------------------------------------------\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Checks if user is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return whether input is bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static boolean isFinished(String input){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Says farewell to user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void exit(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        System.out.println(\"It was a pleasure to serve you my lord. Check in again anytime.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void enter(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        System.out.println(\"Good day master. How may I be of service today?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 42
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#000\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waynewee": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waynewee": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Utils.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            markTaskAsDoneTest();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            addToListTest();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            parseSavedLineTest();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void addToListTest() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        taskList.addTask(\"todo go home\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        taskList.addTask(\"deadline duke project /by 2020-01-31\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        taskList.addTask(\"event no sleep /at 2020-01-30\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.list.get(0).toString(), \"1.[T][N] go home\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.list.get(1).toString(), \"2.[D][N] duke project (by: 2020-01-31)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.list.get(2).toString(), \"3.[E][N] no sleep (at: 2020-01-30)\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void markTaskAsDoneTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Task task \u003d new Task(\"Homework\", 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals(task.toString(), \"[Y] Homework\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void parseSavedLineTest(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String line \u003d \"2.[D][N] duke project (by: 2020-01-31)\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Task task \u003d Parser.parseTask(line, 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( task.toString(), line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 55
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Hi! How may I help you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "suck cock"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "finsih hmwk"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "party"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "1.[T][N] suck cock"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "2.[D][N] finsih hmwk(by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "3.[E][N] party(at: 11pm)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Catch you later!"
      }
    ],
    "authorContributionMap": {
      "waynewee": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "todo suck cock"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "deadline finsih hmwk /by 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "event party /at 11pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "waynewee": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "waynewee": 21
    }
  }
]
