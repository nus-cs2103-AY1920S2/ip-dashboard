[
  {
    "path": ".txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "FUCK"
      }
    ],
    "authorContributionMap": {
      "waynewee": 1
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `FileManager` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Frontend.Main Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Frontend.Main][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "waynewee": 3,
      "-": 36
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveVersion \u003d \"2.0.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 23,
      "-": 19
    }
  },
  {
    "path": "docs/index.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "_**The task management tool for every busy professional**_"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "[![DUKE GENERIC SCREENSHOT](https://raw.githubusercontent.com/waynewee/duke/master/screenshots/generic.png)]()"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003e Overwhelmed by the extensive features? The following materials might help:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "1. [Installation](#installation)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "2. [Features](#features)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "3. [Commands](#commands)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "4. [Team](#team)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "5. [Support](#support)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "---"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "## Installation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Download the .jar file from the \u003ca href\u003d\"https://github.com/waynewee/duke/releases\"\u003erelease page\u003c/a\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Create a directory or use an existing directory to store the downloaded file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Double-click the file to get started!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "---"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003e Your wish is my command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Manage your tasks from **anywhere**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Tasks are saved to your computer periodically to ensure **no data is lost**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- **Keep track** of the tasks you\u0027ve completed and the tasks you\u0027ve yet to give attention to"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Commands are **simple and intuitive**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Easily **search** for and retrieve tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "---"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "### Basic"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `todo {task_name}` - adds `task_name` to the list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `event {task_name} /at {task_date}` - adds `task_name` as an event and specifies that it occurs at `task_date`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `deadline {task_name} /by {task_date}` - adds `task_name` as a deadline and specifies that it is due on `task_date`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `done {task_index}` - marks the task at `task_index` as done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `delete {task_index}` - deletes the task at `task_index`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `list` - lists all tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `find {search_term}` - searches for tasks that contain `search_term`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `date /on {date}` - searches for tasks that occur on or are due by `date`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `exit` - exits the application"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "### Advanced"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `history` - prints out the list of past commands _(Max: 20)_"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `rm {task_index}` - deletes the task at `task_index`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `ls` - lists all tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- `grep {search_term}` - searches for tasks that contain `search_term`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- \u003ckbd\u003ekeyup\u003c/kbd\u003e - cycles through the command history"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- \u003ckbd\u003ectrl\u003c/kbd\u003e+\u003ckbd\u003ec\u003c/kbd\u003e - clears the input box"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- \u003ckbd\u003ectrl\u003c/kbd\u003e+\u003ckbd\u003ed\u003c/kbd\u003e - exits the application"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "---"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "## Team"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003e Developed by Wayne Wee"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": " [![FVCproductions](https://avatars1.githubusercontent.com/u/34233605?s\u003d200\u0026v\u003d4)](http://github.com/waynewee)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- As part of \u003ca href\u003d\"https://nus-cs2103-ay1920s2.github.io/website/\"\u003eCS2103T Software Engineering\u003c/a\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Do also check out my company \u003ca href\u003d\"https://eezee.sg\"\u003eeezee.sg\u003c/a\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "---"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "## Support"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Reach out to me at one of the following places!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "- Email at \u003ca href\u003d\"mailto:e0202795@u.nus.edu.sg\" target\u003d\"_blank\"\u003e`e0202795@u.nus.edu.sg`\u003c/a\u003e"
      }
    ],
    "authorContributionMap": {
      "waynewee": 73,
      "-": 1
    }
  },
  {
    "path": "help.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Duke v1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "The user manual can be found at https://github.com/waynewee/duke/wiki/Duke-User-Guide."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Copy and paste this url or click the link at the bottom left of this window."
      }
    ],
    "authorContributionMap": {
      "waynewee": 5
    }
  },
  {
    "path": "src/main/java/Backend/Cache.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Cache {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private final int MAX \u003d 20;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Deque\u003cString\u003e userInputHistory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Caches minimal data needed during the runtime of the app."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * For the user input history, uses a double-ended queue data structure."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Cache(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInputHistory \u003d new ArrayDeque\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Adds a user input string into a list of user input strings."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * If queue is at maximum capacity, remove the last element of the queue and enqueue the current user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param userInput most recent user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void addUserInput( String userInput ){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if (userInputHistory.size() \u003e\u003d MAX) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInputHistory.pollLast();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInputHistory.offerFirst(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Converts the user input history to an array and returns the element at specified index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param index index of the element to be retrieved"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return element of the queue at specified index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getUserInputHistory( int index ){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Object[] arr \u003d userInputHistory.toArray();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return (String) arr[index];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public int getUserInputHistorySize(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return userInputHistory.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Pretty-prints the user input history."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return pretty-printed string of the user input history"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printUserInputHistory(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Object[] arr \u003d userInputHistory.toArray();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        StringBuilder userInputHistoryString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for( int i \u003d arr.length - 1; i \u003e 0; i-- ){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInputHistoryString.append( i ).append(\". \").append( arr[i] ).append( \"\\n\" );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return userInputHistoryString.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 65
    }
  },
  {
    "path": "src/main/java/Backend/Constants/AdvCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class AdvCommands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DELETE \u003d \"rm\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String LIST \u003d \"ls\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String FIND \u003d \"grep\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 7
    }
  },
  {
    "path": "src/main/java/Backend/Constants/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String DATE \u003d \"date\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String HISTORY \u003d \"history\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 18
    }
  },
  {
    "path": "src/main/java/Backend/Constants/DateFormats.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class DateFormats {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String NOON_STRING \u003d \"12:00\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String EVENING_STRING \u003d \"19:00\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 7
    }
  },
  {
    "path": "src/main/java/Backend/Constants/FilePaths.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class FilePaths {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DATA_DIRNAME \u003d \"./data\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DATA_PATHNAME \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String HELP_PATHNAME \u003d \"help.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 7
    }
  },
  {
    "path": "src/main/java/Backend/Constants/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String GOOD_MORNING_MSG \u003d \"Good morning sir. Hope you slept well.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String GOOD_AFTERNOON_MSG \u003d \"Good afternoon sir. Had your lunch?\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String GOOD_EVENING_MSG \u003d \"Good evening sir. Hope you had a great day.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String EXIT_MSG \u003d \"I\u0027ll be here eagerly waiting your arrival. Goodbye.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String BYE_MSG \u003d \"If you really have to leave sir, please type \u0027exit\u0027.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String NOT_FOUND_MSG \u003d \"I looked long and hard but couldn\u0027t find what you were looking for. A different search term perhaps?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String FOUND_MSG \u003d \"Here\u0027s what you were looking for sir:\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String MARK_AS_DONE_MSG \u003d \"Great job sir!\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String TASK_ALREADY_DONE_MSG \u003d \"This task was already completed sir.\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String ADDED_TASK_MSG \u003d \"Nicely done sir. I\u0027ve added your task.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String REMOVED_TASK_MSG \u003d \"I assume you\u0027ve completed this sir... I\u0027ve removed it from the list.\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String NO_TASKS_MSG \u003d \"You currently have no tasks sir.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String LIST_TASKS_MSG \u003d \"Here are your tasks sir:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String ERROR_MSG \u003d \"I was unable to complete your request due to this exception, sir:\\n \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public final static String HELP_MSG \u003d \"Duke v1.0\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            \"\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            \"The user manual can be found at https://github.com/waynewee/duke/wiki/Duke-User-Guide.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            \"\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            \"Copy and paste this url or click the link at the bottom left of this window.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 23
    }
  },
  {
    "path": "src/main/java/Backend/Constants/TaskChars.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class TaskChars {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final char DONE_CHAR \u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final char UNDONE_CHAR \u003d \u0027N\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final char TODO_CHAR \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final char EVENT_CHAR \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final char DEADLINE_CHAR \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 11
    }
  },
  {
    "path": "src/main/java/Backend/DynamicMessenger.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.TimeOfDay;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * A utility class for dynamic messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DynamicMessenger {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayHello(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            TimeOfDay timeOfDay \u003d  DateParser.getTimeOfDay();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch ( timeOfDay ){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case MORNING:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return Messages.GOOD_MORNING_MSG;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case AFTERNOON:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return Messages.GOOD_AFTERNOON_MSG;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case EVENING:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return Messages.GOOD_EVENING_MSG;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayHelp() throws DukeException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.HELP_MSG;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayMarkedTaskAsDone( Task task ){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.MARK_AS_DONE_MSG + task.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayTaskAlreadyDone( Task task ){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.TASK_ALREADY_DONE_MSG + task.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayAddedTask( Task task ){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.ADDED_TASK_MSG + task.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayRemovedTask( Task task ){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.REMOVED_TASK_MSG + task.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        public static String sayTaskList( List\u003cTask\u003e list ){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( list.size() \u003d\u003d 0 ){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                return Messages.NO_TASKS_MSG;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                str.append( Messages.LIST_TASKS_MSG );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                for( Task task: list ){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    str.append( task.toString() ).append( \"\\n\" );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                return str.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 67
    }
  },
  {
    "path": "src/main/java/Backend/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    String errorMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    Exception e;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeException( Exception e ){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String errorMsg \u003d getErrorMsg();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.e \u003d e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return Messages.ERROR_MSG + errorMsg;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getErrorMsg(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( e instanceof StringIndexOutOfBoundsException ) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I\u0027m afraid I am currently not equipped to handle that task sir.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if( e instanceof  IndexOutOfBoundsException ){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I don\u0027t think that exists sir.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if( e instanceof DateTimeParseException ){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"The date you gave was familiar... but could you perhaps format it as YYYY-MM-DD?\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if( e instanceof FileNotFoundException ){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I couldn\u0027t find the file I was supposed to sir. I\u0027ll try again tomorrow.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if( e instanceof IOException){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I lost the tasks you gave me sir. My resignation will be on your table shortly.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if( e instanceof URISyntaxException ){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"I couldn\u0027t secure you access to that sir. My apologies.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"Something went wrong and I\u0027m not sure what\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 50
    }
  },
  {
    "path": "src/main/java/Backend/Objects/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Objects.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.TaskChars;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Deadline( String content, DateParser date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super( content, date, TaskChars.DEADLINE_CHAR );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return super.toString() + \" (by: \" + date.getDateString() + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 16
    }
  },
  {
    "path": "src/main/java/Backend/Objects/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Objects.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.TaskChars;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Event(String content, DateParser date){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(content, date, TaskChars.EVENT_CHAR );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return super.toString() + \" (at: \" + date.getDateString() + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 17
    }
  },
  {
    "path": "src/main/java/Backend/Objects/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Objects.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.TaskChars;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String content;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public boolean done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DateParser date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private char taskChar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task( String content, DateParser date, char taskChar ) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.taskChar \u003d taskChar;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected Task( String content, char taskChar ){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.taskChar \u003d taskChar;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void indexTask( int index ){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        char done \u003d this.done? TaskChars.DONE_CHAR : TaskChars.UNDONE_CHAR;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return index + \". [\" + taskChar + \"]\" + \"[\" + done + \"] \" + this.content;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * marks task as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 44
    }
  },
  {
    "path": "src/main/java/Backend/Objects/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Objects.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.TaskChars;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Todo(String content){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(content, TaskChars.TODO_CHAR);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 11
    }
  },
  {
    "path": "src/main/java/Backend/Parsers/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.DateFormats;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Creates a DateParser object given a LocalDate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param date - LocalDate object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DateParser( LocalDate date ) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.dateString \u003d convertToString( date );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Creates a DateParser object given a string. This reduces the need for repeated conversion."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param dateString string in format YYYY-MM-DD"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DateParser( String dateString ) throws DukeException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.date \u003d convertToDate( dateString );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Converts a string to LocalDate object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param dateString string in format YYYY-MM-DD"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return LocalDate object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static LocalDate convertToDate(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return LocalDate.parse(dateString, DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DateTimeParseException e ){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException( e );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Converts LocalDate object to String"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param date LocalDate object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return string in format YYYY-MM-DD"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static String convertToString(LocalDate date){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets LocalDate object"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return LocalDate object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets date string"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return string in format YYYY-MM-DD"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getDateString(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.dateString;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets the timeOfDay enum depending on the LocalDateTime."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Takes the current time and compares it with two other times set as NOON and EVENING."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * If current time is before NOON, it is MORNING."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * If current time is after EVENING it is NIGHT."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Otherwise, it is AFTERNOON."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return enum timeOfDay"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static TimeOfDay getTimeOfDay(){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern( DateFormats.DATE_TIME_FORMAT );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String nowString \u003d now.format(formatter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String dateString \u003d nowString.split(\" \")[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        LocalDateTime noon \u003d LocalDateTime.parse(dateString + \" \" + DateFormats.NOON_STRING, formatter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        LocalDateTime night \u003d LocalDateTime.parse( dateString + \" \" + DateFormats.EVENING_STRING, formatter);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assert( noon.isBefore( night ));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( now.isBefore( noon )){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return TimeOfDay.MORNING;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else if ( now.isAfter( night ) ){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return TimeOfDay.EVENING;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return TimeOfDay.AFTERNOON;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 104
    }
  },
  {
    "path": "src/main/java/Backend/Parsers/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.TaskChars;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Parser( String input ){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets a command word based on a given input string. The command is the first word of the string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a string representing a command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String parseCommand(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return input.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets the content of a given input string. The content is everything in the string apart from"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * the command and the date string (if present)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a string representing the content of the input string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String parseContent(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] splitArray \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( splitArray.length \u003c 2 ){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return input.substring(parseCommand().length() + 1).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return input.substring( parseCommand().length() + 1 ).split(\"/\")[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets the date as inputted by the user. The only valid format for this date string is YYYY-MM-DD."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a date string in the format YYYY-MM-DD"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String parseDateString(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] splitArray \u003d  input.split(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if (splitArray.length \u003c 2){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return splitArray[1].split(\" \")[1].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets the content of an input string and, if the content consists of only integers, converts the string to an Optional Integer."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * This methods handles commands that deal with task indices."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return an integer representing a task index"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Optional\u003cInteger\u003e parseContentAsInt(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Integer contentAsInt;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            contentAsInt \u003d Integer.parseInt(String.valueOf(parseContent()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Optional.of(contentAsInt);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( NumberFormatException e ){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Parses a saved task string to retrieve the content, type of task and date string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Also creates a task object from the values parsed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param line a line representing a saved task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param index the index of the line that is parsed"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static Task parseSavedTask( String line, int index) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            //get type"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            char taskChar \u003d line.charAt(4);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            char doneChar \u003d line.charAt(7);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String subString \u003d line.substring(9);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String dateString \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( subString.split(\":\").length \u003e 1 ){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                dateString \u003d subString.split(\":\")[1].substring(0, subString.split(\":\")[1].length() - 1).trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch (taskChar){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case TaskChars.TODO_CHAR:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    String content \u003d subString.trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d new Todo(content);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case TaskChars.DEADLINE_CHAR:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    content \u003d subString.split(\"\\\\(\")[0].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d  new Deadline(content, new DateParser(dateString));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case TaskChars.EVENT_CHAR:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    content \u003d subString.split(\"\\\\(\")[0].trim();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    task \u003d  new Event(content, new DateParser(dateString));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    throw new DukeException( new IOException() );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            task.indexTask( index );"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( doneChar \u003d\u003d TaskChars.DONE_CHAR ){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( StringIndexOutOfBoundsException e ){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 135
    }
  },
  {
    "path": "src/main/java/Backend/Parsers/TimeOfDay.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend.Parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public enum TimeOfDay {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    MORNING,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    AFTERNOON,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    EVENING"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 7
    }
  },
  {
    "path": "src/main/java/Backend/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.FilePaths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Storage(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static String loadDataFromFile() throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return loadFromFile( FilePaths.DATA_PATHNAME );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static String loadHelpFromFile() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return loadFromFile( FilePaths.HELP_PATHNAME );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void writeDataToFile( String data ) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        writeToFile( data );"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * loads data from a file and converts it to a string of data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a string of data to be parsed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private static String loadFromFile(String pathname) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            FileReader fileReader \u003d new FileReader(pathname);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            System.out.println(\"Existing file found, loading...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                while (( i \u003d fileReader.read()) !\u003d -1){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    data.append( (char) i );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                return data.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch ( IOException e ){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( FileNotFoundException e ) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Writes data to a file stored in a directory."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * If directory specified by the directory name does not exist, makes a directory."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * If file does not exist, creates a file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param data string of data to be written."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private static void writeToFile( String data ) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //make directory"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        File dir \u003d new File( FilePaths.DATA_DIRNAME );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dir.mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        File saveFile \u003d new File( FilePaths.DATA_PATHNAME );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fileWriter.write(data);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                assert fileWriter !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch ( IOException e ) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 88
    }
  },
  {
    "path": "src/main/java/Backend/Switcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.AdvCommands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Commands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Switcher {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Cache cache;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Contains the logic required to interpret commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskList the task list instantiated in the main function"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param cache the cache instantiated in the main function"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Switcher( TaskList taskList, Cache cache ){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.cache \u003d cache;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Decides what action is to be executed based on the user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Contains two switches. First switch deals with commands that do not manipulate the data while the second deals with commands"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * that manipulate the data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param req request of the user from a frontend component"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a string representing the reply to the user containing the relevant requested information"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String res(String req) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( req.equals( Commands.EXIT )){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.EXIT_MSG;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( req.equals(Commands.BYE) ){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.BYE_MSG;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "         * Prints what is requested and does no data manipulation"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "         */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Parser parser \u003d new Parser(req);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String command \u003d parser.parseCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch( command ){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.HISTORY:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return cache.printUserInputHistory();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.HELP:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return DynamicMessenger.sayHelp();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.LIST:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case AdvCommands.LIST:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.printTasks();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.DATE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    DateParser date \u003d new DateParser(parser.parseDateString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.printTasksByDate(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.FIND:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case AdvCommands.FIND:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    String searchTerm \u003d parser.parseContent();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return taskList.printTasksBySearchTerm(searchTerm);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Optional\u003cInteger\u003e indexOptional \u003d parser.parseContentAsInt();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( indexOptional.isPresent() ){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                index \u003d indexOptional.get();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "             * Manipulates the data"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "             */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switch( command ) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.DONE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    Task taskToBeMarked \u003d taskList.getTask( index );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    if( taskToBeMarked.done ){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        return DynamicMessenger.sayTaskAlreadyDone( taskToBeMarked );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        taskToBeMarked \u003d taskList.markTask( index );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        return DynamicMessenger.sayMarkedTaskAsDone( taskToBeMarked );"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case Commands.DELETE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                case AdvCommands.DELETE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    Task removedTask \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return DynamicMessenger.sayRemovedTask(removedTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    String content \u003d parser.parseContent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    switch( command ) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        case Commands.EVENT:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            task \u003d new Event( content, new DateParser(parser.parseDateString() ));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        case Commands.DEADLINE:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            task \u003d new Deadline(content, new DateParser(parser.parseDateString()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        case Commands.TODO:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            task \u003d new Todo( content );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                            throw new DukeException( new StringIndexOutOfBoundsException()  );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    taskList.addTask(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    return DynamicMessenger.sayAddedTask( task );"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                throw new DukeException(e);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "waynewee": 139
    }
  },
  {
    "path": "src/main/java/Backend/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Backend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Constants.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.DateParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Parses a string of data into separate tasks and loads up the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param data data string to be parsed into tasks and loaded into the task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @throws DukeException exception rethrown from parseTask"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void loadTasks ( String data ) throws DukeException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String[] dataArray \u003d data.split(\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for( String line : dataArray ) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d Parser.parseSavedTask( line, i );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            list.add( task );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Saves a list of tasks as lines in a file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Each task is written to a file that can be loaded from upon restarting the app."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void saveList() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for ( Task task : this.list ){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            data.append( task.toString() ).append( \"\\n\" );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Storage.writeDataToFile( data.toString() );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public List\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Gets the task in the list by its index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskIndex the number the task is indexed as to the user, not the actual index of the task in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return the task at index - 1 in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task getTask( int taskIndex ){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return list.get(taskIndex - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printTasks(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return DynamicMessenger.sayTaskList( list );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Prints the task list by streaming the list through a date filter."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param date the date to filter the tasks by"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a pretty-printed string of the tasks, filtered by date, in the task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printTasksByDate(DateParser date) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            List\u003cTask\u003e filteredTaskList \u003d list.stream()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            .filter( task -\u003e task.date !\u003d null \u0026\u0026 task.date.getDateString().equals(date.getDateString()))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return DynamicMessenger.sayTaskList( filteredTaskList );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DateTimeParseException e ) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Prints the task list by streaming the list through a search term filter."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * A task is determined to match if the search term matches one or more words in the task\u0027s content."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param searchTerm the search term to filter the tasks by."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return a pretty-printed string of the tasks, filtered by search term, in the task list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String printTasksBySearchTerm( String searchTerm ){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Pattern p \u003d Pattern.compile( searchTerm );"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        List\u003cTask\u003e filteredTaskList \u003d list.stream()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                        .filter( task -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            String[] wordArray \u003d task.content.split(\" \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            boolean isMatch \u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            for (String word : wordArray ){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                                Matcher m \u003d p.matcher( word.trim() );"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                                isMatch \u003d m.matches();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                            return isMatch;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                        })"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                                        .collect( Collectors.toList());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( filteredTaskList.size() \u003d\u003d 0 ){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return Messages.NOT_FOUND_MSG;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return DynamicMessenger.sayTaskList( filteredTaskList );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Deletes a task from the task list by its index."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskIndex the number the task is indexed as to the user, not the actual index of the task in the list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return the task that was deleted."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task deleteTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d list.get(taskIndex - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.list.remove(task);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.reindexList();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            this.saveList();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Re-indexes a list to ensure that each task is indexed consecutively."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void reindexList(){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        for( Task task: list ){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            task.indexTask( index );"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void addTask(Task task) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        task.indexTask( this.list.size() + 1 );"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.list.add( task );"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.saveList();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Marks a task as done by its index."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param taskIndex the number the task is indexed as to the user, not the actual index of the task in the list."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @return the task that was marked as done"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Task markTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            Task task \u003d this.list.get(taskIndex - 1);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            saveList();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch( IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 207
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DialogBox/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components.DialogBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Components.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Objects.User;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Title: JavaFX Tutorial"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Author: Jeffry Lum, Damith C. Rajapakse"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Availability: https://github.com/se-edu/duke/blob/master/tutorials"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public abstract class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected HBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected Circle displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected StackPane displayPictureContainer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DialogBox( User user) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader( MainWindow.class.getResource( Styles.DIALOG_BOX_FXML ));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.setPrefWidth( Styles.DIALOG_CONTAINER_WIDTH );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPictureContainer.setAlignment( Styles.DISPLAY_PICTURE_CONTAINER_ALIGNMENT );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPicture.setRadius( Styles.DISPLAY_PICTURE_RADIUS );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setText( user.getText() );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setBackground( new Background( new BackgroundFill( Styles.COLOR_WHITE, Styles.DIALOG_RADIUS, Styles.DIALOG_MARGIN ) ) );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setPadding( Styles.DIALOG_PADDING );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setAlignment( Styles.DIALOG_ALIGNMENT );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setTextFill( Styles.COLOR_BLACK );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setWrapText( Styles.DIALOG_WRAP_TEXT );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    protected void flip(){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.setAlignment( Pos.TOP_RIGHT );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 68
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DialogBox/DukeDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components.DialogBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Objects.User;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeDialogBox extends DialogBox {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeDialogBox( User user ){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPictureContainer.setPadding( Styles.DISPLAY_PICTURE_PADDING );"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPicture.setStroke( Styles.COLOR_TRANSPARENT );"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPicture.setFill( new ImagePattern( user.getImage() ) );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 16
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DialogBox/UserDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components.DialogBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Objects.User;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class UserDialogBox extends DialogBox {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public UserDialogBox( User user ){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super( user );"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setBackground( new Background( new BackgroundFill( Styles.COLOR_BLUE, Styles.DIALOG_RADIUS, Styles.DIALOG_MARGIN ) ) );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialog.setTextFill( Styles.COLOR_WHITE );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayPicture.setVisible( Styles.DISPLAY_PICTURE_USER_VISIBLE );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        flip();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 19
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DialogContainer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Components.DialogBox.DialogBox;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DialogContainer extends VBox {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DialogContainer(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPrefHeight( Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void addChild( DialogBox dialogBox ){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.getChildren().add(dialogBox);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 15
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DukeAnchorPane.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeAnchorPane extends AnchorPane {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    DukeScrollPane scrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    DukeInput input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    SendButton button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    DukeLink link;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeAnchorPane("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            DukeScrollPane scrollPane,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            DukeInput input,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            SendButton button,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            DukeLink link"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    ){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPrefSize( Styles.ANCHOR_PANE_WIDTH, Styles.ANCHOR_PANE_HEIGHT );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.scrollPane \u003d scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.button \u003d button;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.link \u003d link;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.getChildren().addAll( scrollPane, input, button, link );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setTopAnchor(scrollPane, Styles.SCROLL_PANE_TOP_ANCHOR );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setBottomAnchor(button, Styles.BUTTON_BOTTOM_ANCHOR );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setRightAnchor(button, Styles.BUTTON_RIGHT_ANCHOR );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setBottomAnchor( link, Styles.LINK_BOTTOM_ANCHOR );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setLeftAnchor(input , Styles.INPUT_LEFT_ANCHOR );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setBottomAnchor(input, Styles.INPUT_BOTTOM_ANCHOR );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 40
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DukeInput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeInput extends TextField {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeInput(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPrefWidth( Styles.INPUT_WIDTH );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 12
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DukeLink.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Hyperlink;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeLink extends Hyperlink{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    String url;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    String title;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeLink( String title, String url ){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.url \u003d url;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void openLink() throws DukeException{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            URI uri \u003d new URI(url);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            java.awt.Desktop.getDesktop().browse(uri);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (IOException | URISyntaxException e ){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            throw new DukeException( e );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 32
    }
  },
  {
    "path": "src/main/java/Frontend/Components/DukeScrollPane.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeScrollPane extends ScrollPane {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public DukeScrollPane( DialogContainer container ){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setContent( container );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPrefSize( Styles.SCROLL_PANE_WIDTH, Styles.SCROLL_PANE_HEIGHT );"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setHbarPolicy( Styles.SCROLL_PANE_SCROLL_X );"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setVbarPolicy( Styles.SCROLL_PANE_SCROLL_Y );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPadding( Styles.SCROLL_PANE_PADDING );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setVvalue( Styles.SCROLL_PANE_VVALUE );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setFitToWidth( Styles.SCROLL_PANE_FIT_TO_WIDTH );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 21
    }
  },
  {
    "path": "src/main/java/Frontend/Components/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Controller for Frontend.Components.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Title: JavaFX Tutorial"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Author: Jeffry Lum, Damith C. Rajapakse"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Availability: https://github.com/se-edu/duke/blob/master/tutorials"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void handleUserInput( ActionEvent actionEvent ) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 32
    }
  },
  {
    "path": "src/main/java/Frontend/Components/SendButton.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Config;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class SendButton extends Button {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public SendButton(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        super( Config.SEND_BUTTON_TEXT );"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setStyle(\"-fx-background-color: #0066e3; -fx-text-fill: #fff; -fx-cursor: hand;\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.setPrefWidth( Styles.BUTTON_WIDTH );"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 16
    }
  },
  {
    "path": "src/main/java/Frontend/Constants/Config.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class Config {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String APP_TITLE \u003d \"Duke v2.0\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DUKE_IMG_PATH \u003d \"/images/DaDuke.png\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String EXIT_CMD \u003d \"exit\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final int EXIT_DELAY \u003d 500;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String SEND_BUTTON_TEXT \u003d \"Send\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String LINK_TEXT \u003d \"User Guide\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String LINK_URL \u003d \"https://waynewee.github.io/duke\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String USER_EMPTY_TEXT \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 19
    }
  },
  {
    "path": "src/main/java/Frontend/Constants/Styles.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Constants;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public final class Styles {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Styles() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double STAGE_MIN_HEIGHT \u003d 600.0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double STAGE_MIN_WIDTH \u003d 400.0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double ANCHOR_PANE_WIDTH \u003d STAGE_MIN_WIDTH;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double ANCHOR_PANE_HEIGHT \u003d STAGE_MIN_HEIGHT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double SCROLL_PANE_HEIGHT \u003d STAGE_MIN_HEIGHT - 27;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double SCROLL_PANE_WIDTH \u003d STAGE_MIN_WIDTH;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double SCROLL_PANE_TOP_ANCHOR \u003d 1.0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final ScrollPane.ScrollBarPolicy SCROLL_PANE_SCROLL_X \u003d ScrollPane.ScrollBarPolicy.NEVER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final ScrollPane.ScrollBarPolicy SCROLL_PANE_SCROLL_Y \u003d ScrollPane.ScrollBarPolicy.ALWAYS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Insets SCROLL_PANE_PADDING \u003d new Insets(0, 0, 20, 0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double SCROLL_PANE_VVALUE \u003d 1.0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final boolean SCROLL_PANE_FIT_TO_WIDTH \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double INPUT_WIDTH \u003d 335.0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double INPUT_LEFT_ANCHOR \u003d 1.0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double INPUT_BOTTOM_ANCHOR \u003d 1.0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double BUTTON_WIDTH \u003d STAGE_MIN_WIDTH - INPUT_WIDTH;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double BUTTON_BOTTOM_ANCHOR \u003d 1.0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double BUTTON_RIGHT_ANCHOR \u003d 1.0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double LINK_BOTTOM_ANCHOR \u003d 27.5;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final double DIALOG_CONTAINER_WIDTH \u003d STAGE_MIN_WIDTH;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final String DIALOG_BOX_FXML \u003d \"/view/DialogBox.fxml\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final CornerRadii DIALOG_RADIUS \u003d new CornerRadii( 10 );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Insets DIALOG_MARGIN \u003d new Insets( 12 );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Insets DIALOG_PADDING \u003d new Insets( 24 );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Pos DIALOG_ALIGNMENT \u003d Pos.TOP_LEFT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final boolean DIALOG_WRAP_TEXT \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Pos DISPLAY_PICTURE_CONTAINER_ALIGNMENT \u003d Pos.TOP_LEFT;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Insets DISPLAY_PICTURE_PADDING \u003d new Insets( 12, 0, 0, 8 );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static boolean DISPLAY_PICTURE_USER_VISIBLE \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static double DISPLAY_PICTURE_RADIUS \u003d 24;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Color COLOR_BLACK \u003d Color.rgb(0,0,0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Color COLOR_BLUE \u003d Color.rgb( 0, 102, 227 );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Color COLOR_TRANSPARENT \u003d Color.TRANSPARENT;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static final Color COLOR_WHITE \u003d Color.WHITE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 56
    }
  },
  {
    "path": "src/main/java/Frontend/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Components.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Components.DialogBox.DukeDialogBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Components.DialogBox.UserDialogBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Config;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Styles;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Objects.User;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * This class handles all frontend rendering of components."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Only functions that deal with the user interface should be included."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    With references to:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Title: JavaFX Tutorial"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Author: Jeffry Lum, Damith C. Rajapakse"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *    Availability: https://github.com/se-edu/duke/blob/master/tutorials"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private DukeScrollPane scrollPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private DialogContainer dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private DukeInput userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private SendButton sendButton;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private DukeAnchorPane mainLayout;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private DukeLink link;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private User user \u003d new User();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private User duke \u003d new User( Config.DUKE_IMG_PATH );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Switcher switcher;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Cache cache \u003d new Cache();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private int userInputHistoryIndex \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void start( Stage stage ) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        initBackendComponents();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        initComponents();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setTheStage(stage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        resizeStage(stage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        setHandlers();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void addUserInputHistoryIndex(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( cache.getUserInputHistorySize() \u003e 0 ){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String latestCommand \u003d cache.getUserInputHistory( userInputHistoryIndex % cache.getUserInputHistorySize() );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.setText(latestCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.positionCaret( latestCommand.length() );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInputHistoryIndex++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Displays the text value of multiple users and handles empty texts."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Clears the text field and the text value of the user once display is done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void displayUserInput(){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( user.getText().length() \u003e 0 ){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.addChild("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    new UserDialogBox( user )"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            user.clearText();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( duke.getText().length() \u003e 0 ){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dialogContainer.addChild("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                    new DukeDialogBox( duke )"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            );"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            duke.clearText();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Greets the user on launch and prints existing tasks (if any)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void greet(){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        str +\u003d DynamicMessenger.sayHello();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        str +\u003d \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        str +\u003d DynamicMessenger.sayTaskList( taskList.getList() );"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        duke.addText( str );"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.addChild("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                new DukeDialogBox( duke )"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        duke.clearText();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void handleKeyEvent( KeyEvent keyEvent){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        KeyCode keyCode \u003d keyEvent.getCode();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        boolean isKeyUp \u003d keyCode \u003d\u003d KeyCode.UP;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        boolean isKeyCtrlC \u003d ( keyCode \u003d\u003d KeyCode.C \u0026\u0026 keyEvent.isControlDown() );"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        boolean isKeyCtrlD \u003d ( keyCode \u003d\u003d KeyCode.D \u0026\u0026 keyEvent.isControlDown() );"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( isKeyUp ){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            addUserInputHistoryIndex();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            resetUserInputHistoryIndex();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( isKeyCtrlC ){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        if( isKeyCtrlD ){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            exitDuke();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Retrieves user input and displays response."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Also handles a DukeException but does not handle any logic."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            cache.addUserInput(userText);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            user.addText( userText );"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            duke.addText( switcher.res(user.getText()) );"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            displayUserInput();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            if( userText.equals( Config.EXIT_CMD ) ){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                exitDuke();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DukeException e ){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            displayError( e );"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void exitDuke(){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        new Thread( () -\u003e {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                Thread.sleep( Config.EXIT_DELAY );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } ).start();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Handles the initialisation of all backend components"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void initBackendComponents(){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            taskList.loadTasks( Storage.loadDataFromFile() );"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch ( DukeException e ){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            System.out.println(\"Unable to load file\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            switcher \u003d new Switcher( taskList, cache );"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Handles the initialisation of all rendered components"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void initComponents(){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer \u003d new DialogContainer();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scrollPane \u003d new DukeScrollPane(dialogContainer);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput \u003d new DukeInput();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton \u003d new SendButton();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        link \u003d new DukeLink( Config.LINK_TEXT, Config.LINK_URL );"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        link.setOnAction( event -\u003e {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                link.openLink();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "waynewee"
        },
        "content": "                displayError(e);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } );"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        mainLayout \u003d new DukeAnchorPane(scrollPane, userInput, sendButton, link);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void displayError(DukeException e){"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        duke.addText( e.getErrorMsg() );"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        displayUserInput();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void resetUserInputHistoryIndex(){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInputHistoryIndex \u003d 0;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Sets widths and heights for various components."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Sets positioning of child elements"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * @param stage top level JavaFX container"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void resizeStage(Stage stage){"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setMinHeight( Styles.STAGE_MIN_HEIGHT );"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setMinWidth( Styles.STAGE_MIN_WIDTH );"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void setTheStage(Stage stage){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        stage.setTitle( Config.APP_TITLE );"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    /**e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     * Binds functions to various components"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "waynewee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private void setHandlers(){"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //handles mouse click"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.setOnKeyPressed( this::handleKeyEvent );"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        //handles press send"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 267
    }
  },
  {
    "path": "src/main/java/Frontend/Objects/User.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "package Frontend.Objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Constants.Config;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    private Image img;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public User(String imgPath){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.img \u003d new Image(this.getClass().getResourceAsStream( imgPath ));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.text \u003d Config.USER_EMPTY_TEXT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public User(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.text \u003d Config.USER_EMPTY_TEXT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void addText( String text ){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void clearText(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        this.text \u003d Config.USER_EMPTY_TEXT;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.text;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public Image getImage(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        return this.img;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Frontend.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Title: JavaFX Tutorial"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Author: Jeffry Lum, Damith C. Rajapakse"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": " * Availability: https://github.com/se-edu/duke/blob/master/tutorials"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Application.launch( Main.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003cfx:root type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cHBox fx:id\u003d\"dialogContainer\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "          \u003cStackPane fx:id\u003d\"displayPictureContainer\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "              \u003cCircle fx:id\u003d\"displayPicture\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "          \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "          \u003cLabel fx:id\u003d\"dialog\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003c/HBox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "waynewee": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Frontend.Components.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "waynewee": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Cache;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Objects.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Switcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "import Backend.Parsers.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    Cache cache \u003d new Cache();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    Switcher switcher \u003d new Switcher(taskList, cache);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        DukeTest dukeTest \u003d new DukeTest();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dukeTest.markTaskAsDoneTest();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            dukeTest.addToListTest();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            parseSavedLineTest();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "waynewee"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void addToListTest() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        switcher.res(\"todo go home\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        switcher.res(\"deadline duke project /by 2020-01-31\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        switcher.res(\"event no sleep /at 2020-01-30\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.getList().get(0).toString(), \"1.[T][N] go home\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.getList().get(1).toString(), \"2.[D][N] duke project (by: 2020-01-31)\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( taskList.getList().get(2).toString(), \"3.[E][N] no sleep (at: 2020-01-30)\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public void markTaskAsDoneTest() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        switcher.res(\"done 2\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals(taskList.getList().get(1).toString(), \"[Y] duke project (by: 2020-01-31)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    public static void parseSavedLineTest() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        String line \u003d \"2.[D][N] duke project (by: 2020-01-31)\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        Task task \u003d Parser.parseSavedTask(line, 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "waynewee"
        },
        "content": "        assertEquals( task.toString(), line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "waynewee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "waynewee": 59
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Hi! How may I help you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "suck cock"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "finsih hmwk"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": "party"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "1.[T][N] suck cock"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "2.[D][N] finsih hmwk(by: 2pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "waynewee"
        },
        "content": "3.[E][N] party(at: 11pm)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "waynewee"
        },
        "content": "**********************************"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "waynewee"
        },
        "content": "Catch you later!"
      }
    ],
    "authorContributionMap": {
      "waynewee": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "todo suck cock"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": "deadline finsih hmwk /by 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "event party /at 11pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "waynewee": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "waynewee"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "waynewee"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "waynewee"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "waynewee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "waynewee"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "waynewee"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "waynewee"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "waynewee"
        },
        "content": "java -classpath ..\\bin Frontend.Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "waynewee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "waynewee"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "waynewee"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "waynewee": 21
    }
  }
]
