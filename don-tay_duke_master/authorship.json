[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    mainClassName \u003d \"Duke.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "don-tay": 40
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# The Grandest Duke User (TGD) Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003cimg src\u003d\"Ui.png\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "The Grandest Duke (TGD) is a task tracker desktop application aimed at helping user keep track"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "of their daily tasks. It has a clean and simple GUI which accepts user input as its main"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "mode of interaction."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 1. Adding a task : `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### There are 3 types of tasks that you can add to TGD:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "- `todo` - task with only a task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "- `deadline` - task with a description, date and time(optional)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "- `event` - task with a description, date and time(optional)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Format:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "todo \u003ctask description\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "deadline \u003ctask description\u003e /\u003cpreposition\u003e \u003cdate\u003e \u003ctime\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "event \u003ctask description\u003e /\u003cpreposition\u003e \u003cdate\u003e \u003ctime\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Note: Date in ``YYYY-MM-DD`` format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "deadline AI project /by 2019-12-30 1300h"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "deadline CS Assignment /by 2020-01-15"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "event Birthday party /on 2020-03-30 4pm"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "event Networking /on 2020-05-01"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "When adding the commands in \u0027Examples of usage\u0027 in order, upon "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "entering the 4th command `event Birthday party /on 2020-03-30 4pm`:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "[E][X] birthday party on Mar 30 2020 4pm"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 2. Viewing all tasks : `list`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 3. Mark task as done : `done`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "done \u003ctask index\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Note: Task index is the task\u0027s number obtained from the `list` command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "With the existing tasks in the list,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Nice! i\u0027ve makred this task as done:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    [T][✓]read a book"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 4. Delete task : `delete`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "delete \u003ctask index\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Note: Task index is the task\u0027s number obtained from the `list` command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "don-tay"
        },
        "content": "With the existing tasks in the list,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "don-tay"
        },
        "content": "[D][✗]AI project by Dec 30 2019 1300h"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 5. View TGD stats : `stats`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "don-tay"
        },
        "content": "stats"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 6. View simple help : `help`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "don-tay"
        },
        "content": "help"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 7. View detailed help : `help-detailed`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "don-tay"
        },
        "content": "help-detailed"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### 8. Exit TGD : `bye`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "don-tay"
        },
        "content": "### Format:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "don-tay"
        },
        "content": "bye"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "don-tay"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "don-tay": 100
    }
  },
  {
    "path": "src/main/java/Duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Circle circleFrame;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        circleFrame \u003d new Circle(40,33, 33);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        displayPicture.setClip(circleFrame);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Dialog box in Duke GUI showing user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param text User input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param img User\u0027s profile image"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return User\u0027s dialog box"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Dialog box in Duke GUI showing Duke\u0027s response to user input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param text Duke\u0027s response"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param img Duke\u0027s profile image"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return Duke\u0027s dialog box"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 80
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Duke class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param filePath Pathname of file where Duke tasks are being stored at"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ui.setTaskList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Duke class with default storage path at data/tasks.txt."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\"); //default filepath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Storage statStorage \u003d new Storage(\"data/stats.txt\"); //default filepath for stats info"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        tasks \u003d new TaskList(storage, statStorage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ui.setTaskList(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Get Duke\u0027s ui instance."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return Duke\u0027s ui instance"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Set Duke\u0027s storage to a new storage. Does not copy over content to new storage."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param storage new storage to store Duke entries in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void setStorage(Storage storage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return ui.parseInput(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        ui.awaitUserInput();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Duke newDuke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        newDuke.run();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "don-tay": 168
    }
  },
  {
    "path": "src/main/java/Duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 12
    }
  },
  {
    "path": "src/main/java/Duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stage.setTitle(\"The Grandest Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//            stage.resizableProperty().setValue(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stage.setOnCloseRequest(new EventHandler\u003cWindowEvent\u003e() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                public void handle(WindowEvent event) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    event.consume();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    duke.getUi().exitString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    stage.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 42
    }
  },
  {
    "path": "src/main/java/Duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.jpeg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jirachi.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Sets current controller to instantiated Duke class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param d Duke instance to be set"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String response \u003d duke.getUi().startupString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (input.equals(\"bye\")) { //exit Duke when user inputs bye"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 65
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String DATE_TIME_PARSE_ERROR \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"Error parsing date and time. Please input date and time as YYYY-mm-dd hh:mm. (Time is optional)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String EMPTY_DESCRIPTION_ERROR \u003d \"☹ OOPS!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String INVALID_DESCRIPTION_ERROR \u003d \"☹ OOPS!!! The description of a task must be added in \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"the format:\\nTask-type Task-description /Preposition Date Time(optional)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String INVALID_TASK_ERROR \u003d \"Attempting to add invalid task. Operation aborted.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Takes in user String input, parses, and executes command accordingly, and returns output string by Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param input User string input. Typically of structure [Task type] [Task description]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return Output string by Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String getOutputString(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String in \u003d input.trim().toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String outputString;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assert this.taskList !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Command exitCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            outputString \u003d exitCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else if (in.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Command listCommand \u003d new ListCommand(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            outputString \u003d listCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else if (in.equals(\"stats\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Command statsCommand \u003d new StatsCommand(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            outputString \u003d statsCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else if (in.equals(\"help\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Command helpCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            outputString \u003d ((HelpCommand) helpCommand).executeSimple();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else if (in.equals(\"help-detailed\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Command helpCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            outputString \u003d helpCommand.execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String taskType \u003d in.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            if (isValidTask(taskType)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    String taskDesc \u003d in.split(\" \", 2)[1]; //all String after taskType"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    if (taskType.equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        Command doneCommand \u003d new DoneCommand(taskList, taskDesc);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        outputString \u003d doneCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        Command deleteCommand \u003d new DeleteCommand(taskList, taskDesc);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        outputString \u003d deleteCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        Task newTask \u003d createTask(taskType, taskDesc);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        Command addCommand \u003d new AddCommand(taskList, newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        outputString \u003d addCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    outputString \u003d DATE_TIME_PARSE_ERROR;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    outputString \u003d EMPTY_DESCRIPTION_ERROR;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    outputString \u003d e.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } else if (in.isEmpty() || in \u003d\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                Command emptyCommand \u003d new EmptyCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                outputString \u003d emptyCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                Command unknownCommand \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                outputString \u003d unknownCommand.execute(); //TODO: outputString in this class instead"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assert outputString !\u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return outputString;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static Task createTask(String taskType, String taskDesc) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            newTask \u003d new ToDo(taskDesc);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String[] taskDetails \u003d parseDetails(taskDesc);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String task \u003d taskDetails[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String preposition \u003d taskDetails[1];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String date \u003d taskDetails[2];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String time \u003d taskDetails[3];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            LocalDate formattedDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                newTask \u003d new Deadline(task, preposition, formattedDate, time);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                newTask \u003d new Event(task, preposition, formattedDate, time);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } else { //error encountered creating task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                throw new DukeException(INVALID_TASK_ERROR);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Parses taskDesc (ie. all String after task type) into 4 parts: task, preposition, date and time."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskDesc the entire input command after task type input"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return string array of 4 elements in order: task, preposition, date and time"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static String[] parseDetails(String taskDesc) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String[] details \u003d new String[4];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String[] taskAndDate \u003d taskDesc.split(\"/\", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String task \u003d taskAndDate[0].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String dateTimePrepositionString \u003d taskAndDate[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String[] dateTimePrepositionArray \u003d dateTimePrepositionString.split(\" \", 3);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String preposition \u003d dateTimePrepositionArray[0];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String date \u003d dateTimePrepositionArray[1];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            details[0] \u003d task;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            details[1] \u003d preposition;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            details[2] \u003d date;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            if (dateTimePrepositionArray.length \u003d\u003d 3) { //case when time is provided"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                String time \u003d dateTimePrepositionArray[2];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                details[3] \u003d time;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            return details;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            throw new DukeException(INVALID_DESCRIPTION_ERROR);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static boolean isValidTask(String taskType) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return taskType.equals(\"done\") || taskType.equals(\"delete\") || Task.isValidTask(taskType);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "don-tay": 143
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Storage implements Serializable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String HOME \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Storage located at filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param filepath Pathname of where storage will be located"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.path \u003d HOME + \"/\" + filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String getPath() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Saves taskList to current storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskList List to be saved in storage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void saveTask(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            assert taskList !\u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(this.path);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            objectOut.writeObject(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            objectOut.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Loads taskList from current storage."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return taskList obtained from current storage. Returns new empty taskList if no existing taskList in storage."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public List\u003cTask\u003e loadTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String parentDirectory \u003d new File(path).getParent();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (!Files.exists(Paths.get(path))) { // if file or directory does not exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                new File(parentDirectory).mkdirs(); // create new directory"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                Files.createFile(Paths.get(path));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                System.err.println(\"Error creating new file at given filepath. Please try another filepath\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                FileInputStream fileIn \u003d new FileInputStream(path);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                if (fileIn.available() \u003e 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    List\u003cTask\u003e obj \u003d (ArrayList\u003cTask\u003e) objectIn.readObject();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    if (!Objects.isNull(obj)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        return obj;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    objectIn.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    fileIn.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Saves statistics to current storage."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param stats Statistic to be saved in storage"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void saveStats(List\u003cCommand\u003e commandList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            assert commandList !\u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(this.path);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            objectOut.writeObject(commandList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            objectOut.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Loads stats from current storage."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @return stats obtained from current storage. Returns new empty stats if no existing taskList in storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public List\u003cCommand\u003e loadStats() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String parentDirectory \u003d new File(path).getParent();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (!Files.exists(Paths.get(path))) { // if file or directory does not exist"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                new File(parentDirectory).mkdirs(); // create new directory"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                Files.createFile(Paths.get(path));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                System.err.println(\"Error creating new file at given filepath. Please try another filepath\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                FileInputStream fileIn \u003d new FileInputStream(path);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                if (fileIn.available() \u003e 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    List\u003cCommand\u003e obj \u003d (LinkedList\u003cCommand\u003e) objectIn.readObject();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    if (!Objects.isNull(obj)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        return obj;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    objectIn.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    fileIn.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 129
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Storage taskStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private List\u003cCommand\u003e stats; //stats associated with this task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Storage statStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public TaskList(Storage taskStorage, Storage statStorage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskStorage \u003d taskStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskList \u003d taskStorage.loadTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.statStorage \u003d statStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.stats \u003d statStorage.loadStats();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public TaskList(Storage taskStorage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskStorage \u003d taskStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskList \u003d taskStorage.loadTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.statStorage \u003d getStatStorage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.stats \u003d statStorage.loadStats();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Storage getTaskStorage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return taskStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Storage getStatStorage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        if (this.statStorage \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String newPath \u003d \"data/stats.txt\"; //default filepath"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            return new Storage(newPath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            return this.statStorage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public List\u003cCommand\u003e getStats() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return stats;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 50
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String logo \u003d \"THE GRANDEST DUKE!\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Ui class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public void setTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        parser.setTaskList(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * String to be printed by Duke on Duke\u0027s startup."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String startupString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String helpString \u003d parser.getOutputString(\"help\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"Welcome, welcome to... \" + logo + \"\\n\" + helpString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * String to be printed by Duke on Duke\u0027s exit."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String exitString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"Bye!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /** Parses user input for Duke GUI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param input user input in GUI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    String parseInput(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return parser.getOutputString(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 41
    }
  },
  {
    "path": "src/main/java/Duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    Task taskAdded;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public AddCommand(TaskList taskList, Task newTask) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskAdded \u003d newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            if (Objects.isNull(taskAdded)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                out \u003d \"Attempting to add invalid task. Operation aborted.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                list.add(taskAdded);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                stats.add(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                out \u003d \"Got it. I\u0027ve added this task:\\n\" + taskAdded + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                        + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            storage.saveTask(list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            statStorage.saveStats(stats);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"Added task: \" + taskAdded.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 34
    }
  },
  {
    "path": "src/main/java/Duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public abstract class Command implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected TaskList tl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected List\u003cTask\u003e list; // derived from tl"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected Storage storage; // derived from tl"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String taskDesc; // derived from tl"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected List\u003cCommand\u003e stats; // derived from tl"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected Storage statStorage; // derived from tl"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Default constructor for empty, exit and unknown command, which are not recorded in statistics."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Command(TaskList tl) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.tl \u003d tl;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.list \u003d tl.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.storage \u003d tl.getTaskStorage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.stats \u003d tl.getStats();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.statStorage \u003d tl.getStatStorage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Command(TaskList tl, String taskDesc) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.tl \u003d tl;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskDesc \u003d taskDesc;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.list \u003d tl.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.stats \u003d tl.getStats();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.storage \u003d tl.getTaskStorage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.statStorage \u003d tl.getStatStorage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public abstract String execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 40
    }
  },
  {
    "path": "src/main/java/Duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    Task taskDeleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public DeleteCommand(TaskList taskList, String taskDesc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskList, taskDesc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            String taskNum \u003d taskDesc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            Task currTask \u003d list.get(Integer.parseInt(taskNum) - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            list.remove(currTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            taskDeleted \u003d currTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stats.add(this);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"Noted. I\u0027ve removed this task:\\n\" +  currTask + \"\\nNow you have \" + list.size()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"☹ OOPS!!! Please input a valid number in the range of the task list to delete.\\nUnsure? List the\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    \"tasks out by typing the \u0027list\u0027 command to see your available tasks and their respective \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                    \"task number.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (NumberFormatException e) { // when non-int arg provided"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"☹ OOPS!!! Delete must take a valid integer in the range of the task list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            storage.saveTask(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            statStorage.saveStats(stats);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"Deleted task: \" + taskDeleted;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 39
    }
  },
  {
    "path": "src/main/java/Duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    Task taskDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public DoneCommand(TaskList taskList, String taskDesc) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskList, taskDesc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String in \u003d taskDesc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            int num \u003d Integer.parseInt(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            taskDone \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            taskDone.markDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            stats.add(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out +\u003d  \"       \" + taskDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) { // when no int arg provided"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"OOPS!!! Done must take a valid number in the range of the task list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } catch (NumberFormatException e) { // when non-int arg provided"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out \u003d \"OOPS!!! Done must take a valid integer in the range of the task list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            storage.saveTask(list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            statStorage.saveStats(stats);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"Done task: \" + taskDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 39
    }
  },
  {
    "path": "src/main/java/Duke/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class EmptyCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public EmptyCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d \"☹ OOPS!!! Please type something here.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 13
    }
  },
  {
    "path": "src/main/java/Duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 13
    }
  },
  {
    "path": "src/main/java/Duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String HORIZONTAL_BORDER \u003d \"-------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String DETAILED_COMMANDS \u003d HORIZONTAL_BORDER + \"General Commands\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"Command format:\\nCOMMAND\\n\\nlist - Shows all tasks in order which they \" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"were added from oldest to newest\\nstats - Shows all successful add, delete and done command in \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"order they which were added, from oldest to newest\\nbye - Exit the application\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"help-detailed - Summon the Royal rescue team (ie. this help prompt)\\n\\n\" + HORIZONTAL_BORDER +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"Done/Delete Commands\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"Command format:\\nCOMMAND TASKNUM\\nNote:\\n1. TASKNUM -\u003e task number as shown by \u0027list\u0027 command\\n\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"done - mark task with TASKNUM as done\\ndelete - delete task with TASKNUM from list\\n\\n\" + HORIZONTAL_BORDER"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            + \"Add Task Commands(w/o date and time)\\nCommand format:\\nTASKTYPE DESCRIPTION\\n(eg. todo read)\\n\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"TASKTYPE:\\ntodo\\n\\n\" + HORIZONTAL_BORDER + \"Add Task Commands(with date and time)\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"Command format:\\nTASKTYPE DESCRIPTION /PREPOSITION DATE TIME\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"(eg. event Networking /on 2020-01-30 1700h)\\nNote:\\n1. DATE input format \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"is YYYY-MM-DD\\n2. Preposition starts with a \u0027/\u0027 followed by any single word\\n3. TIME is optional\\n\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"TASKTYPE:\\ndeadline\\nevent\\n\\n\" + HORIZONTAL_BORDER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String SIMPLE_COMMANDS \u003d HORIZONTAL_BORDER + \"- list\\n- stats\\n- bye\\n- help\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"- help-detailed\\n\" + \"- done [task number]\\n- delete [task number]\\n- todo [task description]\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"- event [task description] /[preposition] [date in YYYY-MM-DD] [time(optional)]\\n- deadline \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"[task description] /[preposition]\" + \"[date in YYYY-MM-DD] [time(optional)]\\n\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \"TYPE help-detailed for more info!\\n\" + HORIZONTAL_BORDER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d HORIZONTAL_BORDER + \"HELP:\\n\" + DETAILED_COMMANDS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String executeSimple() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d HORIZONTAL_BORDER + \"Try these commands:\\n\" + SIMPLE_COMMANDS;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 38
    }
  },
  {
    "path": "src/main/java/Duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public ListCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * String of every item in taskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            out +\u003d \"     \" + i + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 24
    }
  },
  {
    "path": "src/main/java/Duke/command/StatsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public StatsCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        StringBuilder output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        List\u003cCommand\u003e addStats \u003d stats.stream().filter(p -\u003e p instanceof AddCommand)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        List\u003cCommand\u003e completedStats \u003d stats.stream().filter(p -\u003e p instanceof DoneCommand)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        List\u003cCommand\u003e deletedStats \u003d stats.stream().filter(p -\u003e p instanceof DeleteCommand)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output \u003d new StringBuilder(\"Here are your statistics so far for this task list:\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"Total number of successful input commands: \" + stats.size() + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"Total number of task added: \" + addStats.size() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"Total number of task completed: \" + completedStats.size() + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"Total number of task deleted: \" + deletedStats.size() + \"\\n\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"All successful input commands so far (old to new):\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(appendCommandString(stats));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"\\nAll added tasks:\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(appendCommandString(addStats));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"\\nAll completed tasks:\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(appendCommandString(completedStats));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(\"\\nAll deleted tasks:\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        output.append(appendCommandString(deletedStats));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public StringBuilder appendCommandString(List\u003cCommand\u003e commandList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        for (Command c : commandList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            output.append(\"    \" + i + \". \" + c.toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 49
    }
  },
  {
    "path": "src/main/java/Duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public UnknownCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        String out \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 13
    }
  },
  {
    "path": "src/main/java/Duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 9
    }
  },
  {
    "path": "src/main/java/Duke/task/AbstractTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public abstract class AbstractTask implements Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String preposition;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for AbstractTask class with additional info provided after date taken to be time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param time Time of event (OPTIONAL)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public AbstractTask(String taskName, String preposition, LocalDate date, String... time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.time \u003d (time.length \u003d\u003d 0) ? null : time[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for AbstractTask class with additional date field."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    public AbstractTask(String taskName, String preposition, LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        this.time \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        this.isDone \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for AbstractTask class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public AbstractTask(String taskName) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.preposition \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String taskStateString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return (this.isDone) ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String formattedDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected abstract String taskType();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public boolean markDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return (this.date \u003d\u003d null) ? taskType() + taskStateString() + \" \" + this.taskName"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                : (this.time \u003d\u003d null) ? taskType() + taskStateString() + \" \" + this.taskName + \" \" + this.preposition"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                + \" \" + formattedDate()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                : taskType() + taskStateString() + \" \" + this.taskName + \" \" + preposition + \" \" + formattedDate()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                + \" \" + this.time;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 79
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Deadline extends AbstractTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Deadline class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    public Deadline(String taskName, String preposition, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        super(taskName, preposition, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Deadline class with additional info provided after date taken to be time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param time Time of deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Deadline(String taskName, String preposition, LocalDate date, String... time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskName, preposition, date, time);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String taskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 33
    }
  },
  {
    "path": "src/main/java/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class Event extends AbstractTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    public Event(String taskName, String preposition, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//        super(taskName, preposition, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * Constructor for Event class with additional info provided after date taken to be time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param taskName Name or description of the event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param preposition English word string to indicate the date clearly (eg. at, by, before, between)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param date Date of event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     * @param time Time of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public Event(String taskName, String preposition, LocalDate date, String... time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskName, preposition, date, time);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String taskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 33
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public interface Task extends Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public static boolean isValidTask(String task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return task.equals(\"todo\") || task.equals(\"event\") || task.equals(\"deadline\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public boolean markDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 14
    }
  },
  {
    "path": "src/main/java/Duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "public class ToDo extends AbstractTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    protected String taskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 14
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: #3B4CCA #3B4CCA #3B4CCA #3B4CCA #3B4CCA #3B4CCA #3B4CCA #3B4CCA;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \u003cFont name\u003d\"Indie Flower\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "don-tay": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #3B4CCA #3B4CCA;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here!\" style\u003d\"-fx-background-color: #FFDE00;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \u003cFont name\u003d\"Indie Flower\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" minHeight\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #CC0000;\" text\u003d\"SEND\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \u003cFont name\u003d\"Shadows Into Light\" size\u003d\"19.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" focusTraversable\u003d\"false\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #3B4CCA #3B4CCA;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #3B4CCA #3B4CCA #3B4CCA #3B4CCA;\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "               \u003c/opaqueInsets\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "don-tay": 30
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final LocalDate localDate \u003d LocalDate.parse(\"2019-02-13\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private static final String time \u003d \"6pm\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Event newEvent() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new Event(\"reading event\", \"at\", localDate);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private Event newEventWithTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new Event(\"reading event\", \"at\", localDate, time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void taskStateString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"[✗]\", newEvent().taskStateString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(true, newEvent().markDone());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void formattedDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"Feb 13 2019\", newEvent().formattedDate());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"[E][✗] reading event at Feb 13 2019\", newEvent().toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"[E][✗] reading event at Feb 13 2019 6pm\", newEventWithTime().toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 40
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import Duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    private ToDo newToDo() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        return new ToDo(\"read\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void taskStateString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"[✗]\", newToDo().taskStateString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void markDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(true, newToDo().markDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "        assertEquals(\"[T][✗] read\", newToDo().toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "don-tay": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "Hello from DUKE!"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     1.[T][✗] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "       [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": "     Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "don-tay": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "don-tay": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "don-tay"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "don-tay"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "don-tay"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "don-tay"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "don-tay"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "don-tay"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "don-tay"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "don-tay"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "don-tay"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "don-tay"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "don-tay"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "don-tay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "don-tay"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "don-tay"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "don-tay"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "don-tay"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "don-tay"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "don-tay"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "don-tay"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "don-tay": 34
    }
  }
]
