[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "javadoc {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    source \u003d sourceSets.main.allJava"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    classpath \u003d configurations.compile"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 42,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "This guide covers the features of **DUKE** chatbot"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "## Overview "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. Introduction"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "2. Features"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "3. Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    1. Adding a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    2. Marking a task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    3. Displaying the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    4. Deleting a task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    5. Finding a task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    6. Tagging a task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "### Introduction "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "**DUKE** is a chatbot made for CS2103-T individual project. Its purpose is to help manage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "daily tasks by maintaining a checklist of finished and unfinished task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. **Text input**: **DUKE** supports text input from the user. Simply type your command "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "into the textbox and start communicating with **DUKE**."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. **Tasks**: **DUKE** supports 3 different types of tasks:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    1. **ToDo**: These tasks do not have a date associated to them."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    2. **Deadline**: These tasks have a date associated to them."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    3. **Event**: These tasks have a date associated to them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. **Data saving**: In order to save data when booting, Duke will save a list "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "of current tasks in the list in `duke.txt`."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. **Tagging**: Duke supports tagging of the tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "1. Adding a task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    * `todo` - Add a **ToDo** task to the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `todo` `TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `todo party` - Adds a `party` **ToDo** task to the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    * `deadline` - Add a **Deadline** task to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `deadline` `TASK_DESCRIPTION /by TASK_DATE`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `deadline individual project` `/by` `2020-03-02` - Adds a "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        `individual project` **Deadline** task by **March 2, 2020** to the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "      "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    *  `event` - Add a **Event** task to the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `event` `TASK_DESCRIPTION /at TASK_DATE`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `event concert` `/by` `2020-03-28` - Adds a "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        `concert` **Event** task by **March 28, 2020** to the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    **Note**: Please specify all `TASK_DATE` in the following format: **YYYY-MM-DD**."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "2. Marking a task as done "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   * `done` - Mark a task in the task list as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `done` `TASK_INDEX`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `done` `3` - Marks task with index **3** in the task list as done."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   **Note**: `TASK_INDEX` starts from 1."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "3. Displaying the task list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    * `list` - Display the current tasks in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format `list`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    **Note**: This command would also show the status of the tasks in the task list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    (e.g. description, date, tag, status)."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "4. Deleting a task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   * `delete` - Delete a task in the task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `delete` `TASK_INDEX`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `delete` `6` - Deletes task with index **6** in the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "   **Note**: `TASK_INDEX` starts from 1.   "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "5. Finding a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    * `find` - Finds a task with the specified description."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `find` `TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `find` `book` - Finds all tasks in the task list that contains"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        **book** in the description."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    **Note**: `find` accepts partial `TASK_DESCRIPTION` in the input command, so "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    to find **homework**, you can type **home** instead."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "6. Tagging a task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    * `tag` - Tags a task in the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Format: `tag` `TAG_DESCRIPTION /at TASK_INDEX`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        * Example: `tag` `not happening /at 12` - Tags the tag at index 12 in the"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        task list with **#nothappening**."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    **Note**: `tag` automatically removes the spaces in between the `TAG_DESCRIPTION`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    to match with the tagging system of popular social media platform (e.g. Facebook,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     Instagram, etc.)"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 96,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This represents a Deadline task, which is a subset of class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * A deadline has a date associated with it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param description This is the description of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param by This is the date that the deadline is due by."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the date that the deadline is due by."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The date that the deadline is due by."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 39
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static DialogBox getDukeGreeting(Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String text \u003d Ui.greetUser();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 66
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new instance of the class Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        storage \u003d new Storage(\"/duke/out/duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        Parser.addList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return Parser.parse(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void saveFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        storage.writeBack(\"/duke/out/duke.txt\", tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 23,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This represents an Event task, which is a subset of the class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * An event has a date associated with it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param description This is the description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param at This is the date that the event is at."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the date the event is at."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The date the event is at."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void stop(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        System.out.println(\"Stage is closing\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        // Save file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        duke.saveFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                DialogBox.getDukeGreeting(dukeImage)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This class handles all input from the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private static TaskList currentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new instance of the class Parser."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Associates a parser with a task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param tasks This is the TaskList to be associated with the current parser."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static void addList(TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        currentList \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Parses the command string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param command The command string that the user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The response of Duke to the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String parse(String command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        if (command.equals(\"hi\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Exit"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            output +\u003d \"What\u0027s up my dude???\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //List all tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (currentList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Your list is empty\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Here are the tasks in your list:\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                for (int i \u003d 0; i \u003c currentList.getSize(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d i + 1 + \". \" + currentList.getTask(i)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                            + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else if ((command.length() \u003e 3) \u0026\u0026 (command.substring(0, 4).equals(\"done\"))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Mark task as done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                currentList.getTask(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d currentList.getTask(taskNumber - 1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.emptyError(\"Done\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.invalidNumber(\"mark as done\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else if ((command.length() \u003e 5) \u0026\u0026 (command.substring(0, 6).equals(\"delete\"))) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Delete task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                Task temp \u003d currentList.removeTask(taskNumber - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Nice! I have removed this task:\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d temp + System.lineSeparator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.emptyError(\"Delete\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.invalidNumber(\"delete\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else if ((command.length() \u003e 3) \u0026\u0026 (command.substring(0, 4).equals(\"find\"))) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Find task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (command.length() \u003d\u003d 4) throw new DukeException(\"No info find\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                boolean isMatch \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                String keyWord \u003d command.substring(5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                ArrayList\u003cTask\u003e matchedTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                for (int i \u003d 0; i \u003c currentList.getSize(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    Task currentTask \u003d currentList.getTask(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (currentTask.toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        matchedTask.add(currentTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        isMatch \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (isMatch) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d \"Here are the matching tasks in your list:\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                            + System.lineSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    for (int j \u003d 0; j \u003c matchedTask.size(); j++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        output +\u003d (j + 1) + \".\" + matchedTask.get(j)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                                + System.lineSeparator();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d \"There are no tasks that match your description\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                            + System.lineSeparator();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.emptyError(\"Find\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else if ((command.length() \u003e 2) \u0026\u0026 (command.substring(0, 3).equals(\"tag\"))) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Tag a task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (command.length() \u003d\u003d 3) throw new DukeException(\"No tag found\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                int breakPos \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                String keyword \u003d command.substring(4, breakPos - 1).replaceAll(\"\\\\s\",\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                int taskPos \u003d Integer.parseInt(command.substring(breakPos + 4));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                currentList.getTask(taskPos - 1).updateTag(keyword);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Nice! I have tagged this task:\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d currentList.getTask(taskPos - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.emptyError(\"Tag\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"Please re-enter a valid tag\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.invalidNumber(\"tag\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            //Add task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            Task newTask \u003d new Task(\"placeholder\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new ToDo(command.substring(5));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    currentList.addTask(newTask);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    assert (currentList.getSize() !\u003d 0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.gotIt(newTask, currentList.getSize());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.emptyError(\"ToDo\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    int breakPos \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if ((breakPos \u003d\u003d -1) \u0026\u0026 (command.length() \u003d\u003d 8)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        throw new DukeException(\"No desc Deadline\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(command.substring(breakPos + 4));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new Deadline(command.substring(9, breakPos - 1), date);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    currentList.addTask(newTask);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    assert (currentList.getSize() !\u003d 0);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.gotIt(newTask, currentList.getSize());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.emptyError(\"Deadline\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.reEnterDate(\"Deadline\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.wrongDate();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    int breakPos \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if ((breakPos \u003d\u003d -1) \u0026\u0026 (command.length() \u003d\u003d 5)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        throw new DukeException(\"No desc Event\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(command.substring(breakPos + 4));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new Event(command.substring(6, breakPos - 1), date);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    currentList.addTask(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    assert (currentList.getSize() !\u003d 0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.gotIt(newTask, currentList.getSize());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.emptyError(\"Event\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.reEnterDate(\"Event\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    output +\u003d Ui.wrongDate();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d Ui.showInputError();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        assert (!output.equals(\"\"));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 184
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This class handles all input and output from file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new instance of the Storage class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param filePath The path of the input file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.filePath \u003d Paths.get(home, filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Loads all information from the input file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The ArrayList of all tasks read from the input file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @throws DukeException This is the DukeException."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        ArrayList\u003cTask\u003e inputTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        try (BufferedReader reader \u003d Files.newBufferedReader(filePath, Charset.forName(\"UTF-8\"))) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            String currentLine \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                String[] input \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                char firstChar \u003d currentLine.charAt(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (firstChar \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new ToDo(input[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.updateTag(input[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    inputTasks.add(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (firstChar \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    date \u003d LocalDate.parse(input[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new Deadline(input[2], date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.updateTag(input[4]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    inputTasks.add(newTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                if (firstChar \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    date \u003d LocalDate.parse(input[3]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    newTask \u003d new Event(input[2], date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    if (input.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        newTask.updateTag(input[4]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                    inputTasks.add(newTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return inputTasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Writes back the remaining tasks to the output file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param dir This is the directory of the output file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param list This is the TaskList to be written to the output file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void writeBack(String dir, TaskList list) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d list.getList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            Task outputTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (outputTask instanceof ToDo) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"T\" + \"|\" + outputTask.getDone()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getDescription()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getTag();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (outputTask instanceof Deadline) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"D\" + \"|\" + outputTask.getDone()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getDescription()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + ((Deadline) outputTask).getBy()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getTag();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (outputTask instanceof Event) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d \"E\" + \"|\" + outputTask.getDone()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getDescription()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + ((Event) outputTask).getAt()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                        + \"|\" + outputTask.getTag();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                output +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            Path path \u003d Paths.get(home, dir);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            assert (!output.equals(\"\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            Files.write(path, output.getBytes());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            System.out.println(\"Oops something went wrong\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 123
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    protected boolean isTagged;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param description This is the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.isTagged \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Marks the current task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the status icon of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return Returns tick if done or cross if not done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the description of the current task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The description of the current task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the status of the current task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return Returns 1 if done or 0 if not done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void updateTag(String tag) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.isTagged \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.tag;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String s \u003d \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        if (this.isTagged) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            s +\u003d \" #\" + this.tag;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 76
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * Represents a list of all tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new task list with no task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new task list with the input tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param list This is the list of the tasks to be put inside the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @throws DukeException This is the DukeException."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            throw new DukeException(\"Wrong input\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            this.taskList \u003d list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Adds a new task to the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param task This is the task to be added to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The task that had been added to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the task list as an ArrayList of tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The task list as an ArrayList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Returns the size of the current task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return the size of the current task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Retrieves a task from the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param index This is the index of the task from the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The task at the index specified."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param index This is the index of the task from the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @return The task deleted at the index specified."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 80
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This represents a ToDo task, which is a subset of the class Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * ToDo does not have a date associated."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new ToDo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param description This is the description of the ToDo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " * This class handles all string messages."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Creates a new instance of the class Ui."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows input error when the user added an invalid input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String showInputError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"The input is invalid. Please try again\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows the empty description error message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param s The task type where the error occurs."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String emptyError(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return s + \" description cannot be empty\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Greets the user when Duke starts."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String greetUser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        text +\u003d \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        text +\u003d \"Hello! I\u0027m Duke\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        text +\u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows the re-enter error message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param s The task type where the error occurs."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String reEnterDate(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"Please re-enter the date for \" + s"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows the wrong date error message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String wrongDate() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"Please enter a valid date format in the form of YYYY-MM-DD\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows the invalid number error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param s The keyword where the number input is invalid"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String invalidNumber(String s) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return \"Please enter a valid task number to \" + s"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * Shows the confirmation message after the task is successfully added."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param task This is the task that was successfully added to the task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     * @param size This is the new size of the task list after the new task is added."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public static String gotIt(Task task, int size) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String text \u003d\"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        text +\u003d \"Got it. I\u0027ve added this task: \\n\" + task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        text +\u003d \"Now you have \" + size + \" tasks in the list\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 93
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 20
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertSame;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    void write() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        Event event \u003d new Event(\"return book\", LocalDate.parse(\"2020-12-10\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        String expectedOutput \u003d \"[E][?] return book (at: Dec 10 2020)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        assertEquals(event, event);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 15
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void size() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        taskList.addTask(new ToDo(\"di hoc\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        assertEquals(1, taskList.getSize());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    public void isEmpty() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "        assertEquals(0, taskList.getSize());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "vuhieunguyen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "vuhieunguyen": 17
    }
  }
]
