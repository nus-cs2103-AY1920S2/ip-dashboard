[
  {
    "path": ".classpath",
    "fileType": "classpath",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003cclasspath\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cclasspathentry kind\u003d\"src\" output\u003d\"bin/main\" path\u003d\"src/main/java\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003cattributes\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003cattribute name\u003d\"gradle_scope\" value\u003d\"main\"/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003cattribute name\u003d\"gradle_used_by_scope\" value\u003d\"main,test\"/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003c/attributes\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003c/classpathentry\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cclasspathentry kind\u003d\"con\" path\u003d\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-11/\"/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cclasspathentry kind\u003d\"con\" path\u003d\"org.eclipse.buildship.core.gradleclasspathcontainer\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cclasspathentry kind\u003d\"output\" path\u003d\"bin/default\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003c/classpath\u003e"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 12
    }
  },
  {
    "path": ".project",
    "fileType": "project",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003cprojectDescription\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cname\u003eduke\u003c/name\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003ccomment\u003eProject duke_Wang Yuchen created by Buildship.\u003c/comment\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cprojects\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003c/projects\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cbuildSpec\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003cbuildCommand\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003cname\u003eorg.eclipse.jdt.core.javabuilder\u003c/name\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003carguments\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003c/arguments\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003c/buildCommand\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003cbuildCommand\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003cname\u003eorg.eclipse.buildship.core.gradleprojectbuilder\u003c/name\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003carguments\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\t\u003c/arguments\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003c/buildCommand\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003c/buildSpec\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003cnatures\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003cnature\u003eorg.eclipse.jdt.core.javanature\u003c/nature\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\t\u003cnature\u003eorg.eclipse.buildship.core.gradleprojectnature\u003c/nature\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\t\u003c/natures\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "\u003c/projectDescription\u003e"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 23
    }
  },
  {
    "path": ".settings/org.eclipse.buildship.core.prefs",
    "fileType": "prefs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "connection.project.dir\u003d"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "eclipse.preferences.version\u003d1"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 2
    }
  },
  {
    "path": ".vscode/settings.json",
    "fileType": "json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    \"java.configuration.updateBuildConfiguration\": \"automatic\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Configures class path for running gradle."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 16,
      "-": 20
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "#Tue Jan 21 19:58:46 CST 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Control class of Duke, including the logic of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private TextUi textUi;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private Storage dukeStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Initializes ui and storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi \u003d new TextUi();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        dukeStorage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            tasks \u003d new TaskList(dukeStorage.readFromFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } catch (exception.DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            textUi.showError(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Takes in the user inputs and excutes each command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                String fullCommand \u003d textUi.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                c.execute(tasks, textUi, dukeStorage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                textUi.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Ends the conversation and exits the system."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showGoodBye();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 57,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that adds a Task to TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected Task thisTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public AddCommand(Task givenTask) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.thisTask \u003d givenTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"adding\" type of commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException An exception which represents errors in duke input or storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        tasks.add(this.thisTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showAddingTask(thisTask, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 39
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that can be executed by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException If the execution fails."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public abstract void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 23
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that deletes a Task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"deleting\" type of commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (this.index \u003e\u003d tasks.getList().size() || this.index \u003c 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            textUi.showError(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showDeletingTask(this.index, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        tasks.delete(this.index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 49
    }
  },
  {
    "path": "src/main/java/command/DisplayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that displays the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class DisplayCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public DisplayCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"display\" type of commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.displayList(tasks, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 38
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a done command that set a Task to done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"done\" type of commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (this.index \u003e\u003d tasks.getList().size() || this.index \u003c 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            textUi.showError(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        tasks.done(this.index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showDoneTask(this.index, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        storage.writeToFile(tasks.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 47
    }
  },
  {
    "path": "src/main/java/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Represents a wrong command which should be ignored with an error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public ErrorCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"error\" type of commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.showError(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 39
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that terminates the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"exit\" type of commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *     which is True for ExitCommand objects"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 39
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a command that finds matching items for the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected String searchingItem;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public FindCommand(String item) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.searchingItem \u003d item;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Executes the \"finding\" type of commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks   A TaskList containing all tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param textUi a TextUi object that handles user-system interaction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param storage A Storage object which specifies the location of the data"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException a duke exception representing errors in user input or storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void execute(TaskList tasks, TextUi textUi, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        textUi.findList(tasks, searchingItem);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns whether the current command is an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value representing the property of the current command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 41
    }
  },
  {
    "path": "src/main/java/common/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Container for visible messages sent to usrs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_MARKASDONE \u003d \"     Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_SHOWLIST \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_GOTIT \u003d \"     Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_DELETEIT \u003d \"     Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_INVALIDCOMMAND \u003d \"The done message is not valid.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_EMPTYLIST \u003d \"     The list is currently empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_FIND \u003d \"     Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static final String MESSAGE_NULL \u003d \"     Sorry, but I cannot find matching items.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 22
    }
  },
  {
    "path": "src/main/java/common/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import parser.FileParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a storage object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor of the class Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param filePath the file path of the storage file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Reads from the storage file and generates an array list of task objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return an array list of tasks based on the file content"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException when file can not be located or written on"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            String thisLine;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            ArrayList\u003cTask\u003e builtList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                thisLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                builtList.add(new FileParser(thisLine).lineToTask());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return builtList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } catch (IOException exp) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Writes to the file based on the content of the array list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param existedList the task list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException when the storage file cannot be accessed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e existedList) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            for (Task task : existedList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                fw.write(task.toStringFileFormat() + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } catch (IOException exp) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            System.out.println(exp);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            throw new DukeException(\"IOException detected\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 69
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Creates a self-defined exception class that deals with Duke-specific exceptions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String str1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * This constructor builds a exception.DukeException instance with the warning message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param str2 the error message that is generated by the DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public DukeException(String str2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.str1 \u003d str2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * This method converts a exception.DukeException instance to a string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return (Message.MESSAGE_LINE + \"\\n\" + \"     :( OOPS!!! \" + this.str1 + \"\\n\" + Message.MESSAGE_LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 27
    }
  },
  {
    "path": "src/main/java/parser/FileParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a file parser that converts between strings and command objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class FileParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private String thisLine;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor of the file parser."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param str the string stored in the file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public FileParser(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.thisLine \u003d str.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Converts a string in the file to command objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a task object depending on the content of the string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Task lineToTask() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String[] words \u003d this.thisLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (words[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String name \u003d words[2].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String duration \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String category \u003d words[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        switch (category) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new Todo(name, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            duration \u003d words[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new Event(name, duration, isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            duration \u003d words[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new Deadline(name, duration, isDone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new Task(name, isDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 59
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.DisplayCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a parser between command input and command objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Converts user inputs to command objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param input the input string of the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a command object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws DukeException when input is not valid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String[] stamps \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String keyword \u003d words[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            String searchingItem \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new FindCommand(searchingItem);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new DisplayCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        int thisIndex;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (keyword.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    throw new DukeException(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                thisIndex \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (Exception exp) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new DoneCommand(thisIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                if (words.length !\u003d 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    throw new DukeException(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                thisIndex \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (Exception exp) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new DeleteCommand(thisIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    throw new DukeException(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (DukeException exp) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new AddCommand(new Todo(input.substring(5).trim()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            String[] eventWords \u003d input.split(\"/at \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                if (words.length \u003c 4 || stamps.length \u003c 2 || eventWords.length \u003c 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    throw new DukeException(Message.MESSAGE_INVALIDCOMMAND);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (DukeException exp) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new AddCommand(new Event(stamps[0].substring(6), eventWords[1]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else if (keyword.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            String[] ddlWords \u003d input.split(\"/by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                if (words.length \u003c 4 || stamps.length \u003c 2 || ddlWords.length \u003c 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    throw new DukeException(\"The content of a deadline must be complete.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            } catch (DukeException exp) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return new ErrorCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new AddCommand(new Deadline(stamps[0].substring(9), ddlWords[1]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return new ErrorCommand();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 100
    }
  },
  {
    "path": "src/main/java/parser/TimeFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a time formatter which translates between forms of date representation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class TimeFormatter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private String strDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor of TimeFormatter class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param strDate the original string of date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public TimeFormatter(String strDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.strDate \u003d strDate.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Checks if the input date format is valid for translation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return a boolean value whether the format is valid"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean checkValidDateFormat() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (this.strDate.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        SimpleDateFormat sdFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            Date javaDate \u003d sdFormat.parse(this.strDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            if (Integer.valueOf(this.strDate.substring(5,7)) \u003e 12) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } catch (ParseException e) { /* Date format is invalid */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Converts the original date to a desired format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return the string of the desired format of date"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toDesiredFormat() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(this.strDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Processes the date object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return the original or modified version of date"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String processDate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (!this.checkValidDateFormat()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return this.strDate;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            return this.toDesiredFormat();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 68
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import parser.TimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for the Deadline Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for the Deadline Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Deadline task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param isDone the boolean value representing the status of the Deadline task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Deadline(String name, String by, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                + new TimeFormatter(by).processDate() + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns a summary of the Deadline task in the file format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return Returns a summary of the Deadline task in the file format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"D\" + super.toStringFileFormat()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                + \" | \" + this.by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 49
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import parser.TimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Event(String name, String duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for the Event Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Event task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param isDone the boolean value representing the status of the Event task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Event(String name, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                + new TimeFormatter(duration).processDate() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns a summary of the Event task in the file format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return Returns a summary of the Event task in the file format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"E\" + super.toStringFileFormat()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                + \" | \" + this.duration;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 48
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param isDone the boolean value representing the status of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Marks the isDone status of the object as true."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns a summary of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return Returns a summary of the task, including description and the status icon"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String mark \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            mark \u003d \"[✓]\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            mark \u003d \"[✗]\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return mark + \" \" + this.name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns a summary of the task in the file format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return Returns a summary of the task in the file format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        int num \u003d -1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \" | \" + num + \" | \" + this.name;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 68
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e passedList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list \u003d passedList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Renews the existing task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param newList the new task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void renewList(ArrayList\u003cTask\u003e newList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list \u003d newList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Gets the ArrayList of Task of the current task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return an Array List of Task objects"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Adds a new task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param addedTask the newly added Task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void add(Task addedTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list.add(addedTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param index the index of the task being deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Marks one task as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param index the index of the task being done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 61
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * Represents a Todo class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " * A Todo instance is a task without time information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for Todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Todo task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructor for Todo Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param name the name of the Todo task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param isDone the boolean value representing the status of the Todo task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Returns a summary of the Todo task in the file format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return Returns a summary of the Todo task in the file format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String toStringFileFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return \"T\" + super.toStringFileFormat();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 41
    }
  },
  {
    "path": "src/main/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Main class of the TodoTest serving the purpose of testing Todo.class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param args command line input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @throws Exception thrown in terms of storage error"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        //test setup"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        Todo t \u003d new Todo(\"TestTodoCase\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        //test case 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        // automatically verify the response"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (!t.toString().equals(\"[T][✗] TestTodoCase\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            throw new Error(\"case 1 failed - toString()\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        //test case 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (!t.toStringFileFormat().equals(\"T | 0 | TestTodoCase\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            throw new Error(\"case 2 failed - toStringFileFormat()\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        //test case 3"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (!t.toString().equals(\"[T][✓] TestTodoCase\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            throw new Error(\"case 3 failed - toString() after markAsDone()\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        System.out.println(\"All tests passed\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 36
    }
  },
  {
    "path": "src/main/java/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import common.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Constructs new TextUi object to handle user-system interactions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        this.out \u003d new PrintStream(System.out);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows (lines of) message(s) to the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param message the message that is to be shown to the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            out.println(m);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows welcome words to the user during the initialization."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"Hello from\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LOGO,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     What can I do for you?\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows goodBye words to the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showGoodBye() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     Bye. Hope to see you again soon!\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows the dividing line."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser(Message.MESSAGE_LINE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows messages after adding a task to the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param givenTask the newly added task object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks the current task list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showAddingTask(Task givenTask, TaskList tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_GOTIT,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     \" + givenTask.toString(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     Now you have \" + tasks.getList().size() + \" tasks in the list.\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Presents the deleted task to the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param index the index of the deleted task in the task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showDeletingTask(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_DELETEIT,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     \" + tasks.getList().get(index).toString(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     Now you have \" + (tasks.getList().size() - 1) + \" tasks in the list.\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Presents the done task to the user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param index the index of the done task in the task list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showDoneTask(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_MARKASDONE,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                \"     \" + tasks.getList().get(index).toString(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Shows the error message to the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param errorMessage the error message generated by the dukeException"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                new DukeException(errorMessage).toString()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Takes in the command from the user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @return the command of the user"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        while (input.equals(\"\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Displays the task list to to the user."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param dukeStorage the storage"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void displayList(TaskList tasks, Storage dukeStorage) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_SHOWLIST"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            tasks.renewList(dukeStorage.readFromFile());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } catch (Exception exp) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            showToUser("
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    \"Something went wrong with the file.\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    \"Better say \u0027bye\u0027 now.\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            );"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (tasks.getList().isEmpty()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            showToUser("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    Message.MESSAGE_EMPTYLIST,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                    Message.MESSAGE_LINE"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            );"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                showToUser(\"     \" + (i + 1) + \". \" + tasks.getList().get(i).toString());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            showLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * Finds the tasks in the task list which contain the keyword."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     * @param item the keyword of the user-targeted tasks"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void findList(TaskList tasks, String item) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_LINE,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                Message.MESSAGE_FIND"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        );"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        int marker \u003d 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        String thisItem;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            thisItem \u003d tasks.getList().get(i).toString();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            if (thisItem.toLowerCase().contains(item.toLowerCase())) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                showToUser(\"     \" + marker + \". \" + thisItem);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "                marker++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        if (marker \u003d\u003d 1) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "            showToUser(Message.MESSAGE_NULL);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 198
    }
  },
  {
    "path": "src/main/resources/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "Class-Path: src/main/java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 5
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 10
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Hello! I\u0027m Duke "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     What can I do for you? "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     1. [T][✓] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     2. [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     3. [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     4. [T][✓] join sports club"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     5. [T][✗] borrow book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [D][✗] return book  (by: Sunday)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [E][✗] project meeting  (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     1. [T][✓] read book"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     2. [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     3. [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     4. [T][✓] join sports club"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     5. [T][✗] borrow book"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     6. [D][✗] return book  (by: Sunday)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     7. [E][✗] project meeting  (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 88
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     1. [T][✓] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     2. [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     3. [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     4. [T][✓] join sports club"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     5. [T][✗] borrow book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [D][✗] return book  (by: Sunday)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "       [E][✗] project meeting  (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     1. [T][✓] read book"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     2. [D][✗] return book  (by: June 6th)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     3. [E][✗] project meeting  (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     4. [T][✓] join sports club"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     5. [T][✗] borrow book"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     6. [D][✗] return book  (by: Sunday)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     7. [E][✗] project meeting  (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 88
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "bye"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "javac  ..\\src\\main\\java\\*.java ..\\src\\main\\java\\task\\*.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WANG-Yuchen-Alice"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "WANG-Yuchen-Alice": 21
    }
  }
]
